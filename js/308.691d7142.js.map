{"version":3,"file":"js/308.691d7142.js","mappings":"yJAOA,SAASA,EAAUC,GACjB,GAAKA,EAGL,GAFAA,EAAOA,EAAKC,cAERD,EAAKE,MAAM,kEAEb,GAAIF,EAAKE,MAAM,oCAEb,OAAIF,EAAKE,MAAM,0DACN,8BAGAF,EAAKE,MAAM,0DACX,wBAGAF,EAAKE,MAAM,mDACX,yBAIPF,EAAKE,MAAM,sCACXF,EAAKE,MAAM,6CAEJ,wBAIA,4BAKR,IAAIF,EAAKE,MAAM,4CAGlB,OAAIF,EAAKE,MAAM,sEACN,wBAEPF,EAAKE,MAAM,gFAEJ,oBACEF,EAAKE,MAAM,2DACb,gBACEF,EAAKE,MAAM,mDACb,cAEA,cAEJ,GACLF,EAAKE,MAAM,0CACXF,EAAKE,MAAM,6BACXF,EAAKE,MAAM,yCACXF,EAAKE,MAAM,2BAEX,MAAO,iBACT,CACF,CAEO,MAAMC,GAAWC,EAAAA,EAAAA,IAAY,CAClCC,GAAI,QACJC,MAAOA,KAAA,CACLC,MAAO,CACLC,KAAM,OACNC,KAAM,aAENC,KAAM,OAGNC,QAAS,UACTC,KAAM,OACNC,KAAM,UAGVC,QAAS,CAAC,EACVC,QAAS,CAOPC,KAAKhB,GACH,OAAOD,EAAUC,IAAS,IAC5B,I,6KC1FGiB,MAAM,a,GACDA,MAAM,eAAeC,IAAI,S,GAC3BD,MAAM,mC,GAEPA,MAAM,mBAAmBC,IAAI,Y,aAEzBD,MAAM,qC,cAqBNA,MAAM,c,uCAeTE,EAAAA,EAAAA,GAA8B,OAAzBF,MAAM,cAAY,W,4BAQvBE,EAAAA,EAAAA,GAA8B,OAAzBF,MAAM,cAAY,W,GAClBA,MAAM,iC,GACJA,MAAM,wB,SACsCA,MAAM,e,SAGzCA,MAAM,qB,wBAWpBE,EAAAA,EAAAA,GAAqC,MAAjCF,MAAM,0BAAwB,W,GAC7BA,MAAM,oB,GAQJA,MAAM,2B,wBA6BdG,IAAI,eAAeH,MAAM,gB,GAE3BA,MAAM,kB,UAETE,EAAAA,EAAAA,GAA+B,OAA1BF,MAAM,eAAa,W,wEA7G5BI,EAAAA,EAAAA,IA8HM,MA9HNC,EA8HM,EA7HJH,EAAAA,EAAAA,GAES,SAFTI,EAES,EADPJ,EAAAA,EAAAA,GAAuF,KAAvFK,EAA4C,SAAKC,EAAAA,EAAAA,IAAGC,EAAAjB,KAAKkB,MAAQ,QAAS,WAAQ,UAEpFR,EAAAA,EAAAA,GAsGM,MAtGNS,EAsGM,CArGOF,EAAAG,QAAK,WAAhBR,EAAAA,EAAAA,IAmGM,MAAAS,EAAA,EAlGJX,EAAAA,EAAAA,GAoBM,MApBNY,EAoBM,UApByC,gCAClBN,EAAAA,EAAAA,IAAGC,EAAAjB,KAAKkB,MAAQ,SAAJF,EAAAA,EAAAA,IAClCC,EAAAM,SAASC,KAAO,KAAKP,EAAAM,SAASC,QAAU,IAAK,OAClD,IAAAd,EAAAA,EAAAA,GAgBC,KAfCF,MAAM,iCACLiB,KAAI,SAAWR,EAAAjB,KAAK0B,OAAOjB,MAC3BkB,QAAKC,EAAA,KAAAA,EAAA,GAAAC,IAAkBA,EAAOC,iBAAiCC,EAAAC,QAAQC,KAAI,C,6BAAuEhB,EAAAjB,KAAK0B,OAAOjB,K,MAA+BsB,EAAAG,OAAOC,O,GAQpMC,OAAKC,EAAAA,EAAAA,IAAA,C,gBAAoCC,EAAAC,UAAUC,M,oBAA2CF,EAAAC,UAAUC,MAAK,S,YAItGF,EAAAC,UAAUE,YAAYH,EAAAC,UAAUf,QAAI,GAAAkB,MAGhDhC,EAAAA,EAAAA,GA4EM,MA5ENiC,EA4EM,CA1EKL,EAAAM,SACW,gBADJ,qBADhBhC,EAAAA,EAAAA,IAOE,S,2CALSK,EAAAjB,KAAKwB,KAAIK,GAClBrB,MAAM,eACNU,KAAK,OACJ2B,YAAaP,EAAAQ,UAAY,QACzBC,SAAUT,EAAAM,S,kBAJF3B,EAAAjB,KAAKwB,SAAI,SAMpBd,EAAAA,EAAAA,GAKE,SAJAQ,KAAK,OACLV,MAAM,gC,qCACGS,EAAAjB,KAAKgD,KAAInB,GACjBO,OAAKC,EAAAA,EAAAA,IAAA,CAAAY,SAAcX,EAAAM,QAAU,OAAS,Q,eAD9B3B,EAAAjB,KAAKgD,QAGhBE,GAA8B,SAC9BxC,EAAAA,EAAAA,GAMW,Y,qCALAO,EAAAjB,KAAKmD,YAAWtB,GACzBrB,MAAM,gDACNU,KAAK,OACJ2B,YAAaP,EAAAQ,WAAaR,EAAAM,QAAU,YAAc,4BACpD,iBACD,EAAAQ,GAAA,OALWnC,EAAAjB,KAAKmD,eAMhBE,GACA3C,EAAAA,EAAAA,GAmDM,MAnDN4C,EAmDM,EAlDJ5C,EAAAA,EAAAA,GAcM,MAdN6C,EAcM,CAbStC,EAAAjB,KAAKwD,OAAUvC,EAAAjB,KAAKwD,MAAMC,SACJ,WAEnC7C,EAAAA,EAAAA,IASM,MATN8C,EASM,gBARJ9C,EAAAA,EAAAA,IAOC+C,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAJgB3C,EAAAjB,KAAKwD,OAAbK,K,WAHTjD,EAAAA,EAAAA,IAOC,KANCJ,MAAM,oDACNsD,OAAO,SAENC,IAAKF,EAAKtE,KACVoC,QAAKE,GAAES,EAAA0B,YAAYH,K,QAChBA,EAAKtD,MAAI,EAAA0D,M,WAV4B,WAA7CrD,EAAAA,EAAAA,IAEC,OAFDsD,GAEClD,EAAAA,EAAAA,IADKsB,EAAAQ,WAAY,oBAAiB,MAarCqB,GACAzD,EAAAA,EAAAA,GAiCM,MAjCN0D,EAiCM,WAhCJ1D,EAAAA,EAAAA,GAME,SALAF,MAAM,yBACNU,KAAK,M,qCACID,EAAAoD,QAAQ9E,KAAIsC,GACpByC,OAAI1C,EAAA,KAAAA,EAAA,OAAA2C,IAAEjC,EAAAkC,kBAAAlC,EAAAkC,oBAAAD,IACP1B,YAAY,iC,iBAFH5B,EAAAoD,QAAQ9E,SAInBmB,EAAAA,EAAAA,GAiBM,MAjBN+D,EAiBM,WAhBJ/D,EAAAA,EAAAA,GAKE,SAJAF,MAAM,yBACNU,KAAK,O,qCACID,EAAAoD,QAAQ9D,KAAIsB,GACrBgB,YAAY,iC,iBADH5B,EAAAoD,QAAQ9D,QAKWU,EAAAoD,QAAQ9E,MAA6B+C,EAAAoC,MAAMnE,KAAKU,EAAAoD,QAAQ9E,OAA8B+C,EAAAoC,MAAMnE,KAAKU,EAAAoD,QAAQ9E,OAAS0B,EAAAoD,QAAQ9D,OAAI,WAF5JK,EAAAA,EAAAA,IASO,O,MARLJ,MAAM,4BAMLmB,QAAKC,EAAA,KAAAA,EAAA,GAAAC,GAAEZ,EAAAoD,QAAQ9D,KAAO+B,EAAAoC,MAAMnE,KAAKU,EAAAoD,QAAQ9E,OAC1CoF,MAAM,8B,kBAGVjE,EAAAA,EAAAA,GAMS,UALPF,MAAM,2BACLmB,QAAKC,EAAA,KAAAA,EAAA,OAAA2C,IAAEjC,EAAAsC,aAAAtC,EAAAsC,eAAAL,IACPxB,SAAUT,EAAAuC,mBACZ,QAED,EAAAC,cAAA,WAKRlE,EAAAA,EAAAA,IAAsD,MAAtDmE,KAAsD,MAExDrE,EAAAA,EAAAA,GAkBM,MAlBNsE,EAkBM,EAjBJtE,EAAAA,EAAAA,GAAiF,UAAzEF,MAAM,4BAA6BmB,QAAKC,EAAA,KAAAA,EAAA,GAAAC,GAAEE,EAAAkD,MAAM,WAAU,UAClEC,GACAxE,EAAAA,EAAAA,GAMS,UALPF,MAAM,gCACLmB,QAAKC,EAAA,MAAAA,EAAA,QAAA2C,IAAEjC,EAAA6C,cAAA7C,EAAA6C,gBAAAZ,IACPxB,UAAW9B,EAAAG,OAASH,EAAAmE,SACtB,YAED,EAAAC,IACA3E,EAAAA,EAAAA,GAOS,UANPF,OAAK8E,EAAAA,EAAAA,IAAA,CAAC,kCAAiC,CAAAC,WACjBtE,EAAAmE,WACrBzD,QAAKC,EAAA,MAAAA,EAAA,QAAA2C,IAAEjC,EAAAkD,YAAAlD,EAAAkD,cAAAjB,IACPxB,SAAUT,EAAAmD,iBACZ,UACMzE,EAAAA,EAAAA,IAAGC,EAAAjB,KAAKkB,MAAQ,QAAJ,GAAAwE,M,gEAuBzB,GACElE,KAAM,eACNmE,MAAO,CAAC,SACRC,OAAQ,CAACC,KACTC,OACE,MAAO,CACL9F,KAAM,CAAC,EACPuB,SAAU,CAAC,EACX8C,QAAS,CACP9D,KAAM,GACNhB,KAAM,IAER6B,OAAO,EACPgE,SAAS,EAEb,EACAW,UACEC,KAAKC,cAAc,CACjBC,GAAIF,KAAKG,MAAMC,SACfC,kBAAkB,IAEpBL,KAAKC,cAAc,CACjBC,GAAIF,KAAKG,MAAMxB,MACf2B,cAAc,IAEhBN,KAAKO,UACP,EACAC,SAAU,CACRf,kBACE,OACGO,KAAKS,UACJT,KAAKhG,KAAKwB,OAASwE,KAAKpD,UACzBoD,KAAKhG,KAAKgD,MACVgD,KAAKpD,UAAYoD,KAAKhG,KAAKmD,WAEhC,EACAL,YACE,OAAOkD,KAAKtB,MAAMsB,KAAKhG,KAAKkB,OAAS8E,KAAKhG,KAAKkB,MAAQ,MACzD,EACA2D,oBAEE,OAAQmB,KAAK3B,QAAQ9E,OAASyG,KAAK3B,QAAQ9D,OAASyF,KAAK3B,QAAQ9E,KAAKmH,WAAW,OACnF,EACAnE,YACE,IAAIoE,EAAUX,KAAKY,OAAOD,QAC1B,OAAKA,EACEA,EAAQE,MAAMtE,GAAcA,EAAU3C,KAAOoG,KAAKzE,SAASuF,YAAa,CAAC,EAD3D,IAEvB,EACAF,QACE,OAAOG,EAAAA,EAAAA,IACT,EACArC,QACE,OAAOhF,EAAAA,EAAAA,IACT,EACAkD,UACE,MAA0B,SAAnBoD,KAAKhG,KAAKkB,IACnB,EACAuF,UACE,OAAOO,KAAKC,UAAUjB,KAAKhG,QAAUgH,KAAKC,UAAUjB,KAAKzE,SAC3D,EACAyB,OACE,IAAIA,GAAOkE,EAAAA,EAAAA,IAAclB,KAAKhG,MAAMgD,MACpC,IAAImE,MAAMnE,EAAKoE,WAIf,OAFApE,EAAO,IAAIqE,KAAKrE,EAAKoE,UAAuC,GAA3BpE,EAAKsE,oBAA2B,KAE1D,IAAID,KAAKrE,GAAMuE,wBAAmBC,EAAW,CAClDC,QAAS,OACTC,MAAO,OACPC,IAAK,WAET,GAEFC,QAAS,CACPpC,aACOQ,KAAKP,gBAEEO,KAAKS,QAGf,IAAIoB,EAAAA,GAAa,sCAAuC,KAFxD,IAAIA,EAAAA,GAAa,uBAAwB,KAFzC7B,KAAK8B,aAMT,EACAlD,cACOoB,KAAKhG,KAAKwD,QAAOwC,KAAKhG,KAAKwD,MAAQ,IAExCwC,KAAK3B,QAAQ9E,KAAO,IAAIwI,IAAI/B,KAAK3B,QAAQ9E,MAAMkC,KAC/CuE,KAAKhG,KAAKwD,MAAMvB,KAAK+D,KAAK3B,SAC1B2B,KAAKhG,KAAKwD,MAAQ,IAAI,IAAIwE,IAAIhC,KAAKhG,KAAKwD,QACxCwC,KAAK3B,QAAU,CACb9D,KAAM,GACNhB,KAAM,GAEV,EACA0I,oBACOjC,KAAKnB,mBAIVmB,KAAKZ,SAAU,EACfY,KAAKY,MACFkB,YAAY9B,KAAKhG,KAAKS,IAAKuF,KAAKhG,MAChCkI,MAAK,KAGJlC,KAAKhE,QAAQC,KAAK,CAChBT,KAAM,WACN2G,OAAQ,CACN1H,IAAKuF,KAAK9D,OAAOiG,OAAO1H,KAE1B0B,MAAO6D,KAAK9D,OAAOC,OACnB,IAEHiG,OAAOC,IACNrC,KAAKZ,SAAU,EACfkD,EAAAA,GAAQC,MAAO,+BAA8BvC,KAAKhG,KAAKkB,MAAQ,UAAWmH,GAC1E,IAAIG,EAAAA,GAAY,iBAAgBxC,KAAKhG,KAAKkB,MAAQ,SAAUmH,EAAK,IAAK,KApBxE,IAAIR,EAAAA,GAAa,8DAA+D,IAsBpF,EACA1C,eACEa,KAAKhE,QAAQC,KAAK,CAChBT,KAAM,UACN2G,OAAQ,CACNjH,KAAM8E,KAAKhG,KAAKkB,KAChBT,IAAKuF,KAAK9D,OAAOiG,OAAO1H,KAE1B0B,MAAO,CACLwC,MAAOqB,KAAKpD,QAAUoD,KAAKhG,KAAKmD,YAAc6C,KAAKhG,KAAKwB,QACrDwE,KAAK9D,OAAOC,QAGrB,EACA8F,iBAEE,MAAMxH,EAAMuF,KAAK9D,OAAOiG,OAAO1H,IAAIgI,MAAM,KAAKC,KAAK,KAC9CjI,EAGMA,EAAIgI,MAAM,KAAKhF,OAAS,IACjC,IAAIoE,EAAAA,GAAa,yBAA0B,MAC3C7B,KAAKf,MAAM,WAJX,IAAI4C,EAAAA,GAAa,oBAAqB,MACtC7B,KAAKf,MAAM,UAMbe,KAAKY,MACF+B,cAAclI,GACdyH,MAAMlI,IACAA,GAKHgG,KAAKhG,KAAOA,EAEZgG,KAAKzE,SAAWyF,KAAK4B,MAAM5B,KAAKC,UAAUjH,IAC1CgG,KAAK5E,OAAQ,EACb4E,KAAKZ,SAAU,IARf,IAAIyC,EAAAA,GAAa,0BAA2B,KAC5CS,EAAAA,GAAQO,KAAK,wBACb7C,KAAKf,MAAM,SAOb,IAEDmD,OAAOC,IACN,IAAIG,EAAAA,GAAW,qBAAsBH,EAAK,MAC1CC,EAAAA,GAAQC,MAAM,uBAAwBF,GACtCrC,KAAKf,MAAM,QAAQ,GAEzB,EACAjB,YAAYH,GACVmC,KAAKhG,KAAKwD,MAAQwC,KAAKhG,KAAKwD,MAAMsF,QAAQC,GAAMA,EAAExJ,OAASsE,EAAKtE,OAChEyG,KAAK3B,QAAUR,CACjB,EACAW,mBACE,GAAIwB,KAAK3B,QAAQ9E,MAAQyG,KAAK3B,QAAQ9E,KAAKyJ,SAAS,KAClD,IACEhD,KAAK3B,QAAQ9E,KAAO,IAAIwI,IAAI/B,KAAK3B,QAAQ9E,MAAMkC,IACjD,CAAE,MAAO4G,GAEPrC,KAAK3B,QAAQ9E,KAAO,WAAayG,KAAK3B,QAAQ9E,KAC9CyG,KAAKxB,kBACP,CAEJ,I,QC9TJ,MAAMyE,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://mvtime/./src/store/magic.js","webpack://mvtime/./src/views/Portal/EditTask.vue","webpack://mvtime/./src/views/Portal/EditTask.vue?ea5e"],"sourcesContent":["// Path: store/magic.js\r\n\r\n// setup Pinia store\r\n// import { _status } from \"@/common\";\r\nimport { defineStore } from \"pinia\";\r\n\r\n// Smart URL\r\nfunction smart_url(path) {\r\n  if (!path) return;\r\n  path = path.toLowerCase();\r\n  /**  Google Suite **/\r\n  if (path.match(/https:\\/\\/[a-zA-Z0-9]+.google.com\\/[a-zA-Z0-9]+\\/[a-zA-Z0-9]+/)) {\r\n    // Google Classroom\r\n    if (path.match(/https:\\/\\/classroom.google.com*./)) {\r\n      // Google Classroom assignment (classroom.google.com/c/.../a/...)\r\n      if (path.match(/https:\\/\\/classroom.google.com\\/c\\/[a-zA-Z0-9]+\\/a\\/*./)) {\r\n        return \"Google Classroom Assignment\";\r\n      }\r\n      // Google Classroom post (classroom.google.com/c/.../p/...)\r\n      else if (path.match(/https:\\/\\/classroom.google.com\\/c\\/[a-zA-Z0-9]+\\/p\\/*./)) {\r\n        return \"Google Classroom Post\";\r\n      }\r\n      // Google Classroom class (classroom.google.com/c/...)\r\n      else if (path.match(/https:\\/\\/classroom.google.com\\/c\\/[a-zA-Z0-9]+/)) {\r\n        return \"Google Classroom Class\";\r\n      }\r\n      // Google Classroom home\r\n      else if (\r\n        path.match(/https:\\/\\/classroom.google.com\\/h/) ||\r\n        path.match(/https:\\/\\/classroom.google.com\\/u\\/[0-9]+/)\r\n      ) {\r\n        return \"Google Classroom Home\";\r\n      }\r\n      // Everything Else\r\n      else {\r\n        return \"Google Classroom Link\";\r\n      }\r\n    }\r\n  }\r\n  // Canvas\r\n  else if (path.match(/https:\\/\\/[a-zA-Z0-9]+.instructure.com*./)) {\r\n    // Canvas Assignment\r\n\r\n    if (path.match(/https:\\/\\/[a-zA-Z0-9]+.instructure.com\\/courses\\/[0-9]+\\/modules*./)) {\r\n      return \"Canvas Course Modules\";\r\n    } else if (\r\n      path.match(/https:\\/\\/[a-zA-Z0-9]+.instructure.com\\/courses\\/[0-9]+\\/assignments\\/[0-9]+/)\r\n    ) {\r\n      return \"Canvas Assignment\";\r\n    } else if (path.match(/https:\\/\\/[a-zA-Z0-9]+.instructure.com\\/courses\\/[0-9]+/)) {\r\n      return \"Canvas Course\";\r\n    } else if (path.match(/https:\\/\\/[a-zA-Z0-9]+.instructure.com\\/courses/)) {\r\n      return \"Canvas Home\";\r\n    } else {\r\n      return \"Canvas Link\";\r\n    }\r\n  } else if (\r\n    path.match(/https:\\/\\/[a-zA-Z0-9]+.lon-capa.net*./) ||\r\n    path.match(/https:\\/\\/lon-capa.net*./) ||\r\n    path.match(/https:\\/\\/[a-zA-Z0-9]+.loncapa.net*./) ||\r\n    path.match(/https:\\/\\/loncapa.net*./)\r\n  ) {\r\n    return \"LON-CAPA Portal\";\r\n  }\r\n}\r\n\r\nexport const useMagic = defineStore({\r\n  id: \"magic\",\r\n  state: () => ({\r\n    types: {\r\n      note: \"Note\",\r\n      task: \"Assignment\",\r\n      // socratic: \"Socratic Seminar\",\r\n      test: \"Test\",\r\n      // summative: \"Summative Assignment\",\r\n      // midterm: \"Midterm\",\r\n      project: \"Project\",\r\n      quiz: \"Quiz\",\r\n      exam: \"Exam\",\r\n    },\r\n  }),\r\n  getters: {},\r\n  actions: {\r\n    /**\r\n     * @function path\r\n     * @description get the smart text associated with a given url\r\n     * @param {String} path\r\n     * @returns {String} text - the smart text associated with the url\r\n     */\r\n    text(path) {\r\n      return smart_url(path) || null;\r\n    },\r\n    // /**\r\n    //  * @function type\r\n    //  * @description get the smart type associated with a given description\r\n    //  * @param {String} text\r\n    //  */\r\n    // type(text) {\r\n    //   return text;\r\n    // },\r\n  },\r\n});\r\n","<template>\r\n  <div class=\"edit_task\">\r\n    <header class=\"modal_header\" ref=\"title\">\r\n      <h2 class=\"header_style modal_header_title\">Edit {{ task.type || \"task\" }} details</h2>\r\n    </header>\r\n    <div class=\"overlay_contents\" ref=\"contents\">\r\n      <div v-if=\"ready\">\r\n        <div class=\"overlay_contents_text change_text\">\r\n          Change the details of your {{ task.type || \"task\"\r\n          }}{{ original.name ? ` \"${original.name}\"` : \"\" }} in\r\n          <a\r\n            class=\"class_name button_pointer_text\"\r\n            :href=\"`/view/${task._class.ref}`\"\r\n            @click=\"\r\n              $event.preventDefault();\r\n              $router.push({\r\n                name: 'viewclass',\r\n                params: { ref: task._class.ref },\r\n                query: $route.query,\r\n              });\r\n            \"\r\n            :style=\"{\r\n              '--color-class': class_obj.color,\r\n              '--color-class-alt': class_obj.color + '2d',\r\n            }\"\r\n            >{{ `P${class_obj.period} - ${class_obj.name}` }}</a\r\n          >\r\n        </div>\r\n        <div class=\"inputs_row\">\r\n          <input\r\n            v-if=\"!is_note\"\r\n            v-model=\"task.name\"\r\n            class=\"styled_input\"\r\n            type=\"text\"\r\n            :placeholder=\"type_full + ' Name'\"\r\n            :disabled=\"is_note\"\r\n          />\r\n          <input\r\n            type=\"date\"\r\n            class=\"styled_input input_task__date\"\r\n            v-model=\"task.date\"\r\n            :style=\"{ maxWidth: is_note ? '100%' : null }\"\r\n          />\r\n          <div class=\"flex-break\"></div>\r\n          <textarea\r\n            v-model=\"task.description\"\r\n            class=\"styled_input styled_textarea task_description\"\r\n            type=\"text\"\r\n            :placeholder=\"type_full + (is_note ? ' Contents' : ' Description (Optional)')\"\r\n          >\r\n          </textarea>\r\n          <div class=\"flex-break\"></div>\r\n          <div class=\"styled_input styled_links_box\">\r\n            <div class=\"styled_links_display\">\r\n              <span v-if=\"!task.links || !task.links.length\" class=\"placeholder\"\r\n                >{{ type_full }} Links (Optional)</span\r\n              >\r\n              <div v-else class=\"styled_line_links\">\r\n                <a\r\n                  class=\"styled_line_links__link styled_line_links__remove\"\r\n                  target=\"_blank\"\r\n                  v-for=\"link in task.links\"\r\n                  :key=\"link.path\"\r\n                  @click=\"remove_link(link)\"\r\n                  >{{ link.text }}</a\r\n                >\r\n              </div>\r\n            </div>\r\n            <hr class=\"styled_links_separator\" />\r\n            <div class=\"styled_links_add\">\r\n              <input\r\n                class=\"styled_links_add__path\"\r\n                type=\"url\"\r\n                v-model=\"newlink.path\"\r\n                @blur=\"fix_newlink_path\"\r\n                placeholder=\"Link URL (http://example.com)\"\r\n              />\r\n              <div class=\"styled_links_add__sized\">\r\n                <input\r\n                  class=\"styled_links_add__text\"\r\n                  type=\"text\"\r\n                  v-model=\"newlink.text\"\r\n                  placeholder=\"Link Text (what students see)\"\r\n                />\r\n                <div\r\n                  class=\"styled_magic click-action\"\r\n                  v-if=\"\r\n                    newlink.path &&\r\n                    magic.text(newlink.path) &&\r\n                    magic.text(newlink.path) != newlink.text\r\n                  \"\r\n                  @click=\"newlink.text = magic.text(newlink.path)\"\r\n                  title=\"Auto-generate link text\"\r\n                ></div>\r\n              </div>\r\n              <button\r\n                class=\"styled_links_add__action\"\r\n                @click=\"add_newlink\"\r\n                :disabled=\"newlink_not_ready\"\r\n              >\r\n                Add\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <img alt=\"Loading Icon\" class=\"loading_icon\" v-else />\r\n    </div>\r\n    <div class=\"bottom_actions\">\r\n      <button class=\"close_action click_escape\" @click=\"$emit('close')\">Cancel</button>\r\n      <div class=\"flex_spacer\"></div>\r\n      <button\r\n        class=\"archive_action primary_styled\"\r\n        @click=\"archive_task\"\r\n        :disabled=\"!ready || loading\"\r\n      >\r\n        Archive\r\n      </button>\r\n      <button\r\n        class=\"continue_action click_ctrlenter\"\r\n        :class=\"{ loading_bg: loading }\"\r\n        @click=\"try_submit\"\r\n        :disabled=\"not_submittable\"\r\n      >\r\n        Save {{ task.type || \"task\" }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/**\r\n * Creates a new task for the teacher's selected class(es).\r\n *\r\n * @module CreateTaskView\r\n * @description Modal that allows teacher's to create a new task for their classes.\r\n * @param {string} tasktype - The type of task to create (task, project, test, etc.) Provided by the router.\r\n * @requires module:store/MainStore\r\n * @emits {Function} close - An event emitted when the task is created or the modal is closed.\r\n */\r\n\r\nimport { useMainStore } from \"@/store\";\r\nimport { useMagic } from \"@/store/magic\";\r\nimport { _status, compatDateObj } from \"@/common\";\r\nimport { ErrorToast, WarningToast } from \"@svonk/util\";\r\nimport smoothReflow from \"vue-smooth-reflow\";\r\n\r\nexport default {\r\n  name: \"EditTaskView\",\r\n  emits: [\"close\"],\r\n  mixins: [smoothReflow],\r\n  data() {\r\n    return {\r\n      task: {},\r\n      original: {},\r\n      newlink: {\r\n        text: \"\",\r\n        path: \"\",\r\n      },\r\n      ready: false,\r\n      loading: true,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.$smoothReflow({\r\n      el: this.$refs.contents,\r\n      childTransitions: true,\r\n    });\r\n    this.$smoothReflow({\r\n      el: this.$refs.title,\r\n      hideOverflow: true,\r\n    });\r\n    this.get_task();\r\n  },\r\n  computed: {\r\n    not_submittable() {\r\n      return (\r\n        !this.changed ||\r\n        (!this.task.name && !this.is_note) ||\r\n        !this.task.date ||\r\n        (this.is_note && !this.task.description)\r\n      );\r\n    },\r\n    type_full() {\r\n      return this.magic[this.task.type] || this.task.type || \"Task\";\r\n    },\r\n    newlink_not_ready() {\r\n      // check if path and text, and also that path is a valid url\r\n      return !this.newlink.path || !this.newlink.text || !this.newlink.path.startsWith(\"http\");\r\n    },\r\n    class_obj() {\r\n      let classes = this.store?.classes;\r\n      if (!classes) return null;\r\n      return classes.find((class_obj) => class_obj.id === this.original.class_id) || {};\r\n    },\r\n    store() {\r\n      return useMainStore();\r\n    },\r\n    magic() {\r\n      return useMagic();\r\n    },\r\n    is_note() {\r\n      return this.task.type === \"note\";\r\n    },\r\n    changed() {\r\n      return JSON.stringify(this.task) !== JSON.stringify(this.original);\r\n    },\r\n    date() {\r\n      let date = compatDateObj(this.task?.date);\r\n      if (isNaN(date.getTime())) return;\r\n      // read it as being in the current timezone\r\n      date = new Date(date.getTime() + date.getTimezoneOffset() * 60 * 1000);\r\n\r\n      return new Date(date).toLocaleDateString(undefined, {\r\n        weekday: \"long\",\r\n        month: \"long\",\r\n        day: \"numeric\",\r\n      });\r\n    },\r\n  },\r\n  methods: {\r\n    try_submit() {\r\n      if (!this.not_submittable) {\r\n        this.update_task();\r\n      } else if (!this.changed) {\r\n        new WarningToast(\"No changes to submit\", 1000);\r\n      } else {\r\n        new WarningToast(\"Please fill out all required fields\", 1000);\r\n      }\r\n    },\r\n    add_newlink() {\r\n      if (!this.task.links) this.task.links = [];\r\n      // add protocol if missing\r\n      this.newlink.path = new URL(this.newlink.path).href;\r\n      this.task.links.push(this.newlink);\r\n      this.task.links = [...new Set(this.task.links)];\r\n      this.newlink = {\r\n        text: \"\",\r\n        path: \"\",\r\n      };\r\n    },\r\n    async update_task() {\r\n      if (!this.newlink_not_ready) {\r\n        new WarningToast(\"Don't forget to to click the 'Add' button to add your link!\", 2000);\r\n        return;\r\n      }\r\n      this.loading = true;\r\n      this.store\r\n        .update_task(this.task.ref, this.task)\r\n        .then(() => {\r\n          // this.$emit(\"close\");\r\n          // redirect to view\r\n          this.$router.push({\r\n            name: \"viewtask\",\r\n            params: {\r\n              ref: this.$route.params.ref,\r\n            },\r\n            query: this.$route.query,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          this.loading = false;\r\n          _status.error(`📃 Couldn't save changes to ${this.task.type || \"task\"}:`, err);\r\n          new ErrorToast(`Couldn't edit ${this.task.type || \"task\"}`, err, 2000);\r\n        });\r\n    },\r\n    archive_task() {\r\n      this.$router.push({\r\n        name: \"archive\",\r\n        params: {\r\n          type: this.task.type,\r\n          ref: this.$route.params.ref,\r\n        },\r\n        query: {\r\n          title: this.is_note ? this.task.description : this.task.name,\r\n          ...this.$route.query,\r\n        },\r\n      });\r\n    },\r\n    async get_task() {\r\n      // get task ref from route params\r\n      const ref = this.$route.params.ref.split(\"~\").join(\"/\");\r\n      if (!ref) {\r\n        new WarningToast(\"No task specified\", 1500);\r\n        this.$emit(\"close\");\r\n      } else if (ref.split(\"/\").length < 3) {\r\n        new WarningToast(\"Invalid task specified\", 1500);\r\n        this.$emit(\"close\");\r\n      }\r\n      // get task from store\r\n      this.store\r\n        .task_from_ref(ref)\r\n        .then((task) => {\r\n          if (!task) {\r\n            new WarningToast(\"Couldn't find that task\", 2000);\r\n            _status.warn(\"⚠ Couldn't find task\");\r\n            this.$emit(\"close\");\r\n          } else {\r\n            this.task = task;\r\n            // set original to be unconnected copy of task\r\n            this.original = JSON.parse(JSON.stringify(task));\r\n            this.ready = true;\r\n            this.loading = false;\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          new ErrorToast(\"Error getting task\", err, 1500);\r\n          _status.error(\"⚠ Error getting task\", err);\r\n          this.$emit(\"close\");\r\n        });\r\n    },\r\n    remove_link(link) {\r\n      this.task.links = this.task.links.filter((l) => l.path !== link.path);\r\n      this.newlink = link;\r\n    },\r\n    fix_newlink_path() {\r\n      if (this.newlink.path && this.newlink.path.includes(\".\")) {\r\n        try {\r\n          this.newlink.path = new URL(this.newlink.path).href;\r\n        } catch (err) {\r\n          // add protocol if missing\r\n          this.newlink.path = \"https://\" + this.newlink.path;\r\n          this.fix_newlink_path();\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.checkboxes {\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  align-items: flex-start;\r\n  margin-top: 0.5rem;\r\n}\r\n.checkbox {\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  align-items: center;\r\n  margin-top: 0.5rem;\r\n}\r\n.checkbox label {\r\n  padding-left: 0.5rem;\r\n  user-select: none;\r\n  cursor: pointer;\r\n}\r\n.input_task__date {\r\n  max-width: 150px;\r\n}\r\n.inputs_row {\r\n  flex-flow: row wrap;\r\n}\r\n.input_task__date {\r\n  margin-right: 0;\r\n}\r\n.styled_input.input_task__date {\r\n  margin-right: 0;\r\n}\r\nselect.type_dropdown {\r\n  padding: 5px;\r\n  background-color: var(--color-overlay-input);\r\n  color: var(--color-on-overlay-input);\r\n  border: none;\r\n  border-radius: var(--radius-overlay-input);\r\n  width: auto;\r\n}\r\n.type_dropdown__option {\r\n  font-size: 14px;\r\n}\r\n.loading_icon {\r\n  max-height: 150px;\r\n  min-width: 100%;\r\n}\r\n</style>\r\n","import { render } from \"./EditTask.vue?vue&type=template&id=1bb3ced7&scoped=true\"\nimport script from \"./EditTask.vue?vue&type=script&lang=js\"\nexport * from \"./EditTask.vue?vue&type=script&lang=js\"\n\nimport \"./EditTask.vue?vue&type=style&index=0&id=1bb3ced7&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\sande\\\\Documents\\\\GitHub\\\\mvtime.github.io\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1bb3ced7\"]])\n\nexport default __exports__"],"names":["smart_url","path","toLowerCase","match","useMagic","defineStore","id","state","types","note","task","test","project","quiz","exam","getters","actions","text","class","ref","_createElementVNode","alt","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","$data","type","_hoisted_4","ready","_hoisted_5","_hoisted_6","original","name","href","_class","onClick","_cache","$event","preventDefault","_ctx","$router","push","$route","query","style","_normalizeStyle","$options","class_obj","color","period","_hoisted_7","_hoisted_8","is_note","placeholder","type_full","disabled","date","maxWidth","_hoisted_10","description","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","links","length","_hoisted_16","_Fragment","_renderList","link","target","key","remove_link","_hoisted_17","_hoisted_15","_hoisted_18","_hoisted_19","newlink","onBlur","args","fix_newlink_path","_hoisted_20","magic","title","add_newlink","newlink_not_ready","_hoisted_21","_hoisted_22","_hoisted_23","$emit","_hoisted_24","archive_task","loading","_hoisted_25","_normalizeClass","loading_bg","try_submit","not_submittable","_hoisted_26","emits","mixins","smoothReflow","data","mounted","this","$smoothReflow","el","$refs","contents","childTransitions","hideOverflow","get_task","computed","changed","startsWith","classes","store","find","class_id","useMainStore","JSON","stringify","compatDateObj","isNaN","getTime","Date","getTimezoneOffset","toLocaleDateString","undefined","weekday","month","day","methods","WarningToast","update_task","URL","Set","async","then","params","catch","err","_status","error","ErrorToast","split","join","task_from_ref","parse","warn","filter","l","includes","__exports__","render"],"sourceRoot":""}