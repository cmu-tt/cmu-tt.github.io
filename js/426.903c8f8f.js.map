{"version":3,"file":"js/426.903c8f8f.js","mappings":"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","sources":["webpack://mvtime/./node_modules/parse-css-transition/index.js","webpack://mvtime/./node_modules/parse-css-transition/to-millies.js","webpack://mvtime/./src/views/Portal/DailySurvey.vue","webpack://mvtime/./src/components/ModalFromPages.vue","webpack://mvtime/./src/components/Modal.vue","webpack://mvtime/./node_modules/vue-smooth-height/src/index.js","webpack://mvtime/./src/components/Modal.vue?db1b","webpack://mvtime/./src/components/ModalFromPages.vue?22c9","webpack://mvtime/./src/views/Portal/DailySurvey.vue?7c17"],"sourcesContent":["const toMillies = require('./to-millies');\n\nfunction isTime(value) {\n  return /^-?(0?\\.)?\\d+m?s$/.test(value);\n}\n\nfunction parseSingleTransition(transition) {\n  const [\n    name,\n    duration,\n    timingFunctionOrDelay,\n    delay,\n  ] = transition\n    .split(/\\s+/)\n\n  if (isTime(timingFunctionOrDelay)) {\n    return {\n      delay: toMillies(timingFunctionOrDelay),\n      duration: toMillies(duration),\n      name,\n    };\n  }\n\n  return {\n    delay: toMillies(delay),\n    duration: toMillies(duration),\n    name,\n    timingFunction: timingFunctionOrDelay,\n  };\n}\n\nfunction parseCssTransition(transition) {\n  return transition\n    .split(',')\n    .map(value => value.trim())\n    .filter(value => value.length > 0)\n    .map(parseSingleTransition);\n}\n\nmodule.exports = parseCssTransition;\n","\nfunction toMillies(value) {\n  if (!value) {\n    return;\n  }\n\n  const isMillies = value.endsWith('ms');\n\n  return parseFloat(value) * (isMillies ? 1 : 1000);\n}\n\nmodule.exports = toMillies;\n","<template>\r\n  <ModalFromPages :pages=\"pages\" @finish=\"saveResponses\"></ModalFromPages>\r\n</template>\r\n\r\n<script>\r\n/* eslint-disable vue/no-unused-components */\r\nimport ModalFromPages from \"@/components/ModalFromPages.vue\";\r\nimport { _statuslog } from \"../../common\";\r\n// Mark all components passed into page.content with shallowRef(Component)\r\n// import { shallowRef } from \"vue\";\r\nexport default {\r\n  name: \"DailySurvey\",\r\n  components: {\r\n    ModalFromPages,\r\n    // import page components below\r\n  },\r\n  data: () => {\r\n    return {\r\n      pages: [\r\n        {\r\n          title: \"Daily Survey\",\r\n          html: `<p>Thank you for taking the time to complete these questions. Your input helps us make this tool more widely avaliable to students and staff!</p>\r\n                 <br />\r\n                 <p>For each question, please select the answer that best describes your situation.</p>`,\r\n          submit_text: \"Okay\",\r\n        },\r\n        {\r\n          title: \"Uh oh!\",\r\n          html: `<p>This feature is still being implemented, thanks for checking it out!</p>`,\r\n          submit_text: \"Will do!\",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    saveResponses(responses) {\r\n      // save responses to database\r\n      _statuslog(\"Survey responses:\", responses);\r\n      // remove onbeforeunload listener\r\n      window.onbeforeunload = null;\r\n      // finish\r\n      this.$router.push(\"/portal\");\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n","<template>\r\n  <Modal\r\n    @open=\"switch_to\"\r\n    :title=\"page.title\"\r\n    :content=\"page.content\"\r\n    :html=\"page.content ? null : page.html\"\r\n    :is_notification=\"page.is_notification\"\r\n    :submit_text=\"page.submit_text\"\r\n    :progress=\"{\r\n      current: page_index + 1,\r\n      total: pages.length,\r\n    }\"\r\n    :can_continue=\"can_continue\"\r\n    :continue_action=\"next_page\"\r\n    :show_progress=\"true\"\r\n  ></Modal>\r\n</template>\r\n\r\n<script>\r\n/**\r\n * @file ModalFromPages.vue\r\n * @displayName Modal from Pages\r\n * @description A modal view that displays a series of pages as a modal with progression.\r\n * @property {Array} pages - An array of page objects, each with a title (String) and content (Component) or html (String), and most importantly a getData() method.\r\n * @emits {Array} finish - Emitted when the user has finished all pages, with an array of responses from each page.\r\n */\r\nwindow.onbeforeunload = confirm_unfinished;\r\nfunction confirm_unfinished() {\r\n  // message irrelevant for most browsers, but nice to have\r\n  return \"You haven't finished the task yet, and might lose progress. Are you sure you want to close the tab?\";\r\n}\r\nimport ModalVue from \"@/components/Modal.vue\";\r\nimport { _statuslog } from \"@/common\";\r\nexport default {\r\n  name: \"ModalFromPages\",\r\n  emits: [\"finish\"],\r\n  components: {\r\n    Modal: ModalVue,\r\n  },\r\n  props: {\r\n    pages: {\r\n      type: Array,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      page_index: 0,\r\n      responses: [],\r\n    };\r\n  },\r\n  computed: {\r\n    page() {\r\n      if (this.pages.length == 0) {\r\n        return {\r\n          title: \"No pages provided\",\r\n          content: null,\r\n          html: null,\r\n          is_notification: true,\r\n        };\r\n      }\r\n      return this.pages[this.page_index];\r\n    },\r\n    can_continue() {\r\n      // check if content component has a can_continue method\r\n      if (this.page.content && this.page.content.can_continue) {\r\n        return this.page.content.can_continue();\r\n      } else {\r\n        return true;\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    switch_to(page_index) {\r\n      _statuslog(`ModalFromPages: switching to page ${page_index}`);\r\n      // switch to page at index, as long as it is before the current, or already completed\r\n      if (page_index <= this.page_index) {\r\n        this.page_index = page_index;\r\n      } else if (\r\n        // check that the previous response is not empty, can be null\r\n        Object.prototype.hasOwnProperty.call(this.responses, Math.max(page_index - 1, 0))\r\n      ) {\r\n        this.page_index = page_index;\r\n      } else {\r\n        _statuslog(\r\n          `ModalFromPages: page index ${page_index} invalid, must be before current page index ${this.page_index} or the first incomplete page`\r\n        );\r\n      }\r\n    },\r\n    next_page() {\r\n      // get responses from current component and add to responses array\r\n      if (this.can_continue && this.page) {\r\n        if (this.page.content && this.page.content.getData) {\r\n          this.responses[this.page_index] = this.page.content.getData();\r\n        } else {\r\n          this.responses[this.page_index] = null;\r\n          _statuslog(\r\n            `ModalFromPages: page \"${this.page.title}\" content does not have getData() method`\r\n          );\r\n        }\r\n      }\r\n      if (this.can_continue && this.page_index < this.pages.length - 1) {\r\n        // switch to next page\r\n        this.page_index++;\r\n      } else if (this.can_continue) {\r\n        // emit responses\r\n        this.$emit(\"finish\", this.responses);\r\n        // leave the rest up to the parent component\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped></style>\r\n","<template>\r\n  <main class=\"modal\" ref=\"modal\">\r\n    <header class=\"modal_header\" v-if=\"title\">\r\n      <h2 class=\"modal_header_title\">{{ title }}</h2>\r\n    </header>\r\n    <div class=\"overlay_contents\" v-if=\"content || html\">\r\n      <component :is=\"content\" />\r\n      <div class=\"overlay_contents__html\" v-if=\"html\" v-html=\"html\"></div>\r\n    </div>\r\n    <div class=\"bottom_actions\">\r\n      <div class=\"progress_display\" v-if=\"progress && progress.total > 1\">\r\n        <span\r\n          class=\"progress_display__dot_container\"\r\n          v-for=\"i in progress.total\"\r\n          :key=\"i\"\r\n          @click=\"$emit('open', i - 1)\"\r\n        >\r\n          <span\r\n            class=\"progress_display__dot\"\r\n            :class=\"{ dot_active: i == progress.current, dot_finished: i < progress.current }\"\r\n          ></span>\r\n        </span>\r\n      </div>\r\n      <div class=\"flex_spacer\"></div>\r\n      <button class=\"continue_action\" @click=\"continue_action\" :disabled=\"!can_continue\">\r\n        {{ button_text }}\r\n      </button>\r\n    </div>\r\n  </main>\r\n</template>\r\n\r\n<script>\r\n/**\r\n * @file Modal.vue\r\n * @displayName Modal\r\n * @description A modal view that displays title, content, progress and a continue action.\r\n * @property {String} title - The title of the modal.\r\n * @property {Object} content - A component to display in the modal.\r\n * @property {String} html - HTML to display in the modal, if content is not provided.\r\n * @property {Boolean} can_continue - Whether the continue action is enabled.\r\n * @property {Function} continue_action - The action to perform when the continue button is clicked.\r\n * @property {Object} progress - An object with current and total properties, to display progress.\r\n * @property {Boolean} is_notification - Whether the modal is a notification, and should not be closed.\r\n * @property {String} submit_text - The text to display on the continue button.\r\n *  */\r\nimport { _statuslog } from \"../common\";\r\nimport smoothHeight from \"vue-smooth-height\";\r\nimport router from \"../router\";\r\nexport default {\r\n  name: \"ModalVue\",\r\n  mixins: [smoothHeight],\r\n  mounted() {\r\n    this.$smoothElement({\r\n      el: this.$refs.modal,\r\n    });\r\n  },\r\n  emits: [\"open\"],\r\n  props: {\r\n    title: {\r\n      type: String,\r\n      default: \"\",\r\n      required: false,\r\n    },\r\n    content: {\r\n      type: Object,\r\n      default: null,\r\n      required: false,\r\n    },\r\n    html: {\r\n      type: String,\r\n      default: null,\r\n      required: false,\r\n    },\r\n    can_continue: {\r\n      type: Boolean,\r\n      required: true,\r\n    },\r\n    continue_action: {\r\n      type: Function,\r\n      default: () => {\r\n        _statuslog(\"ModalVue: continue_action not provided\");\r\n        // close this modal view\r\n        window.onbeforeunload = null;\r\n        router.push(\"/portal\");\r\n      },\r\n      required: false,\r\n    },\r\n    progress: {\r\n      type: Object,\r\n      default: null,\r\n      required: false,\r\n    },\r\n    is_notification: {\r\n      type: Boolean,\r\n      default: false,\r\n      required: false,\r\n    },\r\n    submit_text: {\r\n      type: String,\r\n      required: false,\r\n    },\r\n  },\r\n  computed: {\r\n    button_text() {\r\n      if (this.submit_text) {\r\n        return this.submit_text;\r\n      } else if (this.is_notification) {\r\n        return \"Ok\";\r\n      } else if (this.progress && this.progress.current == this.progress.total) {\r\n        return \"Finish\";\r\n      } else {\r\n        return \"Continue\";\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.modal:first-child.overlay_contents {\r\n  border-top: none;\r\n}\r\n.progress_display {\r\n  /* layout */\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n  /* interaction */\r\n  user-select: none;\r\n  /* sizing */\r\n  height: var(--size-modal-progress);\r\n}\r\n.progress_display span {\r\n  display: block;\r\n}\r\n.progress_display__dot_container {\r\n  padding: var(--margin-modal-progress-dot);\r\n}\r\n.progress_display__dot {\r\n  /* sizing */\r\n  width: var(--size-modal-progress-dot);\r\n  height: var(--size-modal-progress-dot);\r\n  border-radius: 50%;\r\n  /* appearance */\r\n  background-color: var(--color-modal-progress-dot);\r\n}\r\n.progress_display__dot.dot_active {\r\n  background-color: var(--color-modal-progress-dot-active);\r\n}\r\n.progress_display__dot.dot_finished {\r\n  transform: scale(0.75);\r\n  opacity: 0.6;\r\n}\r\n</style>\r\n","import parseCssTransition from 'parse-css-transition'\r\n\r\nconst mixin = {\r\n    methods: {\r\n        $smoothElement(options) {\r\n            let _addElement = addElement.bind(this)\r\n            if (Array.isArray(options))\r\n                options.forEach(_addElement)\r\n            else\r\n                _addElement(options)\r\n        },\r\n        $unsmoothElement(options) {\r\n            let _removeElement = removeElement.bind(this)\r\n            if (Array.isArray(options))\r\n                options.forEach(_removeElement)\r\n            else\r\n                _removeElement(options)\r\n        },\r\n    },\r\n    created() {\r\n        this._smoothElements = []\r\n    },\r\n    beforeUpdate() {\r\n        if (!this._smoothElements || !this._smoothElements.length)\r\n            return\r\n        this._smoothElements.forEach(e => {\r\n            // Retrieve registered element on demand\r\n            // El could have been hidden by v-if/v-show\r\n            let $el = select(this.$el, e.options.el)\r\n            e.setBeforeHeight($el)\r\n        })\r\n    },\r\n    updated() {\r\n        if (!this._smoothElements || !this._smoothElements.length)\r\n            return\r\n        this.$nextTick(()=>{\r\n            this._smoothElements.forEach(e => {\r\n                // Retrieve registered element on demand\r\n                // El could have been hidden by v-if/v-show\r\n                let $el = select(this.$el, e.options.el)\r\n                e.doSmoothReflow($el)\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\n// 'this' is vue component\r\nfunction addElement(option = {}) {\r\n    if (!option.hasOwnProperty('el')) {\r\n        option.el = this.$el\r\n    }\r\n    this._smoothElements.push(new SmoothElement(option))\r\n}\r\n\r\n// 'this' is vue component\r\nfunction removeElement(option) {\r\n    let root = this.$el\r\n    let index = this._smoothElements.findIndex(d => {\r\n        return select(root, d.el) === select(root, option.el)\r\n    })\r\n    if (index == -1) {\r\n        console.error(\"VSM_ERROR: $unsmoothElement failed due to invalid el option\")\r\n        return\r\n    }\r\n    let smoothEl = this._smoothElements[index]\r\n    smoothEl.remove()\r\n    this._smoothElements.splice(index, 1)\r\n}\r\n\r\nfunction select(rootEl, el) {\r\n    if (typeof el === 'string')\r\n        return rootEl.matches(el) ? rootEl : rootEl.querySelector(el)\r\n    else\r\n        return el\r\n}\r\n\r\nlet iota = 0\r\nconst STATES = Object.freeze({\r\n    INACTIVE: iota++,\r\n    ACTIVE: iota++\r\n})\r\n\r\nclass SmoothElement {\r\n    constructor(options) {\r\n        options = {\r\n            // Element or selector string.\r\n            el: null,\r\n            // User can specify a transition if they don't want to use CSS\r\n            transition: 'height .5s',\r\n            // Element or selector string that will emit a transitionend event.\r\n            childTransitions: null,\r\n            hideOverflow: false,\r\n            debug: false,\r\n            ...options\r\n        }\r\n        Object.assign(this, {\r\n            $el: null,// Resolved Element from el\r\n            hasExistingHeightTransition: false,\r\n            beforeHeight: null,\r\n            afterHeight: null,\r\n            state: STATES.INACTIVE,\r\n            options,\r\n        })\r\n        // transition end callback will call endListener, so it needs the correct context\r\n        this.endListener = this.endListener.bind(this)\r\n    }\r\n    transition(to) {\r\n        this.state = to\r\n    }\r\n    /**\r\n     * Indicates if the smooth transition increased or decreased the elements height\r\n     * A positive result means the height was increased\r\n     */\r\n    get heightDiff() {\r\n        let { beforeHeight, afterHeight } = this\r\n        if (beforeHeight == null || afterHeight == null) {\r\n            return 0\r\n        }\r\n        return afterHeight - beforeHeight\r\n    }\r\n    setBeforeHeight($el) {\r\n        // This property could be set by a previous update\r\n        // Reset it so it doesn't affect the current update\r\n        this.afterHeight = null\r\n\r\n        let height\r\n        if ($el) {\r\n            height = $el.offsetHeight\r\n        }\r\n\r\n        this.beforeHeight = height\r\n        if (this.state === STATES.ACTIVE) {\r\n            this.stopTransition()\r\n            this.log('Transition was interrupted.')\r\n        }\r\n    }\r\n    doSmoothReflow($el, triggeredBy = 'data update') {\r\n        if (!$el) {\r\n            this.log(\"Could not find registered el.\")\r\n            return\r\n        }\r\n        this.$el = $el\r\n        this.transition(STATES.ACTIVE)\r\n        $el.addEventListener('transitionend', this.endListener, { passive: true })\r\n        this.log(`Height transition triggered by: ${triggeredBy}`)\r\n\r\n        let { beforeHeight, options } = this\r\n\r\n        // If this.afterHeight is set, that means doSmoothReflow() was called after\r\n        // a nested transition finished. This check is made to ensure that\r\n        // a height transition only occurs on a false conditional render,\r\n        // a.k.a. an element is being hidden rather than shown.\r\n        // VSM works normally on a true conditional render.\r\n        let afterHeight = $el.offsetHeight\r\n        if (this.afterHeight != null && this.afterHeight === afterHeight) {\r\n            this.log(`Element height did not change after nested transition. Height = ${afterHeight}`)\r\n            this.transition(STATES.INACTIVE)\r\n            return\r\n        }\r\n        if (beforeHeight === afterHeight) {\r\n            this.log(`Element height did not change. Height = ${afterHeight}`)\r\n            this.transition(STATES.INACTIVE)\r\n            return\r\n        }\r\n        this.afterHeight = afterHeight\r\n        this.log(`Previous height: ${beforeHeight} Current height: ${afterHeight}`)\r\n\r\n        let computedStyle = window.getComputedStyle($el)\r\n        let parsedTransition = parseCssTransition(computedStyle.transition)\r\n        if (this.hasHeightTransition(parsedTransition)) {\r\n            this.hasExistingHeightTransition = true\r\n        } else {\r\n            this.hasExistingHeightTransition = false\r\n            this.addHeightTransition(parsedTransition, options.transition)\r\n        }\r\n\r\n        if (options.hideOverflow) {\r\n            //save overflow properties before overwriting\r\n            let overflowY = computedStyle.overflowY,\r\n                overflowX = computedStyle.overflowX\r\n\r\n            this.overflowX = overflowX\r\n            this.overflowY = overflowY\r\n\r\n            $el.style.overflowX = 'hidden'\r\n            $el.style.overflowY = 'hidden'\r\n        }\r\n\r\n        $el.style['height'] = beforeHeight + 'px'\r\n        $el.offsetHeight // Force reflow\r\n        $el.style['height'] = afterHeight + 'px'\r\n    }\r\n    hasHeightTransition(parsedTransition) {\r\n        return parsedTransition.find(t => {\r\n            return ['all','height'].includes(t.name) && t.duration > 0\r\n        })\r\n    }\r\n    // Delay and Duration are in milliseconds\r\n    // Add height transition to existing transitions.\r\n    addHeightTransition(parsedTransition, heightTransition) {\r\n        let transitions = parsedTransition.map(t => {\r\n            return `${t.name} ${t.duration}ms ${t.timingFunction} ${t.delay}ms`\r\n        })\r\n        this.$el.style.transition = [...transitions, heightTransition].join(',')\r\n    }\r\n    endListener(e) {\r\n        // Transition on smooth element finished\r\n        if (e.currentTarget === e.target) {\r\n            if (e.propertyName === 'height') {\r\n                this.stopTransition()\r\n                // Record the height AFTER the data change, but potentially\r\n                // BEFORE any child transitions start.\r\n                // Useful for cases like transition mode=\"out-in\"\r\n                this.setBeforeHeight(this.$el)\r\n            }\r\n        }\r\n        // Transition on element INSIDE smooth element finished\r\n        // heightDiff <= 0 prevents calling doSmoothReflow during a\r\n        // transition that increases height.\r\n        // solves the case where a nested transition duration is\r\n        // shorter than the height transition duration, causing doSmoothReflow\r\n        // to reflow in the middle of the height transition\r\n        else if (this.heightDiff <= 0 && this.isRegisteredChildTransition(e)) {\r\n            this.doSmoothReflow(this.$el, 'child transition')\r\n        }\r\n    }\r\n    isRegisteredChildTransition(e) {\r\n        let { childTransitions } = this.options\r\n        return e.target.matches(childTransitions)\r\n    }\r\n    stopTransition() {\r\n        let {\r\n            $el, options, overflowX, overflowY,\r\n            hasExistingHeightTransition,\r\n        } = this\r\n\r\n        $el.style['height'] = null // Change height back to auto\r\n        if (options.hideOverflow) {\r\n            // Restore original overflow properties\r\n            $el.style.overflowX = overflowX\r\n            $el.style.overflowY = overflowY\r\n        }\r\n        // Clean up inline transition\r\n        if (!hasExistingHeightTransition) {\r\n            $el.style.transition = null\r\n        }\r\n\r\n        this.transition(STATES.INACTIVE)\r\n    }\r\n    remove() {\r\n        this.$el.removeEventListener('transitionend', this.endListener)\r\n    }\r\n    log(text) {\r\n        if (this.options.debug)\r\n            console.log(`VSM_DEBUG: ${text}`, this.$el)\r\n    }\r\n}\r\n\r\nexport default mixin\r\n","import { render } from \"./Modal.vue?vue&type=template&id=1b820caa&scoped=true\"\nimport script from \"./Modal.vue?vue&type=script&lang=js\"\nexport * from \"./Modal.vue?vue&type=script&lang=js\"\n\nimport \"./Modal.vue?vue&type=style&index=0&id=1b820caa&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\sande\\\\Documents\\\\GitHub\\\\mvtime.github.io\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1b820caa\"]])\n\nexport default __exports__","import { render } from \"./ModalFromPages.vue?vue&type=template&id=442b027e\"\nimport script from \"./ModalFromPages.vue?vue&type=script&lang=js\"\nexport * from \"./ModalFromPages.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\sande\\\\Documents\\\\GitHub\\\\mvtime.github.io\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./DailySurvey.vue?vue&type=template&id=a470ff4a\"\nimport script from \"./DailySurvey.vue?vue&type=script&lang=js\"\nexport * from \"./DailySurvey.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\sande\\\\Documents\\\\GitHub\\\\mvtime.github.io\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["toMillies","require","isTime","value","test","parseSingleTransition","transition","name","duration","timingFunctionOrDelay","delay","split","timingFunction","parseCssTransition","map","trim","filter","length","module","exports","isMillies","endsWith","parseFloat","_createBlock","_component_ModalFromPages","pages","_ctx","onFinish","$options","saveResponses","_component_Modal","onOpen","switch_to","title","page","content","html","is_notification","submit_text","progress","$data","page_index","$props","can_continue","continue_action","next_page","show_progress","class","ref","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","_hoisted_4","_resolveDynamicComponent","innerHTML","_hoisted_6","total","_hoisted_7","_Fragment","_renderList","i","key","onClick","$event","$emit","_normalizeClass","dot_active","current","dot_finished","_hoisted_9","_cache","args","disabled","button_text","_hoisted_10","mixin","methods","$smoothElement","options","_addElement","addElement","bind","this","Array","isArray","forEach","$unsmoothElement","_removeElement","removeElement","created","_smoothElements","beforeUpdate","e","$el","select","el","setBeforeHeight","updated","$nextTick","doSmoothReflow","option","hasOwnProperty","push","SmoothElement","root","index","findIndex","d","console","error","smoothEl","remove","splice","rootEl","matches","querySelector","iota","STATES","Object","freeze","INACTIVE","ACTIVE","constructor","childTransitions","hideOverflow","debug","assign","hasExistingHeightTransition","beforeHeight","afterHeight","state","endListener","to","heightDiff","height","offsetHeight","stopTransition","log","triggeredBy","addEventListener","passive","computedStyle","window","getComputedStyle","parsedTransition","hasHeightTransition","addHeightTransition","overflowY","overflowX","style","find","t","includes","heightTransition","transitions","join","currentTarget","target","propertyName","isRegisteredChildTransition","removeEventListener","text","mixins","smoothHeight","mounted","$refs","modal","emits","props","type","String","default","required","Boolean","Function","_statuslog","onbeforeunload","router","computed","__exports__","confirm_unfinished","components","Modal","ModalVue","data","responses","prototype","call","Math","max","getData","ModalFromPages","$router","render"],"sourceRoot":""}