{"version":3,"file":"js/821.40f56c49.js","mappings":"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","sources":["webpack://mvtime/./src/store/magic.js","webpack://mvtime/./src/views/Portal/CreateTask.vue","webpack://mvtime/./src/views/Portal/CreateTask.vue?4068"],"sourcesContent":["// Path: store/magic.js\r\n\r\n// setup Pinia store\r\n// import { _status } from \"@/common\";\r\nimport { defineStore } from \"pinia\";\r\n\r\n// Smart URL\r\nfunction smart_url(path) {\r\n  if (!path) return;\r\n  path = path.toLowerCase();\r\n  /**  Google Suite **/\r\n  if (path.match(/https:\\/\\/[a-zA-Z0-9]+.google.com\\/[a-zA-Z0-9]+\\/[a-zA-Z0-9]+/)) {\r\n    // Google Classroom\r\n    if (path.match(/https:\\/\\/classroom.google.com*./)) {\r\n      // Google Classroom assignment (classroom.google.com/c/.../a/...)\r\n      if (path.match(/https:\\/\\/classroom.google.com\\/c\\/[a-zA-Z0-9]+\\/a\\/*./)) {\r\n        return \"Google Classroom Assignment\";\r\n      }\r\n      // Google Classroom post (classroom.google.com/c/.../p/...)\r\n      else if (path.match(/https:\\/\\/classroom.google.com\\/c\\/[a-zA-Z0-9]+\\/p\\/*./)) {\r\n        return \"Google Classroom Post\";\r\n      }\r\n      // Google Classroom class (classroom.google.com/c/...)\r\n      else if (path.match(/https:\\/\\/classroom.google.com\\/c\\/[a-zA-Z0-9]+/)) {\r\n        return \"Google Classroom Class\";\r\n      }\r\n      // Google Classroom home\r\n      else if (\r\n        path.match(/https:\\/\\/classroom.google.com\\/h/) ||\r\n        path.match(/https:\\/\\/classroom.google.com\\/u\\/[0-9]+/)\r\n      ) {\r\n        return \"Google Classroom Home\";\r\n      }\r\n      // Everything Else\r\n      else {\r\n        return \"Google Classroom Link\";\r\n      }\r\n    }\r\n  }\r\n  // Canvas\r\n  else if (path.match(/https:\\/\\/[a-zA-Z0-9]+.instructure.com*./)) {\r\n    // Canvas Assignment\r\n\r\n    if (path.match(/https:\\/\\/[a-zA-Z0-9]+.instructure.com\\/courses\\/[0-9]+\\/modules*./)) {\r\n      return \"Canvas Course Modules\";\r\n    } else if (\r\n      path.match(/https:\\/\\/[a-zA-Z0-9]+.instructure.com\\/courses\\/[0-9]+\\/assignments\\/[0-9]+/)\r\n    ) {\r\n      return \"Canvas Assignment\";\r\n    } else if (path.match(/https:\\/\\/[a-zA-Z0-9]+.instructure.com\\/courses\\/[0-9]+/)) {\r\n      return \"Canvas Course\";\r\n    } else if (path.match(/https:\\/\\/[a-zA-Z0-9]+.instructure.com\\/courses/)) {\r\n      return \"Canvas Home\";\r\n    } else {\r\n      return \"Canvas Link\";\r\n    }\r\n  } else if (\r\n    path.match(/https:\\/\\/[a-zA-Z0-9]+.lon-capa.net*./) ||\r\n    path.match(/https:\\/\\/lon-capa.net*./) ||\r\n    path.match(/https:\\/\\/[a-zA-Z0-9]+.loncapa.net*./) ||\r\n    path.match(/https:\\/\\/loncapa.net*./)\r\n  ) {\r\n    return \"LON-CAPA Portal\";\r\n  }\r\n}\r\n\r\nexport const useMagic = defineStore({\r\n  id: \"magic\",\r\n  state: () => ({}),\r\n  getters: {},\r\n  actions: {\r\n    /**\r\n     * @function path\r\n     * @description get the smart text associated with a given url\r\n     * @param {String} path\r\n     * @returns {String} text - the smart text associated with the url\r\n     */\r\n    text(path) {\r\n      return smart_url(path) || null;\r\n    },\r\n    /**\r\n     * @function type\r\n     * @description get the smart type associated with a given description\r\n     * @param {String} text\r\n     */\r\n    type(text) {\r\n      return text;\r\n    },\r\n  },\r\n});\r\n","<template>\r\n  <div class=\"create_task\">\r\n    <header class=\"modal_header\">\r\n      <h2 class=\"header_style modal_header_title\">\r\n        <span>Add a{{ is_vowel(type_full[0]) ? \"n\" : \"\" }}&MediumSpace;</span>\r\n        <select\r\n          title=\"Task type\"\r\n          v-model=\"task.type\"\r\n          class=\"type_dropdown styled_input styled_select\"\r\n          ref=\"type\"\r\n        >\r\n          <option\r\n            class=\"type_dropdown__option styled_select__option\"\r\n            v-for=\"pair in Object.entries(types)\"\r\n            :value=\"pair[0]\"\r\n            :key=\"pair[0]\"\r\n          >\r\n            {{ pair[1] }}\r\n          </option>\r\n        </select>\r\n      </h2>\r\n    </header>\r\n    <div class=\"overlay_contents\" ref=\"contents\">\r\n      <div class=\"overlay_contents_text\">\r\n        <span v-if=\"is_note\">Add a new {{ task.type }} to</span>\r\n        <span v-else>Schedule a new {{ task.type }} for</span>\r\n        your class{{ classes && classes.length == 1 ? \"\" : \"es\" }}\r\n      </div>\r\n      <div class=\"inputs_row\">\r\n        <input\r\n          v-if=\"!is_note\"\r\n          v-model=\"task.name\"\r\n          class=\"styled_input\"\r\n          type=\"text\"\r\n          :placeholder=\"type_full + ' Name'\"\r\n          :disabled=\"is_note\"\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          ref=\"date\"\r\n          class=\"styled_input input_task__date\"\r\n          v-model=\"task.date\"\r\n          :style=\"{ maxWidth: is_note ? '100%' : null }\"\r\n        />\r\n        <div class=\"flex-break\"></div>\r\n        <textarea\r\n          v-model=\"task.description\"\r\n          class=\"styled_input styled_textarea task_description\"\r\n          type=\"text\"\r\n          :placeholder=\"type_full + (is_note ? ' Contents' : ' Description (Optional)')\"\r\n        >\r\n        </textarea>\r\n        <div class=\"flex-break\"></div>\r\n        <div class=\"styled_input styled_links_box\">\r\n          <div class=\"styled_links_display\">\r\n            <span v-if=\"!task.links || !task.links.length\" class=\"placeholder\"\r\n              >{{ type_full }} Links (Optional)</span\r\n            >\r\n            <div v-else class=\"styled_line_links\">\r\n              <a\r\n                class=\"styled_line_links__link styled_line_links__remove\"\r\n                target=\"_blank\"\r\n                v-for=\"link in task.links\"\r\n                :key=\"link.path\"\r\n                @click=\"remove_link(link)\"\r\n                >{{ link.text }}</a\r\n              >\r\n            </div>\r\n          </div>\r\n          <hr class=\"styled_links_separator\" />\r\n          <div class=\"styled_links_add\">\r\n            <input\r\n              class=\"styled_links_add__path\"\r\n              type=\"url\"\r\n              v-model=\"newlink.path\"\r\n              @blur=\"fix_newlink_path\"\r\n              placeholder=\"Link URL (https://example.com)\"\r\n            />\r\n            <div class=\"styled_links_add__sized\">\r\n              <input\r\n                class=\"styled_links_add__text\"\r\n                type=\"text\"\r\n                v-model=\"newlink.text\"\r\n                placeholder=\"Link Text (what students see)\"\r\n              />\r\n              <div\r\n                class=\"styled_magic click-action\"\r\n                v-if=\"\r\n                  newlink.path &&\r\n                  magic.text(newlink.path) &&\r\n                  magic.text(newlink.path) != newlink.text\r\n                \"\r\n                @click=\"newlink.text = magic.text(newlink.path)\"\r\n                title=\"Auto-generate link text\"\r\n              ></div>\r\n            </div>\r\n            <button\r\n              class=\"styled_links_add__action\"\r\n              @click=\"add_newlink\"\r\n              :disabled=\"newlink_not_ready\"\r\n            >\r\n              Add\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"overlay_contents_text\">\r\n        Choose which classes this {{ task.type }} will be added to\r\n      </div>\r\n      <div class=\"classes_checkboxes checkboxes\">\r\n        <a\r\n          class=\"checkbox\"\r\n          v-for=\"class_obj in classes\"\r\n          :key=\"class_obj.id\"\r\n          :href=\"'/view/' + store.path_to_ref(class_obj.ref)\"\r\n        >\r\n          <input type=\"checkbox\" :id=\"class_obj.id\" :value=\"class_obj.id\" v-model=\"task_classes\" />\r\n          <label\r\n            class=\"button_pointer_text class_name\"\r\n            v-if=\"class_obj.period\"\r\n            :for=\"class_obj.id\"\r\n            :style=\"{\r\n              '--color-class': class_obj.color,\r\n              '--color-class-alt': class_obj.color + '2d',\r\n            }\"\r\n          >\r\n            P{{ class_obj.period }} - {{ class_obj.name }}\r\n          </label>\r\n          <label v-else :for=\"class_obj.id\" @click=\"$event.stopPropagation\">{{\r\n            class_obj.name\r\n          }}</label>\r\n        </a>\r\n      </div>\r\n    </div>\r\n    <div class=\"bottom_actions\">\r\n      <button class=\"close_action click_escape\" @click=\"$emit('close')\">Close</button>\r\n      <div class=\"flex_spacer\"></div>\r\n      <button\r\n        class=\"continue_action click_ctrlenter\"\r\n        :class=\"{ loading_bg: loading }\"\r\n        @click=\"try_submit\"\r\n        :disabled=\"!ready\"\r\n      >\r\n        Add {{ task.type }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/**\r\n * Creates a new task for the teacher's selected class(es).\r\n *\r\n * @module CreateTaskView\r\n * @description Modal that allows teacher's to create a new task for their classes.\r\n * @param {string} tasktype - The type of task to create (task, project, test, etc.) Provided by the router.\r\n * @requires module:store/MainStore\r\n * @emits {Function} close - An event emitted when the task is created or the modal is closed.\r\n */\r\n\r\nimport { useMainStore } from \"@/store\";\r\nimport { useMagic } from \"@/store/magic\";\r\nimport { _status } from \"@/common\";\r\nimport { ErrorToast, WarningToast } from \"@svonk/util\";\r\nimport smoothReflow from \"vue-smooth-reflow\";\r\n\r\nexport default {\r\n  name: \"CreateTaskView\",\r\n  emits: [\"close\"],\r\n  mixins: [smoothReflow],\r\n  mounted() {\r\n    this.$smoothReflow({\r\n      el: this.$refs.contents,\r\n    });\r\n    if (!this.$route?.params?.tasktype) {\r\n      this.$refs.type.focus();\r\n    } else {\r\n      this.$refs.date.focus();\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      task: {\r\n        name: \"\",\r\n        date: this.$route.query?.date ? this.$route.query.date : \"\",\r\n        description: \"\",\r\n        type: this.$route.params.tasktype ? this.$route.params.tasktype : \"task\",\r\n      },\r\n      task_classes: this.$route.query?.class ? [this.$route.query.class] : [],\r\n      newlink: {\r\n        text: \"\",\r\n        path: \"\",\r\n      },\r\n      loading: false,\r\n      types: {\r\n        note: \"Note\",\r\n        task: \"Assignment\",\r\n        // socratic: \"Socratic Seminar\",\r\n        test: \"Test\",\r\n        // summative: \"Summative Assignment\",\r\n        // midterm: \"Midterm\",\r\n        project: \"Project\",\r\n        quiz: \"Quiz\",\r\n        exam: \"Exam\",\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    ready() {\r\n      return (\r\n        (this.task.name || this.is_note) &&\r\n        this.task.date &&\r\n        this.task_classes.length &&\r\n        (!this.is_note || this.task.description)\r\n      );\r\n    },\r\n    type_full() {\r\n      return this.get_type(this.task.type);\r\n    },\r\n    newlink_not_ready() {\r\n      // check if path and text, and also that path is a valid url\r\n      if (!this.newlink.path || !this.newlink.text) {\r\n        return true;\r\n      }\r\n      try {\r\n        void new URL(this.newlink.path);\r\n        return false;\r\n      } catch (err) {\r\n        return true;\r\n      }\r\n    },\r\n    class_name() {\r\n      if (!this.classes) return null;\r\n      let class_obj = this.classes.find((class_obj) => class_obj.id === this.class_id);\r\n      if (!class_obj) return null;\r\n      return class_obj.name;\r\n    },\r\n    store() {\r\n      return useMainStore();\r\n    },\r\n    magic() {\r\n      return useMagic();\r\n    },\r\n    classes() {\r\n      return this.store.classes;\r\n    },\r\n    is_note() {\r\n      return this.task.type === \"note\";\r\n    },\r\n  },\r\n  methods: {\r\n    try_submit() {\r\n      if (this.ready) {\r\n        this.create_task();\r\n      } else {\r\n        new WarningToast(\"Please fill out all required fields\", 1000);\r\n      }\r\n    },\r\n    get_type(type = this.task.type) {\r\n      return this.types[type] || type;\r\n    },\r\n    is_vowel(char) {\r\n      return [\"a\", \"e\", \"i\", \"o\", \"u\"].includes(char.toLowerCase());\r\n    },\r\n    add_newlink() {\r\n      if (!this.task.links) this.task.links = [];\r\n      // add protocol if missing\r\n      this.newlink.path = new URL(this.newlink.path).href;\r\n      this.task.links.push(this.newlink);\r\n      this.newlink = {\r\n        text: \"\",\r\n        path: \"\",\r\n      };\r\n    },\r\n    create_task() {\r\n      if (!this.newlink_not_ready) {\r\n        new WarningToast(\"Don't forget to to click the 'Add' button to add your link!\", 2000);\r\n        return;\r\n      }\r\n      this.loading = true;\r\n      this.store\r\n        .create_task(this.task, this.task_classes)\r\n        .then(() => {\r\n          //! router to new task view?\r\n          this.$emit(\"close\");\r\n        })\r\n        .catch((err) => {\r\n          this.loading = false;\r\n          _status.error(`📃 Couldn't create ${this.task.type || \"task\"}:`, err);\r\n          new ErrorToast(\"Couldn't create task\", err, 2000);\r\n        });\r\n    },\r\n    remove_link(link) {\r\n      this.task.links = this.task.links.filter((l) => l.path !== link.path);\r\n      this.newlink = link;\r\n    },\r\n    fix_newlink_path() {\r\n      if (this.newlink.path && this.newlink.path.includes(\".\")) {\r\n        try {\r\n          this.newlink.path = new URL(this.newlink.path).href;\r\n        } catch (err) {\r\n          // add protocol if missing\r\n          this.newlink.path = \"https://\" + this.newlink.path;\r\n          this.fix_newlink_path();\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.checkboxes {\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  align-items: flex-start;\r\n  margin-top: 0.5rem;\r\n}\r\n.checkbox {\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  align-items: center;\r\n}\r\n.checkbox label {\r\n  padding-left: 0.5rem;\r\n  user-select: none;\r\n  cursor: pointer;\r\n}\r\n.inputs_row {\r\n  flex-flow: row wrap;\r\n}\r\n.styled_input.input_task__date {\r\n  margin-right: 0;\r\n  max-width: 150px;\r\n}\r\nselect.type_dropdown {\r\n  padding: 5px;\r\n  background-color: var(--color-overlay-input);\r\n  color: var(--color-on-overlay-input);\r\n  border: none;\r\n  border-radius: var(--radius-overlay-input);\r\n  width: auto;\r\n}\r\n.type_dropdown__option {\r\n  font-size: 14px;\r\n}\r\n.class_name {\r\n  margin-left: 0.75em;\r\n}\r\n.checkboxes .checkbox input:checked + label.class_name {\r\n  background-color: var(--color-class);\r\n  color: var(--color-on-class);\r\n}\r\n/* new display method */\r\n.checkboxes .checkbox input {\r\n  display: none;\r\n}\r\n.checkboxes .checkbox label {\r\n  margin-left: unset;\r\n}\r\n/* inline variation */\r\n.checkboxes {\r\n  gap: 0.5em;\r\n  display: inline-flex;\r\n  flex-flow: row wrap;\r\n}\r\n.checkboxes .checkbox {\r\n  margin: 0;\r\n  display: inline-flex;\r\n  flex-grow: 1;\r\n}\r\n.checkboxes .checkbox label {\r\n  width: 100%;\r\n  text-align: center;\r\n}\r\n@media (max-width: 600px) {\r\n  .checkboxes {\r\n    gap: 0.5em;\r\n  }\r\n  .checkboxes .checkbox,\r\n  .checkboxes .checkbox label {\r\n    width: 100%;\r\n    text-align: left;\r\n    line-height: 2.5em;\r\n  }\r\n  .checkboxes .checkbox label {\r\n    padding: 0 1em;\r\n    height: 2.5em;\r\n  }\r\n}\r\n\r\n.parent.simplified .checkboxes {\r\n  gap: 0.5em;\r\n}\r\n.parent.simplified .checkboxes .checkbox,\r\n.parent.simplified .checkboxes .checkbox label {\r\n  width: 100%;\r\n  text-align: left;\r\n  line-height: 2.5em;\r\n}\r\n.parent.simplified .checkboxes .checkbox label {\r\n  padding: 0 1em;\r\n  height: 2.5em;\r\n}\r\n</style>\r\n","import { render } from \"./CreateTask.vue?vue&type=template&id=482890e5&scoped=true\"\nimport script from \"./CreateTask.vue?vue&type=script&lang=js\"\nexport * from \"./CreateTask.vue?vue&type=script&lang=js\"\n\nimport \"./CreateTask.vue?vue&type=style&index=0&id=482890e5&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\sande\\\\Documents\\\\GitHub\\\\mvtime.github.io\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-482890e5\"]])\n\nexport default __exports__"],"names":["smart_url","path","toLowerCase","match","useMagic","defineStore","id","state","getters","actions","text","type","class","ref","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","$options","is_vowel","type_full","title","$data","task","$event","_Fragment","_renderList","Object","entries","types","pair","value","key","_hoisted_4","_hoisted_5","_hoisted_6","is_note","_hoisted_7","_hoisted_8","classes","length","_hoisted_9","name","placeholder","disabled","date","style","_normalizeStyle","maxWidth","_hoisted_11","description","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","links","_hoisted_17","link","target","onClick","remove_link","_hoisted_18","_hoisted_16","_hoisted_19","_hoisted_20","newlink","onBlur","_cache","args","fix_newlink_path","_hoisted_21","magic","add_newlink","newlink_not_ready","_hoisted_22","_hoisted_23","_hoisted_24","class_obj","href","store","path_to_ref","task_classes","period","for","color","_hoisted_27","_ctx","stopPropagation","_hoisted_28","_hoisted_29","$emit","_hoisted_30","_normalizeClass","loading_bg","loading","try_submit","ready","_hoisted_31","emits","mixins","smoothReflow","mounted","this","$smoothReflow","el","$refs","contents","$route","params","tasktype","focus","data","query","note","test","project","quiz","exam","computed","get_type","URL","err","class_name","find","class_id","useMainStore","methods","create_task","WarningToast","char","includes","push","then","catch","_status","error","ErrorToast","filter","l","__exports__","render"],"sourceRoot":""}