{"version":3,"file":"js/607.d814a290.js","mappings":"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","sources":["webpack://mvtime/./src/store/magic.js","webpack://mvtime/./src/views/Portal/EditTask.vue","webpack://mvtime/./src/views/Portal/EditTask.vue?ea5e"],"sourcesContent":["// Path: store/magic.js\r\n\r\n// setup Pinia store\r\nimport { _status } from \"@/common\";\r\nimport { defineStore } from \"pinia\";\r\n\r\nconst API_URL = \"https://api.mvtt.app/\";\r\n\r\nexport const useMagic = defineStore({\r\n  id: \"magic\",\r\n  state: () => ({\r\n    last: {},\r\n    types: {\r\n      note: \"Note\",\r\n      task: \"Assignment\",\r\n      // socratic: \"Socratic Seminar\",\r\n      test: \"Test\",\r\n      // summative: \"Summative Assignment\",\r\n      // midterm: \"Midterm\",\r\n      project: \"Project\",\r\n      quiz: \"Quiz\",\r\n      exam: \"Exam\",\r\n    },\r\n  }),\r\n  getters: {},\r\n  actions: {\r\n    /**\r\n     * @function path\r\n     * @description get the smart text associated with a given url\r\n     * @param {String} path\r\n     * @returns {String} text - the smart text associated with the url\r\n     */\r\n    async text(path) {\r\n      if (!path) return;\r\n      return await this.rated_api_get(\"get/magic/link-text\", { path });\r\n    },\r\n    /**\r\n     * @function type\r\n     * @description get the smart type associated with a given description\r\n     * @param {String} text\r\n     */\r\n    async type(task) {\r\n      if (!task) return;\r\n      return await this.rated_api_get(\"get/magic/task-type\", { task });\r\n    },\r\n    /**\r\n     * @function api_get\r\n     * @description do get request to url: API_URL + endpoint with request query of data\r\n     * @param {String} endpoint api endpoint\r\n     * @param {Object} data query params\r\n     * @returns {Promise<Object>} json\r\n     */\r\n    async api_get(endpoint, data) {\r\n      data = data || {};\r\n      if (!endpoint) return;\r\n      // get url with query\r\n      const url = new URL(API_URL + endpoint);\r\n      Object.keys(data).forEach((key) => url.searchParams.append(key, data[key]));\r\n      const run_hash = Math.random().toString(36).substring(7);\r\n      _status.log(`🛜 Running API fetch | <${run_hash}>`);\r\n      // do request\r\n      this.last[endpoint] = { time: Date.now(), hash: run_hash };\r\n      try {\r\n        const response = await fetch(url.href, {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        // response\r\n        if (!response.ok) throw \"Non-valid response\";\r\n        const json = await response.json();\r\n        _status.log(`🛜 API fetch success | <${run_hash}>`);\r\n        return json.data;\r\n      } catch (err) {\r\n        _status.error(`🛜 API fetch failed  | <${run_hash}>`, err);\r\n        return null;\r\n      }\r\n    },\r\n    /**\r\n     * @function rated_api_get\r\n     * @description do api_get but abide by rate limit (only eval once every 15 seconds)\r\n     */\r\n    async rated_api_get(type) {\r\n      _status.log(\"🛜 API fetch requested\");\r\n      const run_hash = Math.random().toString(36).substring(7);\r\n      const prev_time = this.last[type]?.time;\r\n      const prev_hash = this.last[type]?.hash;\r\n      if (Date.now() - prev_time < 2000) {\r\n        _status.warn(\"🛜 API fetch rate limited\");\r\n        // wait 15 seconds and see if it is still the most recent request\r\n        await new Promise((resolve) => setTimeout(resolve, 15000));\r\n        if (this.last[type]?.time !== prev_time || this.last[type]?.hash !== prev_hash) {\r\n          _status.warn(\"🛜 Outdated API fetch skipped\");\r\n          return;\r\n        } else {\r\n          _status.log(\"🛜 API fetch rate limit lifted\");\r\n        }\r\n      }\r\n      return await this.api_get(...arguments, run_hash);\r\n    },\r\n  },\r\n});\r\n","<template>\r\n  <div class=\"edit_task\">\r\n    <header class=\"modal_header\" ref=\"title\">\r\n      <h2 class=\"header_style modal_header_title\">Edit {{ task.type || \"task\" }} details</h2>\r\n    </header>\r\n    <div class=\"overlay_contents\" ref=\"contents\">\r\n      <div v-if=\"ready\">\r\n        <div class=\"overlay_contents_text change_text\">\r\n          Change the details of your {{ task.type || \"task\"\r\n          }}{{ original.name ? ` \"${original.name}\"` : \"\" }} in\r\n          <a\r\n            class=\"class_name button_pointer_text\"\r\n            :href=\"`/view/${task._class.ref}`\"\r\n            @click=\"\r\n              $event.preventDefault();\r\n              $router.push({\r\n                name: 'viewclass',\r\n                params: { ref: task._class.ref },\r\n                query: $route.query,\r\n              });\r\n            \"\r\n            :style=\"{\r\n              '--color-class': class_obj.color,\r\n              '--color-class-alt': class_obj.color + '2d',\r\n            }\"\r\n            >{{ `P${class_obj.period} - ${class_obj.name}` }}</a\r\n          >\r\n        </div>\r\n        <div class=\"inputs_row\">\r\n          <input\r\n            v-if=\"!is_note\"\r\n            v-model=\"task.name\"\r\n            class=\"styled_input\"\r\n            type=\"text\"\r\n            :placeholder=\"type_full + ' Name'\"\r\n            :disabled=\"is_note\"\r\n          />\r\n          <input\r\n            type=\"date\"\r\n            class=\"styled_input input_task__date\"\r\n            v-model=\"task.date\"\r\n            :style=\"{ maxWidth: is_note ? '100%' : null }\"\r\n          />\r\n          <div class=\"flex-break\"></div>\r\n          <textarea\r\n            v-model=\"task.description\"\r\n            class=\"styled_input styled_textarea task_description\"\r\n            type=\"text\"\r\n            :placeholder=\"type_full + (is_note ? ' Contents' : ' Description (Optional)')\"\r\n          >\r\n          </textarea>\r\n          <div class=\"flex-break\"></div>\r\n          <div class=\"styled_input styled_links_box\">\r\n            <div class=\"styled_links_display\">\r\n              <span v-if=\"!task.links || !task.links.length\" class=\"placeholder\"\r\n                >{{ type_full }} Links (Optional)</span\r\n              >\r\n              <div v-else class=\"styled_line_links\">\r\n                <a\r\n                  class=\"styled_line_links__link styled_line_links__remove\"\r\n                  target=\"_blank\"\r\n                  v-for=\"link in task.links\"\r\n                  :key=\"link.path\"\r\n                  @click=\"remove_link(link)\"\r\n                  >{{ link.text }}</a\r\n                >\r\n              </div>\r\n            </div>\r\n            <hr class=\"styled_links_separator\" />\r\n            <div class=\"styled_links_add\">\r\n              <input\r\n                class=\"styled_links_add__path\"\r\n                type=\"url\"\r\n                v-model=\"newlink.path\"\r\n                @blur=\"fix_newlink_path\"\r\n                placeholder=\"Link URL (http://example.com)\"\r\n              />\r\n              <div class=\"magic_wrapper styled_links_add__sized\">\r\n                <input\r\n                  class=\"styled_links_add__text\"\r\n                  type=\"text\"\r\n                  v-model=\"newlink.text\"\r\n                  placeholder=\"Link Text (what students see)\"\r\n                />\r\n                <div\r\n                  class=\"magic magic_in styled_magic alt_bg click-action\"\r\n                  :class=\"{ magic_out: !path_ready, loading_bg: loading_text }\"\r\n                  :disabled=\"!path_ready || loading_text\"\r\n                  @click=\"magic_text\"\r\n                  title=\"Auto-generate link text\"\r\n                ></div>\r\n              </div>\r\n              <button\r\n                class=\"styled_links_add__action\"\r\n                @click=\"add_newlink\"\r\n                :disabled=\"newlink_not_ready\"\r\n              >\r\n                Add\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <img alt=\"Loading Icon\" class=\"loading_icon\" v-else />\r\n    </div>\r\n    <div class=\"bottom_actions\">\r\n      <button class=\"close_action click_escape\" @click=\"$emit('close')\">Cancel</button>\r\n      <div class=\"flex_spacer\"></div>\r\n      <button\r\n        class=\"archive_action primary_styled\"\r\n        @click=\"archive_task\"\r\n        :disabled=\"!ready || loading\"\r\n      >\r\n        Archive\r\n      </button>\r\n      <button\r\n        class=\"continue_action click_ctrlenter\"\r\n        :class=\"{ loading_bg: loading }\"\r\n        @click=\"try_submit\"\r\n        :disabled=\"not_submittable\"\r\n      >\r\n        Save {{ task.type || \"task\" }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/**\r\n * Creates a new task for the teacher's selected class(es).\r\n *\r\n * @module CreateTaskView\r\n * @description Modal that allows teacher's to create a new task for their classes.\r\n * @param {string} tasktype - The type of task to create (task, project, test, etc.) Provided by the router.\r\n * @requires module:store/MainStore\r\n * @emits {Function} close - An event emitted when the task is created or the modal is closed.\r\n */\r\n\r\nimport { useMainStore } from \"@/store\";\r\nimport { useMagic } from \"@/store/magic\";\r\nimport { _status, compatDateObj } from \"@/common\";\r\nimport { ErrorToast, WarningToast, SuccessToast } from \"@svonk/util\";\r\nimport smoothReflow from \"vue-smooth-reflow\";\r\n\r\nexport default {\r\n  name: \"EditTaskView\",\r\n  emits: [\"close\"],\r\n  mixins: [smoothReflow],\r\n  data() {\r\n    return {\r\n      task: {},\r\n      original: {},\r\n      newlink: {\r\n        text: \"\",\r\n        path: \"\",\r\n      },\r\n      ready: false,\r\n      loading: true,\r\n      loading_text: false,\r\n      loaded_text: false,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.$smoothReflow({\r\n      el: this.$refs.contents,\r\n      childTransitions: true,\r\n    });\r\n    this.$smoothReflow({\r\n      el: this.$refs.title,\r\n      hideOverflow: true,\r\n    });\r\n    this.get_task();\r\n  },\r\n  computed: {\r\n    not_submittable() {\r\n      return (\r\n        !this.changed ||\r\n        (!this.task.name && !this.is_note) ||\r\n        !this.task.date ||\r\n        (this.is_note && !this.task.description)\r\n      );\r\n    },\r\n    type_full() {\r\n      return this.magic[this.task.type] || this.task.type || \"Task\";\r\n    },\r\n    newlink_not_ready() {\r\n      // check if path and text, and also that path is a valid url\r\n      return !this.newlink.path || !this.newlink.text || !this.newlink.path.startsWith(\"http\");\r\n    },\r\n    class_obj() {\r\n      let classes = this.store?.classes;\r\n      if (!classes) return null;\r\n      return classes.find((class_obj) => class_obj.id === this.original.class_id) || {};\r\n    },\r\n    store() {\r\n      return useMainStore();\r\n    },\r\n    magic() {\r\n      return useMagic();\r\n    },\r\n    is_note() {\r\n      return this.task.type === \"note\";\r\n    },\r\n    changed() {\r\n      return JSON.stringify(this.task) !== JSON.stringify(this.original);\r\n    },\r\n    date() {\r\n      let date = compatDateObj(this.task?.date);\r\n      if (isNaN(date.getTime())) return;\r\n      // read it as being in the current timezone\r\n      date = new Date(date.getTime() + date.getTimezoneOffset() * 60 * 1000);\r\n\r\n      return new Date(date).toLocaleDateString(undefined, {\r\n        weekday: \"long\",\r\n        month: \"long\",\r\n        day: \"numeric\",\r\n      });\r\n    },\r\n    path_ready() {\r\n      return (\r\n        !this.loaded_text &&\r\n        this.newlink.path &&\r\n        this.newlink_not_ready &&\r\n        this.newlink.path.startsWith(\"https://\")\r\n      );\r\n    },\r\n  },\r\n  watch: {\r\n    \"newlink.path\"(new_path, old_path) {\r\n      if (new_path != old_path) {\r\n        this.loaded_text = false;\r\n      }\r\n    },\r\n    \"newlink.text\"(new_text, old_text) {\r\n      if (new_text != old_text) {\r\n        this.loaded_text = false;\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    try_submit() {\r\n      if (!this.not_submittable) {\r\n        this.update_task();\r\n      } else if (!this.changed) {\r\n        new WarningToast(\"No changes to submit\", 1000);\r\n      } else {\r\n        new WarningToast(\"Please fill out all required fields\", 1000);\r\n      }\r\n    },\r\n    add_newlink() {\r\n      if (!this.task.links) this.task.links = [];\r\n      // add protocol if missing\r\n      this.newlink.path = new URL(this.newlink.path).href;\r\n      this.task.links.push(this.newlink);\r\n      this.task.links = [...new Set(this.task.links)];\r\n      this.newlink = {\r\n        text: \"\",\r\n        path: \"\",\r\n      };\r\n    },\r\n    async update_task() {\r\n      if (!this.newlink_not_ready) {\r\n        new WarningToast(\"Don't forget to to click the 'Add' button to add your link!\", 2000);\r\n        return;\r\n      }\r\n      this.loading = true;\r\n      this.store\r\n        .update_task(this.task.ref, this.task)\r\n        .then(() => {\r\n          // this.$emit(\"close\");\r\n          // redirect to view\r\n          this.$router.push({\r\n            name: \"viewtask\",\r\n            params: {\r\n              ref: this.$route.params.ref,\r\n            },\r\n            query: this.$route.query,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          this.loading = false;\r\n          _status.error(`📃 Couldn't save changes to ${this.task.type || \"task\"}:`, err);\r\n          new ErrorToast(`Couldn't edit ${this.task.type || \"task\"}`, err, 2000);\r\n        });\r\n    },\r\n    archive_task() {\r\n      this.$router.push({\r\n        name: \"archive\",\r\n        params: {\r\n          type: this.task.type,\r\n          ref: this.$route.params.ref,\r\n        },\r\n        query: {\r\n          title: this.is_note ? this.task.description : this.task.name,\r\n          ...this.$route.query,\r\n        },\r\n      });\r\n    },\r\n    async get_task() {\r\n      // get task ref from route params\r\n      const ref = this.$route.params.ref.split(\"~\").join(\"/\");\r\n      if (!ref) {\r\n        new WarningToast(\"No task specified\", 1500);\r\n        this.$emit(\"close\");\r\n      } else if (ref.split(\"/\").length < 3) {\r\n        new WarningToast(\"Invalid task specified\", 1500);\r\n        this.$emit(\"close\");\r\n      }\r\n      // get task from store\r\n      this.store\r\n        .task_from_ref(ref)\r\n        .then((task) => {\r\n          if (!task) {\r\n            new WarningToast(\"Couldn't find that task\", 2000);\r\n            _status.warn(\"⚠ Couldn't find task\");\r\n            this.$emit(\"close\");\r\n          } else {\r\n            this.task = task;\r\n            // set original to be unconnected copy of task\r\n            this.original = JSON.parse(JSON.stringify(task));\r\n            this.ready = true;\r\n            this.loading = false;\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          new ErrorToast(\"Error getting task\", err, 1500);\r\n          _status.error(\"⚠ Error getting task\", err);\r\n          this.$emit(\"close\");\r\n        });\r\n    },\r\n    remove_link(link) {\r\n      this.task.links = this.task.links.filter((l) => l.path !== link.path);\r\n      this.newlink = link;\r\n    },\r\n    fix_newlink_path() {\r\n      if (this.newlink.path && this.newlink.path.includes(\".\")) {\r\n        try {\r\n          this.newlink.path = new URL(this.newlink.path).href;\r\n        } catch (err) {\r\n          // add protocol if missing\r\n          this.newlink.path = \"https://\" + this.newlink.path;\r\n          this.fix_newlink_path();\r\n        }\r\n      }\r\n    },\r\n    async magic_text() {\r\n      if (!this.path_ready || this.newlink.text) return;\r\n      this.loading_text = true;\r\n      this.magic\r\n        .text(this.newlink.path)\r\n        .then((text) => {\r\n          if (text) {\r\n            new SuccessToast(`Generated link text '${text}'`, 1500);\r\n            _status.log(\"🔗 Generated link text:\", text);\r\n            this.newlink.text = text;\r\n          } else {\r\n            new WarningToast(\"Couldn't reasonably infer link text\", 2000);\r\n            _status.warn(\"📃 Couldn't generate link text\");\r\n          }\r\n          this.loaded_text = true;\r\n          this.loading_text = false;\r\n        })\r\n        .catch((err) => {\r\n          new ErrorToast(\"Couldn't generate link text\", err, 3000);\r\n          _status.error(\"⚠ Failed link text generation:\", err);\r\n          this.loaded_text = false;\r\n          this.loading_text = false;\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.checkboxes {\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  align-items: flex-start;\r\n  margin-top: 0.5rem;\r\n}\r\n.checkbox {\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  align-items: center;\r\n  margin-top: 0.5rem;\r\n}\r\n.checkbox label {\r\n  padding-left: 0.5rem;\r\n  user-select: none;\r\n  cursor: pointer;\r\n}\r\n.input_task__date {\r\n  max-width: 150px;\r\n}\r\n.inputs_row {\r\n  flex-flow: row wrap;\r\n}\r\n.input_task__date {\r\n  margin-right: 0;\r\n}\r\n.styled_input.input_task__date {\r\n  margin-right: 0;\r\n}\r\nselect.type_dropdown {\r\n  padding: 5px;\r\n  background-color: var(--color-overlay-input);\r\n  color: var(--color-on-overlay-input);\r\n  border: none;\r\n  border-radius: var(--radius-overlay-input);\r\n  width: auto;\r\n}\r\n.type_dropdown__option {\r\n  font-size: 14px;\r\n}\r\n.loading_icon {\r\n  max-height: 150px;\r\n  min-width: 100%;\r\n}\r\n</style>\r\n","import { render } from \"./EditTask.vue?vue&type=template&id=63a22c07&scoped=true\"\nimport script from \"./EditTask.vue?vue&type=script&lang=js\"\nexport * from \"./EditTask.vue?vue&type=script&lang=js\"\n\nimport \"./EditTask.vue?vue&type=style&index=0&id=63a22c07&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\sande\\\\Documents\\\\GitHub\\\\mvtime.github.io\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-63a22c07\"]])\n\nexport default __exports__"],"names":["API_URL","useMagic","defineStore","id","state","last","types","note","task","test","project","quiz","exam","getters","actions","async","path","this","rated_api_get","endpoint","data","url","URL","Object","keys","forEach","key","searchParams","append","run_hash","Math","random","toString","substring","_status","log","time","Date","now","hash","response","fetch","href","method","headers","ok","json","err","error","type","prev_time","prev_hash","warn","Promise","resolve","setTimeout","api_get","arguments","class","ref","_createElementVNode","alt","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","$data","_hoisted_4","ready","_hoisted_5","_hoisted_6","original","name","_class","onClick","_cache","$event","preventDefault","_ctx","$router","push","$route","query","style","_normalizeStyle","$options","class_obj","color","period","_hoisted_7","_hoisted_8","is_note","placeholder","type_full","disabled","date","maxWidth","_hoisted_10","description","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","links","length","_hoisted_16","_Fragment","_renderList","link","target","remove_link","text","_hoisted_17","_hoisted_15","_hoisted_18","_hoisted_19","newlink","onBlur","args","fix_newlink_path","_hoisted_20","_normalizeClass","magic_out","path_ready","loading_bg","loading_text","magic_text","title","add_newlink","newlink_not_ready","_hoisted_22","_hoisted_23","_hoisted_24","$emit","_hoisted_25","archive_task","loading","_hoisted_26","try_submit","not_submittable","_hoisted_27","emits","mixins","smoothReflow","loaded_text","mounted","$smoothReflow","el","$refs","contents","childTransitions","hideOverflow","get_task","computed","changed","magic","startsWith","classes","store","find","class_id","useMainStore","JSON","stringify","compatDateObj","isNaN","getTime","getTimezoneOffset","toLocaleDateString","undefined","weekday","month","day","watch","new_path","old_path","new_text","old_text","methods","WarningToast","update_task","Set","then","params","catch","ErrorToast","split","join","task_from_ref","parse","filter","l","includes","SuccessToast","__exports__","render"],"sourceRoot":""}