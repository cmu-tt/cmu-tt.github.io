{"version":3,"file":"js/654.4fd6120f.js","mappings":"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","sources":["webpack://mvtime/./src/views/Portal/CreateTask.vue","webpack://mvtime/./src/views/Portal/CreateTask.vue?4068"],"sourcesContent":["<template>\n  <div class=\"create_task\">\n    <header class=\"modal_header\">\n      <h2 class=\"header_style modal_header_title\">\n        <span>Add a{{ is_vowel(type_full[0]) ? \"n\" : \"\" }}&MediumSpace;</span>\n        <div\n          class=\"header_magic_wrapper magic_wrapper contents_inherit\"\n          :class=\"{ magic_ready: type_ready }\"\n        >\n          <select\n            title=\"Task type\"\n            v-model=\"task.type\"\n            class=\"type_dropdown styled_input styled_select\"\n            ref=\"type\"\n          >\n            <option\n              class=\"type_dropdown__option styled_select__option\"\n              v-for=\"entry in $magic.types\"\n              :value=\"entry.key\"\n              :key=\"entry.key\"\n            >\n              {{ entry.name }}\n            </option>\n          </select>\n          <div\n            class=\"magic magic_in styled_magic alt_bg click-action\"\n            :class=\"{ magic_out: !type_ready, loading_bg: loading_type }\"\n            :disabled=\"!type_ready || loading_type\"\n            @click=\"magic_type\"\n            title=\"Use magically inferred type\"\n          ></div>\n        </div>\n      </h2>\n    </header>\n    <div class=\"overlay_contents\" ref=\"contents\">\n      <div class=\"overlay_contents_text\">\n        <span v-if=\"is_note\">Add a new {{ task.type }} to</span>\n        <span v-else>Schedule a new {{ task.type }} for</span>\n        your class{{ classes && classes.length == 1 ? \"\" : \"es\" }}\n      </div>\n      <div class=\"inputs_row\">\n        <input\n          v-if=\"!is_note\"\n          v-model=\"task.name\"\n          class=\"styled_input\"\n          type=\"text\"\n          :placeholder=\"type_full + ' Name'\"\n          :disabled=\"is_note\"\n        />\n        <input\n          type=\"date\"\n          ref=\"date\"\n          class=\"styled_input input_task__date\"\n          v-model=\"task.date\"\n          :style=\"{ maxWidth: is_note ? '100%' : null }\"\n        />\n        <div class=\"flex-break\"></div>\n        <textarea\n          v-model=\"task.description\"\n          class=\"styled_input styled_textarea task_description\"\n          type=\"text\"\n          :placeholder=\"type_full + (is_note ? ' Contents' : ' Description (Optional)')\"\n        >\n        </textarea>\n        <div class=\"flex-break\"></div>\n        <div class=\"styled_input styled_links_box\">\n          <div class=\"styled_links_display\">\n            <span v-if=\"!task.links || !task.links.length\" class=\"placeholder\"\n              >{{ type_full }} Links (Optional)</span\n            >\n            <div v-else class=\"styled_line_links\">\n              <a\n                class=\"styled_line_links__link styled_line_links__remove\"\n                target=\"_blank\"\n                v-for=\"link in task.links\"\n                :key=\"link.path\"\n                @click=\"remove_link(link)\"\n                >{{ link.text }}</a\n              >\n            </div>\n          </div>\n          <hr class=\"styled_links_separator\" />\n          <div\n            class=\"styled_links_add\"\n            @keydown=\"\n              if ($event.key === 'Enter') {\n                $event.preventDefault();\n                add_newlink();\n              }\n            \"\n          >\n            <input\n              class=\"styled_links_add__path\"\n              type=\"url\"\n              v-model=\"newlink.path\"\n              @blur=\"fix_newlink_path\"\n              placeholder=\"Link URL (https://example.com)\"\n            />\n            <div class=\"magic_wrapper styled_links_add__sized\">\n              <input\n                class=\"styled_links_add__text\"\n                type=\"text\"\n                v-model=\"newlink.text\"\n                placeholder=\"Link Text (what students see)\"\n              />\n              <div\n                class=\"magic magic_in styled_magic alt_bg click-action\"\n                :class=\"{ magic_out: !path_ready, loading_bg: loading_text }\"\n                :disabled=\"!path_ready || loading_text\"\n                @click=\"magic_text\"\n                title=\"Auto-generate link text\"\n              ></div>\n            </div>\n            <button\n              class=\"styled_links_add__action\"\n              @click=\"add_newlink\"\n              :disabled=\"newlink_not_ready\"\n            >\n              Add\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"overlay_contents_text\">\n        Choose which classes this {{ task.type }} will be added to\n      </div>\n      <div class=\"classes_checkboxes checkboxes\">\n        <a\n          class=\"checkbox\"\n          v-for=\"class_obj in classes\"\n          :key=\"class_obj.id\"\n          :href=\"'/view/' + $store.path_to_ref(class_obj.ref)\"\n        >\n          <input type=\"checkbox\" :id=\"class_obj.id\" :value=\"class_obj.id\" v-model=\"task_classes\" />\n          <label\n            class=\"button_pointer_text class_name\"\n            v-if=\"class_obj.id\"\n            :for=\"class_obj.id\"\n            :style=\"{\n              '--color-class': class_obj.color,\n              '--color-class-alt': class_obj.color + '2d',\n            }\"\n          >\n            {{ $store.class_text(class_obj) }}\n          </label>\n          <label v-else :for=\"class_obj.id\" @click=\"$event.stopPropagation\">{{\n            class_obj.name\n          }}</label>\n        </a>\n      </div>\n    </div>\n    <div class=\"bottom_actions\">\n      <button class=\"close_action click_escape\" @click=\"$emit('close')\">Close</button>\n      <div class=\"flex_spacer\"></div>\n      <button\n        class=\"continue_action click_ctrlenter\"\n        :class=\"{ loading_bg: loading }\"\n        @click=\"try_submit\"\n        :disabled=\"!ready\"\n      >\n        Add {{ task.type }}\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\n/**\n * Creates a new task for the teacher's selected class(es).\n *\n * @module CreateTaskView\n * @description Modal that allows teacher's to create a new task for their classes.\n * @param {string} tasktype - The type of task to create (task, project, test, etc.) Provided by the router.\n * @requires module:store/MainStore\n * @emits {Function} close - An event emitted when the task is created or the modal is closed.\n */\n\nimport { ErrorToast, WarningToast, SuccessToast } from \"@svonk/util\";\nimport smoothReflow from \"vue-smooth-reflow\";\n\nexport default {\n  name: \"CreateTaskView\",\n  emits: [\"close\"],\n  mixins: [smoothReflow],\n  mounted() {\n    this.$smoothReflow({\n      el: this.$refs.contents,\n    });\n    if (!this.$route?.params?.tasktype) {\n      this.$refs.type.focus();\n    } else {\n      this.$refs.date.focus();\n    }\n\n    // remove the class and date from the query\n    this.$router.replace({\n      ...this.$route,\n      query: { ...this.$route.query, class: undefined, date: undefined },\n    });\n  },\n  data() {\n    return {\n      task: {\n        name: \"\",\n        date: this.$route.query?.date ? this.$route.query.date : \"\",\n        description: \"\",\n        type: this.$route.params.tasktype ? this.$route.params.tasktype : \"task\",\n      },\n      task_classes: this.$route.query?.class ? [this.$route.query.class] : [],\n      newlink: {\n        text: \"\",\n        path: \"\",\n      },\n      loading: false,\n      loading_type: false,\n      loading_text: false,\n      loaded_type: false,\n      loaded_text: false,\n    };\n  },\n  computed: {\n    ready() {\n      return (\n        (this.task.name || this.is_note) &&\n        this.task.date &&\n        this.task_classes.length &&\n        (!this.is_note || this.task.description)\n      );\n    },\n    type_full() {\n      return this.$magic.type_full(this.task.type);\n    },\n    newlink_not_ready() {\n      // check if path and text, and also that path is a valid url\n      if (!this.newlink.path || !this.newlink.text) {\n        return true;\n      }\n      try {\n        void new URL(this.newlink.path);\n        return false;\n      } catch (err) {\n        return true;\n      }\n    },\n    class_name() {\n      if (!this.classes) return null;\n      let class_obj = this.classes.find((class_obj) => class_obj.id === this.class_id);\n      if (!class_obj) return null;\n      return class_obj.name;\n    },\n    classes() {\n      return this.$store.classes;\n    },\n    is_note() {\n      return this.task.type === \"note\";\n    },\n    type_ready() {\n      return !this.loaded_type && this.task && (this.task.description || this.task.name).length > 5;\n    },\n    path_ready() {\n      return (\n        !this.loaded_text &&\n        this.newlink.path &&\n        this.newlink_not_ready &&\n        this.newlink.path.startsWith(\"https://\")\n      );\n    },\n  },\n  methods: {\n    try_submit() {\n      if (this.ready) {\n        this.create_task();\n      } else {\n        new WarningToast(\"Please fill out all required fields\", 1000);\n      }\n    },\n    is_vowel(char) {\n      return [\"a\", \"e\", \"i\", \"o\", \"u\"].includes(char.toLowerCase());\n    },\n    add_newlink() {\n      if (!this.task.links) this.task.links = [];\n      // add protocol if missing\n      this.newlink.path = new URL(this.newlink.path).href;\n      this.task.links.push(this.newlink);\n      this.newlink = {\n        text: \"\",\n        path: \"\",\n      };\n    },\n    create_task() {\n      if (!this.newlink_not_ready) {\n        new WarningToast(\"Don't forget to to click the 'Add' button to add your link!\", 2000);\n        return;\n      }\n      this.loading = true;\n      this.$store\n        .create_task(this.task, this.task_classes)\n        .then(() => {\n          //! router to new task view?\n          this.$emit(\"close\");\n        })\n        .catch((err) => {\n          this.loading = false;\n          this.$status.error(`📃 Couldn't create ${this.task.type || \"task\"}:`, err);\n          new ErrorToast(\"Couldn't create task\", err, 2000);\n        });\n    },\n    remove_link(link) {\n      this.task.links = this.task.links.filter((l) => l.path !== link.path);\n      this.newlink = link;\n    },\n    fix_newlink_path() {\n      if (this.newlink.path && this.newlink.path.includes(\".\")) {\n        try {\n          this.newlink.path = new URL(this.newlink.path).href;\n        } catch (err) {\n          // add protocol if missing\n          this.newlink.path = \"https://\" + this.newlink.path;\n          this.fix_newlink_path();\n        }\n      }\n    },\n    async magic_type() {\n      if (!this.type_ready) return;\n      this.loading_type = true;\n      // cleanup task\n      const clean_task = {\n        name: this.task.name,\n        description: this.task.description,\n        date: this.task.date,\n        classes: this.task_classes.map(\n          (class_id) => this.classes.find((c) => c.id == class_id)?.name\n        ),\n      };\n\n      this.$magic\n        .type(JSON.stringify(clean_task))\n        .then((type) => {\n          if (type) {\n            new SuccessToast(`Generated task type '${type}'`, 1500);\n            this.$status.log(\"🔗 Generated task type:\", type);\n            this.task.type = type;\n          } else {\n            new WarningToast(\"Couldn't reasonably infer a task type\", 2000);\n            this.$status.warn(\"📃 Couldn't generate task type\");\n          }\n          this.loaded_type = true;\n          this.loading_type = false;\n        })\n        .catch((err) => {\n          new ErrorToast(\"Something went wrong generating the task type\", err, 3000);\n          this.$status.error(\"⚠ Failed task type generation:\", err);\n          this.loaded_type = false;\n          this.loading_type = false;\n        });\n    },\n    async magic_text() {\n      if (!this.path_ready || this.newlink.text) return;\n      this.loading_text = true;\n      this.$magic\n        .text(this.newlink.path)\n        .then((text) => {\n          if (text) {\n            new SuccessToast(`Generated link text '${text}'`, 1500);\n            this.$status.log(\"🔗 Generated link text:\", text);\n            this.newlink.text = text;\n          } else {\n            new WarningToast(\"Couldn't reasonably infer link text\", 2000);\n            this.$status.warn(\"📃 Couldn't generate link text\");\n          }\n          this.loaded_text = true;\n          this.loading_text = false;\n        })\n        .catch((err) => {\n          new ErrorToast(\"Couldn't generate link text\", err, 3000);\n          this.$status.error(\"⚠ Failed link text generation:\", err);\n          this.loaded_text = false;\n          this.loading_text = false;\n        });\n    },\n  },\n  watch: {\n    \"$route.params.tasktype\"(new_type) {\n      this.task.type = new_type;\n    },\n    \"task.type\"(new_type, old_type) {\n      // update paramater in url\n      this.$router.replace({\n        ...this.$route,\n        params: { ...this.$route.params, tasktype: new_type },\n      });\n      // if task -> note, clear name and move to description if empty {\n      if (new_type == \"note\") {\n        this.task.description = this.task.description || this.task.name;\n        this.task.name = \"\";\n      } else if (old_type == \"note\" && this.task.description?.length <= 35) {\n        this.task.name = this.task.description;\n        this.task.description = \"\";\n      }\n    },\n    // if newlink.path changes, set loaded_text to false\n    \"newlink.path\"(new_path, old_path) {\n      if (new_path != old_path) {\n        this.loaded_text = false;\n      }\n    },\n    \"newlink.text\"(new_text, old_text) {\n      if (new_text != old_text) {\n        this.loaded_text = false;\n      }\n    },\n    // if name, description, date, or classes change, set loaded_type to false\n    // fix for references being the same\n    \"task.name\"(new_name, old_name) {\n      if (new_name !== old_name) {\n        this.loaded_type = false;\n      }\n    },\n    \"task.description\"(new_desc, old_desc) {\n      if (new_desc !== old_desc) {\n        this.loaded_type = false;\n      }\n    },\n    \"task.date\"(new_date, old_date) {\n      if (new_date !== old_date) {\n        this.loaded_type = false;\n      }\n    },\n    task_classes: {\n      deep: true,\n      handler(new_classes, old_classes) {\n        if (new_classes != old_classes) {\n          this.loaded_type = false;\n        }\n      },\n    },\n  },\n};\n</script>\n\n<style scoped>\n.checkboxes {\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: flex-start;\n  margin-top: 0.5rem;\n}\n.checkbox {\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n}\n.checkbox label {\n  padding-left: 0.5rem;\n  user-select: none;\n  cursor: pointer;\n}\n.inputs_row {\n  flex-flow: row wrap;\n}\n.styled_input.input_task__date {\n  margin-right: 0;\n  max-width: 150px;\n}\nselect.type_dropdown {\n  padding: 5px;\n  background-color: var(--color-overlay-input);\n  color: var(--color-on-overlay-input);\n  border: none;\n  border-radius: var(--radius-overlay-input);\n  width: auto;\n}\n.type_dropdown__option {\n  font-size: 14px;\n}\n.class_name {\n  margin-left: 0.75em;\n}\n.checkboxes .checkbox input:checked + label.class_name {\n  background-color: var(--color-class);\n  color: var(--color-on-class);\n}\n/* new display method */\n.checkboxes .checkbox input {\n  display: none;\n}\n.checkboxes .checkbox label {\n  margin-left: unset;\n}\n/* inline variation */\n.checkboxes {\n  gap: 0.5em;\n  display: inline-flex;\n  flex-flow: row wrap;\n}\n.checkboxes .checkbox {\n  margin: 0;\n  display: inline-flex;\n  flex-grow: 1;\n}\n.checkboxes .checkbox label {\n  width: 100%;\n  text-align: center;\n}\n@media (max-width: 600px) {\n  .checkboxes {\n    gap: 0.5em;\n  }\n  .checkboxes .checkbox,\n  .checkboxes .checkbox label {\n    width: 100%;\n    text-align: left;\n    line-height: 2.5em;\n  }\n  .checkboxes .checkbox label {\n    padding: 0 1em;\n    height: 2.5em;\n  }\n}\n\n.parent.simplified .checkboxes {\n  gap: 0.5em;\n}\n.parent.simplified .checkboxes .checkbox,\n.parent.simplified .checkboxes .checkbox label {\n  width: 100%;\n  text-align: left;\n  line-height: 2.5em;\n}\n.parent.simplified .checkboxes .checkbox label {\n  padding: 0 1em;\n  height: 2.5em;\n}\n</style>\n","import { render } from \"./CreateTask.vue?vue&type=template&id=f9f53c78&scoped=true\"\nimport script from \"./CreateTask.vue?vue&type=script&lang=js\"\nexport * from \"./CreateTask.vue?vue&type=script&lang=js\"\n\nimport \"./CreateTask.vue?vue&type=style&index=0&id=f9f53c78&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/sander/Documents/GitHub/mvtime.github.io/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-f9f53c78\"]])\n\nexport default __exports__"],"names":["class","ref","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","$options","is_vowel","type_full","_normalizeClass","magic_ready","type_ready","title","$data","task","type","$event","_Fragment","_renderList","_ctx","$magic","types","entry","value","key","name","_hoisted_4","magic_out","loading_bg","loading_type","disabled","onClick","_cache","args","magic_type","_hoisted_6","_hoisted_7","is_note","_hoisted_8","_hoisted_9","classes","length","_hoisted_10","placeholder","date","style","_normalizeStyle","maxWidth","_hoisted_12","description","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","links","_hoisted_18","link","target","path","remove_link","text","_hoisted_19","_hoisted_17","_hoisted_20","onKeydown","preventDefault","add_newlink","newlink","onBlur","fix_newlink_path","_hoisted_21","path_ready","loading_text","magic_text","newlink_not_ready","_hoisted_23","_hoisted_24","_hoisted_25","class_obj","id","href","$store","path_to_ref","task_classes","for","color","class_text","_hoisted_28","stopPropagation","_hoisted_29","_hoisted_30","$emit","_hoisted_31","loading","try_submit","ready","_hoisted_32","emits","mixins","smoothReflow","mounted","this","$smoothReflow","el","$refs","contents","$route","params","tasktype","focus","$router","replace","query","undefined","data","loaded_type","loaded_text","computed","URL","err","class_name","find","class_id","startsWith","methods","create_task","WarningToast","char","includes","toLowerCase","push","then","catch","$status","error","ErrorToast","filter","l","async","clean_task","map","c","JSON","stringify","SuccessToast","log","warn","watch","new_type","old_type","new_path","old_path","new_text","old_text","new_name","old_name","new_desc","old_desc","new_date","old_date","deep","handler","new_classes","old_classes","__exports__","render"],"sourceRoot":""}