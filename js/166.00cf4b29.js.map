{"version":3,"file":"js/166.00cf4b29.js","mappings":"0OACEA,EAAAA,EAAAA,IASEC,EAAA,CARCC,cAAc,EACdC,MAAO,eACPC,KAAMC,EAAAC,SACNC,gBAAiBF,EAAAG,KACjBC,WAAW,EACXC,UAAW,SACXC,OAAIC,EAAA,KAAAA,EAAA,GAAAC,GAAEC,EAAAC,MAAM,UACZC,YAAa,Y,qEAclB,GACEC,KAAM,eACNC,WAAY,CACVC,MAAKA,EAAAA,GAEPC,MAAO,CAAC,SACRC,OACE,MAAO,CAAEC,KAAM,GACjB,EACAC,UACEC,KAAKF,KAAOE,KAAKC,QAAQC,QAAQJ,KAC5BE,KAAKF,KAKRE,KAAKF,KAAOE,KAAKF,KAAKK,WAAW,QAAUH,KAAKF,KAAQ,WAAUE,KAAKF,QAJvE,IAAIM,EAAAA,GAAa,yBACjBJ,KAAKT,MAAM,UAKb,IACE,MAAMc,EAAM,IAAIC,IAAIN,KAAKF,MACrB,YAAcO,EAAIE,OACpB,IAAIC,EAAAA,GAAa,uBACjBR,KAAKhB,OAET,CAAE,MACAyB,EAAAA,GAAQC,IAAI,4CACd,CACF,EACAC,SAAU,CACR7B,WACE,OAAOkB,KAAKF,KACP,wCAAuCE,KAAKF,SAAS,IAAIQ,IAAIN,KAAKF,MAAMS,oHAGzE,uBACN,GAEFK,QAAS,CACP5B,OACEgB,KAAKT,MAAM,SACXsB,OAAOC,SAASC,QAAQf,KAAKF,KAC/B,I,QC3DJ,MAAMkB,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O","sources":["webpack://mvtime/./src/views/Home/Redirect.vue","webpack://mvtime/./src/views/Home/Redirect.vue?00b7"],"sourcesContent":["<template>\n  <Modal\n    :can_continue=\"true\"\n    :title=\"'Leaving MVTT'\"\n    :html=\"contents\"\n    :continue_action=\"open\"\n    :skippable=\"true\"\n    :skip_text=\"'Cancel'\"\n    @skip=\"$emit('close')\"\n    :submit_text=\"'Continue'\"\n  />\n</template>\n\n<script>\n/**\n * @file Redirect.vue\n * @displayName Redirect\n * @description A view that redirects to the path specified in the route \"path\" prop.\n */\n\nimport Modal from \"@/components/Modal/Modal.vue\";\nimport { WarningToast, SuccessToast } from \"@svonk/util\";\nimport { _status } from \"@/common\";\nexport default {\n  name: \"RedirectView\",\n  components: {\n    Modal,\n  },\n  emits: [\"close\"],\n  data() {\n    return { path: \"\" };\n  },\n  mounted() {\n    this.path = this.$route?.params?.path;\n    if (!this.path) {\n      new WarningToast(\"Missing redirect path\");\n      this.$emit(\"close\");\n    } else {\n      // fix path to add protocol if it's missing\n      this.path = this.path.startsWith(\"http\") ? this.path : `https://${this.path}`;\n    }\n    try {\n      const url = new URL(this.path);\n      if (\"mvtt.app\" == url.host) {\n        new SuccessToast(\"Redirecting to MVTT\");\n        this.open();\n      }\n    } catch {\n      _status.log(\"Couldn not verify path domain is not MVTT\");\n    }\n  },\n  computed: {\n    contents() {\n      return this.path\n        ? `You are being redirected to <a href=\"${this.path}\">${new URL(this.path).host}</a>\n            <br><br>\n           Content outside of MVTT is not vetted by our team, and may be harmful.`\n        : \"Missing redirect path\";\n    },\n  },\n  methods: {\n    open() {\n      this.$emit(\"close\");\n      window.location.replace(this.path);\n    },\n  },\n};\n</script>\n\n<style></style>\n","import { render } from \"./Redirect.vue?vue&type=template&id=0f307df2\"\nimport script from \"./Redirect.vue?vue&type=script&lang=js\"\nexport * from \"./Redirect.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/sander/Documents/GitHub/mvtime.github.io/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createBlock","_component_Modal","can_continue","title","html","$options","contents","continue_action","open","skippable","skip_text","onSkip","_cache","$event","_ctx","$emit","submit_text","name","components","Modal","emits","data","path","mounted","this","$route","params","startsWith","WarningToast","url","URL","host","SuccessToast","_status","log","computed","methods","window","location","replace","__exports__","render"],"sourceRoot":""}