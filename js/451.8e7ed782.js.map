{"version":3,"file":"js/451.8e7ed782.js","mappings":"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","sources":["webpack://mvtime/./src/store/magic.js","webpack://mvtime/./src/views/Portal/NotesTask.vue","webpack://mvtime/./src/views/Portal/NotesTask.vue?f151"],"sourcesContent":["// Path: store/magic.js\n\n// setup Pinia store\nimport { _status } from \"@/common\";\nimport { defineStore } from \"pinia\";\n\nconst API_URL = \"https://api.mvtt.app/\";\n\nexport const useMagic = defineStore({\n  id: \"magic\",\n  state: () => ({\n    last: {},\n    types: {\n      note: \"Note\",\n      task: \"Assignment\",\n      // socratic: \"Socratic Seminar\",\n      test: \"Test\",\n      // summative: \"Summative Assignment\",\n      // midterm: \"Midterm\",\n      project: \"Project\",\n      quiz: \"Quiz\",\n      exam: \"Exam\",\n    },\n  }),\n  getters: {},\n  actions: {\n    /**\n     * @function path\n     * @description get the smart text associated with a given url\n     * @param {String} path\n     * @returns {String} text - the smart text associated with the url\n     */\n    async text(path) {\n      if (!path) return;\n      return await this.rated_api_get(\"get/magic/link-text\", { path });\n    },\n    /**\n     * @function type\n     * @description get the smart type associated with a given description\n     * @param {String} text\n     */\n    async type(task) {\n      if (!task) return;\n      return await this.rated_api_get(\"get/magic/task-type\", { task });\n    },\n    /**\n     * @function api_get\n     * @description do get request to url: API_URL + endpoint with request query of data\n     * @param {String} endpoint api endpoint\n     * @param {Object} data query params\n     * @returns {Promise<Object>} json\n     */\n    async api_get(endpoint, data) {\n      data = data || {};\n      if (!endpoint) return;\n      // get url with query\n      const url = new URL(API_URL + endpoint);\n      Object.keys(data).forEach((key) => url.searchParams.append(key, data[key]));\n      const run_hash = Math.random().toString(36).substring(7);\n      _status.log(`ðŸ›œ Running API fetch | <${run_hash}>`);\n      // do request\n      this.last[endpoint] = { time: Date.now(), hash: run_hash };\n      try {\n        const response = await fetch(url.href, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        });\n        // response\n        if (!response.ok) throw \"Non-valid response\";\n        const json = await response.json();\n        _status.log(`ðŸ›œ API fetch success | <${run_hash}>`);\n        return json.data;\n      } catch (err) {\n        _status.error(`ðŸ›œ API fetch failed  | <${run_hash}>`, err);\n        return null;\n      }\n    },\n    /**\n     * @function rated_api_get\n     * @description do api_get but abide by rate limit (only eval once every 15 seconds)\n     */\n    async rated_api_get(type) {\n      _status.log(\"ðŸ›œ API fetch requested\");\n      const run_hash = Math.random().toString(36).substring(7);\n      const prev_time = this.last[type]?.time;\n      const prev_hash = this.last[type]?.hash;\n      if (Date.now() - prev_time < 2000) {\n        _status.warn(\"ðŸ›œ API fetch rate limited\");\n        // wait 15 seconds and see if it is still the most recent request\n        await new Promise((resolve) => setTimeout(resolve, 15000));\n        if (this.last[type]?.time !== prev_time || this.last[type]?.hash !== prev_hash) {\n          _status.warn(\"ðŸ›œ Outdated API fetch skipped\");\n          return;\n        } else {\n          _status.log(\"ðŸ›œ API fetch rate limit lifted\");\n        }\n      }\n      return await this.api_get(...arguments, run_hash);\n    },\n  },\n});\n","<template>\n  <div class=\"edit_task\">\n    <header class=\"modal_header\" ref=\"title\">\n      <h2 class=\"header_style modal_header_title\">\n        {{ original_note ? \"Update\" : \"Add\" }} {{ task.type || \"task\" }} notes\n      </h2>\n    </header>\n    <div class=\"overlay_contents\" ref=\"contents\">\n      <div v-if=\"ready\">\n        <div class=\"overlay_contents_text change_text\">\n          Save your notes for \"{{ task.name }}\" in\n          <a\n            class=\"class_name button_pointer_text\"\n            :href=\"`/view/${task._class.ref}`\"\n            @click=\"\n              $event.preventDefault();\n              $router.push({\n                name: 'viewclass',\n                params: { ref: task._class.ref },\n                query: $route.query,\n              });\n            \"\n            :style=\"{\n              '--color-class': task._class.color,\n              '--color-class-alt': task._class.color + '2d',\n            }\"\n            >{{ `P${task._class.period} - ${task._class.name}` }}</a\n          >\n        </div>\n        <div class=\"inputs_row\">\n          <textarea\n            v-model=\"note\"\n            class=\"styled_input styled_textarea task_note\"\n            type=\"text\"\n            :placeholder=\"'Your ' + type_full + ' Notes (Optional)'\"\n          >\n          </textarea>\n        </div>\n      </div>\n      <img alt=\"Loading Icon\" class=\"loading_icon\" v-else />\n    </div>\n    <div class=\"bottom_actions\">\n      <button\n        class=\"back_action click_escape\"\n        :class=\"{ loading_bg: loading }\"\n        v-if=\"ready\"\n        :disabled=\"loading\"\n        @click=\"back\"\n      >\n        View\n      </button>\n      <button v-else class=\"close_action click_escape\" @click=\"$emit('close')\">Close</button>\n      <div class=\"flex_spacer\"></div>\n      <button\n        class=\"continue_action click_ctrlenter\"\n        :class=\"{ loading_bg: loading }\"\n        @click=\"try_submit\"\n        :disabled=\"not_submittable\"\n      >\n        {{ original_note ? \"Update\" : \"Add\" }}\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\n/**\n * Creates a new task for the teacher's selected class(es).\n *\n * @module CreateTaskView\n * @description Modal that allows teacher's to create a new task for their classes.\n * @param {string} tasktype - The type of task to create (task, project, test, etc.) Provided by the router.\n * @requires module:store/MainStore\n * @emits {Function} close - An event emitted when the task is created or the modal is closed.\n */\n\nimport { useMainStore } from \"@/store\";\nimport { useMagic } from \"@/store/magic\";\nimport { _status } from \"@/common\";\nimport { ErrorToast, WarningToast, SuccessToast } from \"@svonk/util\";\nimport smoothReflow from \"vue-smooth-reflow\";\n\nexport default {\n  name: \"EditTaskView\",\n  emits: [\"close\"],\n  mixins: [smoothReflow],\n  data() {\n    return {\n      task: {},\n      original_note: \"\",\n      note: \"\",\n      ready: false,\n      loading: true,\n    };\n  },\n  mounted() {\n    this.$smoothReflow({\n      el: this.$refs.contents,\n      childTransitions: true,\n    });\n    this.$smoothReflow({\n      el: this.$refs.title,\n      hideOverflow: true,\n    });\n    this.get_task();\n  },\n  computed: {\n    not_submittable() {\n      return !this.changed;\n    },\n    type_full() {\n      return useMagic()?.types[this.task.type] || this.task.type || \"Task\";\n    },\n    store() {\n      return useMainStore();\n    },\n    changed() {\n      return this.original_note !== this.note;\n    },\n  },\n  methods: {\n    try_submit() {\n      if (!this.not_submittable) {\n        this.update_note();\n      } else {\n        new WarningToast(\"No changes to save\", 1000);\n      }\n    },\n    back() {\n      this.$router.push({\n        name: \"viewtask\",\n        params: {\n          ref: this.$route.params.ref,\n        },\n        query: this.$route.query,\n      });\n    },\n    async update_note() {\n      this.loading = true;\n      this.store\n        .set_note(this.note, this.$route.params.ref)\n        .then(() => {\n          new SuccessToast(\n            `${this.original_note ? (this.note ? \"Updated\" : \"Removed\") : \"Added\"} ${\n              this.task.type || \"task\"\n            } notes for ${this.task.name}`,\n            2000\n          );\n          this.back();\n        })\n        .catch((err) => {\n          this.loading = false;\n          _status.error(`ðŸ“ƒ Couldn't edit ${this.task.type || \"task\"} notes:`, err);\n          new ErrorToast(`Couldn't edit ${this.task.type || \"task\"} notes`, err, 2000);\n        });\n    },\n    async get_task() {\n      // get task ref from route params\n      const ref = this.$route.params.ref.split(\"~\").join(\"/\");\n      if (!ref) {\n        new WarningToast(\"No task specified\", 1500);\n        this.$emit(\"close\");\n      } else if (ref.split(\"/\").length < 3) {\n        new WarningToast(\"Invalid task specified\", 1500);\n        this.$emit(\"close\");\n      }\n      // get task from store\n      this.store\n        .task_from_ref(ref)\n        .then((task) => {\n          if (!task) {\n            new WarningToast(\"Couldn't find that task\", 2000);\n            _status.warn(\"âš  Couldn't find task\");\n            this.$emit(\"close\");\n          } else {\n            this.task = task;\n            this.original = { ...task };\n            this.ready = true;\n            this.loading = false;\n          }\n          // get note\n          const note = this.store.note_for(this.$route.params.ref);\n          if (note) {\n            this.note = note;\n            this.original_note = note;\n          }\n        })\n        .catch((err) => {\n          new ErrorToast(\"Error getting task\", err, 1500);\n          _status.error(\"âš  Error getting task\", err);\n          this.$emit(\"close\");\n        });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.inputs_row {\n  margin-bottom: 0;\n}\n.styled_input.task_note {\n  padding-top: 10px;\n  padding-bottom: 10px;\n}\n.loading_icon {\n  max-height: 150px;\n  min-width: 100%;\n}\n</style>\n","import { render } from \"./NotesTask.vue?vue&type=template&id=4e2ec3df&scoped=true\"\nimport script from \"./NotesTask.vue?vue&type=script&lang=js\"\nexport * from \"./NotesTask.vue?vue&type=script&lang=js\"\n\nimport \"./NotesTask.vue?vue&type=style&index=0&id=4e2ec3df&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/sander/Documents/GitHub/mvtime.github.io/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4e2ec3df\"]])\n\nexport default __exports__"],"names":["API_URL","useMagic","defineStore","id","state","last","types","note","task","test","project","quiz","exam","getters","actions","async","path","this","rated_api_get","endpoint","data","url","URL","Object","keys","forEach","key","searchParams","append","run_hash","Math","random","toString","substring","_status","log","time","Date","now","hash","response","fetch","href","method","headers","ok","json","err","error","type","prev_time","prev_hash","warn","Promise","resolve","setTimeout","api_get","arguments","class","ref","alt","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","$data","original_note","_hoisted_4","ready","_hoisted_5","_hoisted_6","name","_class","onClick","_cache","$event","preventDefault","_ctx","$router","push","$route","query","style","_normalizeStyle","color","period","_hoisted_7","_hoisted_8","placeholder","$options","type_full","_hoisted_9","_hoisted_10","_hoisted_11","_normalizeClass","loading_bg","loading","disabled","args","back","_hoisted_12","$emit","_hoisted_13","try_submit","not_submittable","_hoisted_14","emits","mixins","smoothReflow","mounted","$smoothReflow","el","$refs","contents","childTransitions","title","hideOverflow","get_task","computed","changed","store","useMainStore","methods","WarningToast","update_note","params","set_note","then","SuccessToast","catch","ErrorToast","split","join","length","task_from_ref","original","note_for","__exports__","render"],"sourceRoot":""}