{"version":3,"file":"js/642.987f2243.js","mappings":"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","sources":["webpack://mvtime/./src/store/magic.js","webpack://mvtime/./src/views/Portal/CreateTask.vue","webpack://mvtime/./src/views/Portal/CreateTask.vue?4068"],"sourcesContent":["// Path: store/magic.js\r\n\r\n// setup Pinia store\r\n// import { _status } from \"@/common\";\r\nimport { defineStore } from \"pinia\";\r\n\r\n// Smart URL\r\nconst smart_maps = [\r\n  // regex pattern, smart text\r\n  // Canvas\r\n  [/https:\\/\\/[a-zA-Z0-9]+.instructure.com\\/courses\\/[0-9]+\\/modules*./, \"Canvas Course Modules\"],\r\n  [\r\n    /https:\\/\\/[a-zA-Z0-9]+.instructure.com\\/courses\\/[0-9]+\\/assignments\\/[0-9]+/,\r\n    \"Canvas Assignment\",\r\n  ],\r\n  [/https:\\/\\/[a-zA-Z0-9]+.instructure.com\\/courses\\/[0-9]+/, \"Canvas Course\"],\r\n  [/https:\\/\\/[a-zA-Z0-9]+.instructure.com\\/courses/, \"Canvas Home\"],\r\n  [/https:\\/\\/[a-zA-Z0-9]+.instructure.com/, \"Canvas\"],\r\n  // G Classroom\r\n  [/https:\\/\\/classroom.google.com\\/c\\/[a-zA-Z0-9]+\\/a\\/.+/, \"Google Classroom Assignment\"],\r\n  [/https:\\/\\/classroom.google.com\\/c\\/[a-zA-Z0-9]+\\/p\\/.+/, \"Google Classroom Post\"],\r\n  [/https:\\/\\/classroom.google.com\\/c\\/[a-zA-Z0-9]+/, \"Google Classroom Class\"],\r\n  [/https:\\/\\/classroom.google.com\\/h/, \"Google Classroom Home\"],\r\n  [/https:\\/\\/classroom.google.com\\/u\\/[0-9]+/, \"Google Classroom Home\"],\r\n  // G Drive\r\n  [/https:\\/\\/drive.google.com\\/file\\/d\\/.+/, \"Google Drive File\"],\r\n  [/https:\\/\\/drive.google.com\\/drawings\\/d\\/.+/, \"Google Drawing\"],\r\n  [/https:\\/\\/docs.google.com\\/document\\/d\\/.+/, \"Google Docs File\"],\r\n  [/https:\\/\\/docs.google.com\\/spreadsheets\\/d\\/.+/, \"Google Sheet\"],\r\n  // LON-CAPA\r\n  [/https:\\/\\/[a-zA-Z0-9]+.lon-capa.net.*/, \"LON-CAPA Portal\"],\r\n  [/https:\\/\\/lon-capa.net.*/, \"LON-CAPA Portal\"],\r\n  [/https:\\/\\/[a-zA-Z0-9]+.loncapa.net.*/, \"LON-CAPA Portal\"],\r\n  [/https:\\/\\/loncapa.net.*/, \"LON-CAPA Portal\"],\r\n];\r\nfunction smart_url(path) {\r\n  if (!path) return;\r\n  path = path.toLowerCase();\r\n  for (let i = 0; i < smart_maps.length; i++) {\r\n    if (path.match(smart_maps[i][0])) return smart_maps[i][1];\r\n  }\r\n}\r\n\r\nexport const useMagic = defineStore({\r\n  id: \"magic\",\r\n  state: () => ({\r\n    types: {\r\n      note: \"Note\",\r\n      task: \"Assignment\",\r\n      // socratic: \"Socratic Seminar\",\r\n      test: \"Test\",\r\n      // summative: \"Summative Assignment\",\r\n      // midterm: \"Midterm\",\r\n      project: \"Project\",\r\n      quiz: \"Quiz\",\r\n      exam: \"Exam\",\r\n    },\r\n  }),\r\n  getters: {},\r\n  actions: {\r\n    /**\r\n     * @function path\r\n     * @description get the smart text associated with a given url\r\n     * @param {String} path\r\n     * @returns {String} text - the smart text associated with the url\r\n     */\r\n    text(path) {\r\n      return smart_url(path) || null;\r\n    },\r\n    /**\r\n     * @function type\r\n     * @description get the smart type associated with a given description\r\n     * @param {String} text\r\n     */\r\n    type(task) {\r\n      const note = task.type == \"note\";\r\n      const name = ((note ? task.description : task.name) || \"\").toLowerCase();\r\n      if (\r\n        (name.includes(\"summative\") && !name.includes(\"assignment\")) ||\r\n        name.includes(\"formative\") ||\r\n        (name.includes(\"unit\") && name.includes(\"test\"))\r\n      ) {\r\n        return \"test\";\r\n      }\r\n      if (name.includes(\"project\")) return \"project\";\r\n      if (name.includes(\"quiz\")) return \"quiz\";\r\n      if (name.includes(\"exam\") || name.includes(\"midterm\") || name.includes(\"final\"))\r\n        return \"exam\";\r\n      if (name.length >= 100 || (!name && task.description && task.description.length >= 60))\r\n        return \"note\";\r\n      if ((name.length >= 10 && name.length < 50 && note) || name.includes(\"assignment\"))\r\n        return \"task\";\r\n    },\r\n  },\r\n});\r\n","<template>\r\n  <div class=\"create_task\">\r\n    <header class=\"modal_header\">\r\n      <h2 class=\"header_style modal_header_title\">\r\n        <span>Add a{{ is_vowel(type_full[0]) ? \"n\" : \"\" }}&MediumSpace;</span>\r\n        <div\r\n          class=\"header_magic_wrapper magic_wrapper contents_inherit\"\r\n          :class=\"{ magic_ready: magic_type }\"\r\n        >\r\n          <select\r\n            title=\"Task type\"\r\n            v-model=\"task.type\"\r\n            class=\"type_dropdown styled_input styled_select\"\r\n            ref=\"type\"\r\n          >\r\n            <option\r\n              class=\"type_dropdown__option styled_select__option\"\r\n              v-for=\"pair in Object.entries(magic.types)\"\r\n              :value=\"pair[0]\"\r\n              :key=\"pair[0]\"\r\n            >\r\n              {{ pair[1] }}\r\n            </option>\r\n          </select>\r\n          <div\r\n            class=\"magic magic_in styled_magic click-action\"\r\n            :class=\"{ magic_out: !magic_type }\"\r\n            @click=\"task.type = magic_type\"\r\n            :title=\"'Use automatic type' + (magic_type ? ' (' + magic_type + ')' : '')\"\r\n          ></div>\r\n        </div>\r\n      </h2>\r\n    </header>\r\n    <div class=\"overlay_contents\" ref=\"contents\">\r\n      <div class=\"overlay_contents_text\">\r\n        <span v-if=\"is_note\">Add a new {{ task.type }} to</span>\r\n        <span v-else>Schedule a new {{ task.type }} for</span>\r\n        your class{{ classes && classes.length == 1 ? \"\" : \"es\" }}\r\n      </div>\r\n      <div class=\"inputs_row\">\r\n        <input\r\n          v-if=\"!is_note\"\r\n          v-model=\"task.name\"\r\n          class=\"styled_input\"\r\n          type=\"text\"\r\n          :placeholder=\"type_full + ' Name'\"\r\n          :disabled=\"is_note\"\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          ref=\"date\"\r\n          class=\"styled_input input_task__date\"\r\n          v-model=\"task.date\"\r\n          :style=\"{ maxWidth: is_note ? '100%' : null }\"\r\n        />\r\n        <div class=\"flex-break\"></div>\r\n        <textarea\r\n          v-model=\"task.description\"\r\n          class=\"styled_input styled_textarea task_description\"\r\n          type=\"text\"\r\n          :placeholder=\"type_full + (is_note ? ' Contents' : ' Description (Optional)')\"\r\n        >\r\n        </textarea>\r\n        <div class=\"flex-break\"></div>\r\n        <div class=\"styled_input styled_links_box\">\r\n          <div class=\"styled_links_display\">\r\n            <span v-if=\"!task.links || !task.links.length\" class=\"placeholder\"\r\n              >{{ type_full }} Links (Optional)</span\r\n            >\r\n            <div v-else class=\"styled_line_links\">\r\n              <a\r\n                class=\"styled_line_links__link styled_line_links__remove\"\r\n                target=\"_blank\"\r\n                v-for=\"link in task.links\"\r\n                :key=\"link.path\"\r\n                @click=\"remove_link(link)\"\r\n                >{{ link.text }}</a\r\n              >\r\n            </div>\r\n          </div>\r\n          <hr class=\"styled_links_separator\" />\r\n          <div class=\"styled_links_add\">\r\n            <input\r\n              class=\"styled_links_add__path\"\r\n              type=\"url\"\r\n              v-model=\"newlink.path\"\r\n              @blur=\"fix_newlink_path\"\r\n              placeholder=\"Link URL (https://example.com)\"\r\n            />\r\n            <div class=\"magic_wrapper styled_links_add__sized\">\r\n              <input\r\n                class=\"styled_links_add__text\"\r\n                type=\"text\"\r\n                v-model=\"newlink.text\"\r\n                placeholder=\"Link Text (what students see)\"\r\n              />\r\n              <div\r\n                class=\"magic styled_magic click-action\"\r\n                v-if=\"\r\n                  newlink.path &&\r\n                  magic.text(newlink.path) &&\r\n                  magic.text(newlink.path) != newlink.text\r\n                \"\r\n                @click=\"newlink.text = magic.text(newlink.path)\"\r\n                title=\"Auto-generate link text\"\r\n              ></div>\r\n            </div>\r\n            <button\r\n              class=\"styled_links_add__action\"\r\n              @click=\"add_newlink\"\r\n              :disabled=\"newlink_not_ready\"\r\n            >\r\n              Add\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"overlay_contents_text\">\r\n        Choose which classes this {{ task.type }} will be added to\r\n      </div>\r\n      <div class=\"classes_checkboxes checkboxes\">\r\n        <a\r\n          class=\"checkbox\"\r\n          v-for=\"class_obj in classes\"\r\n          :key=\"class_obj.id\"\r\n          :href=\"'/view/' + store.path_to_ref(class_obj.ref)\"\r\n        >\r\n          <input type=\"checkbox\" :id=\"class_obj.id\" :value=\"class_obj.id\" v-model=\"task_classes\" />\r\n          <label\r\n            class=\"button_pointer_text class_name\"\r\n            v-if=\"class_obj.period\"\r\n            :for=\"class_obj.id\"\r\n            :style=\"{\r\n              '--color-class': class_obj.color,\r\n              '--color-class-alt': class_obj.color + '2d',\r\n            }\"\r\n          >\r\n            P{{ class_obj.period }} - {{ class_obj.name }}\r\n          </label>\r\n          <label v-else :for=\"class_obj.id\" @click=\"$event.stopPropagation\">{{\r\n            class_obj.name\r\n          }}</label>\r\n        </a>\r\n      </div>\r\n    </div>\r\n    <div class=\"bottom_actions\">\r\n      <button class=\"close_action click_escape\" @click=\"$emit('close')\">Close</button>\r\n      <div class=\"flex_spacer\"></div>\r\n      <button\r\n        class=\"continue_action click_ctrlenter\"\r\n        :class=\"{ loading_bg: loading }\"\r\n        @click=\"try_submit\"\r\n        :disabled=\"!ready\"\r\n      >\r\n        Add {{ task.type }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/**\r\n * Creates a new task for the teacher's selected class(es).\r\n *\r\n * @module CreateTaskView\r\n * @description Modal that allows teacher's to create a new task for their classes.\r\n * @param {string} tasktype - The type of task to create (task, project, test, etc.) Provided by the router.\r\n * @requires module:store/MainStore\r\n * @emits {Function} close - An event emitted when the task is created or the modal is closed.\r\n */\r\n\r\nimport { useMainStore } from \"@/store\";\r\nimport { useMagic } from \"@/store/magic\";\r\nimport { _status } from \"@/common\";\r\nimport { ErrorToast, WarningToast } from \"@svonk/util\";\r\nimport smoothReflow from \"vue-smooth-reflow\";\r\n\r\nexport default {\r\n  name: \"CreateTaskView\",\r\n  emits: [\"close\"],\r\n  mixins: [smoothReflow],\r\n  mounted() {\r\n    this.$smoothReflow({\r\n      el: this.$refs.contents,\r\n    });\r\n    if (!this.$route?.params?.tasktype) {\r\n      this.$refs.type.focus();\r\n    } else {\r\n      this.$refs.date.focus();\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      task: {\r\n        name: \"\",\r\n        date: this.$route.query?.date ? this.$route.query.date : \"\",\r\n        description: \"\",\r\n        type: this.$route.params.tasktype ? this.$route.params.tasktype : \"task\",\r\n      },\r\n      task_classes: this.$route.query?.class ? [this.$route.query.class] : [],\r\n      newlink: {\r\n        text: \"\",\r\n        path: \"\",\r\n      },\r\n      loading: false,\r\n    };\r\n  },\r\n  computed: {\r\n    ready() {\r\n      return (\r\n        (this.task.name || this.is_note) &&\r\n        this.task.date &&\r\n        this.task_classes.length &&\r\n        (!this.is_note || this.task.description)\r\n      );\r\n    },\r\n    type_full() {\r\n      return this.get_type(this.task.type);\r\n    },\r\n    newlink_not_ready() {\r\n      // check if path and text, and also that path is a valid url\r\n      if (!this.newlink.path || !this.newlink.text) {\r\n        return true;\r\n      }\r\n      try {\r\n        void new URL(this.newlink.path);\r\n        return false;\r\n      } catch (err) {\r\n        return true;\r\n      }\r\n    },\r\n    class_name() {\r\n      if (!this.classes) return null;\r\n      let class_obj = this.classes.find((class_obj) => class_obj.id === this.class_id);\r\n      if (!class_obj) return null;\r\n      return class_obj.name;\r\n    },\r\n    store() {\r\n      return useMainStore();\r\n    },\r\n    magic() {\r\n      return useMagic();\r\n    },\r\n    classes() {\r\n      return this.store.classes;\r\n    },\r\n    is_note() {\r\n      return this.task.type === \"note\";\r\n    },\r\n    magic_type() {\r\n      return this.magic.type(this.task) != this.task.type && this.magic.type(this.task);\r\n    },\r\n  },\r\n  methods: {\r\n    try_submit() {\r\n      if (this.ready) {\r\n        this.create_task();\r\n      } else {\r\n        new WarningToast(\"Please fill out all required fields\", 1000);\r\n      }\r\n    },\r\n    get_type(type = this.task.type) {\r\n      return this.magic.types[type] || type;\r\n    },\r\n    is_vowel(char) {\r\n      return [\"a\", \"e\", \"i\", \"o\", \"u\"].includes(char.toLowerCase());\r\n    },\r\n    add_newlink() {\r\n      if (!this.task.links) this.task.links = [];\r\n      // add protocol if missing\r\n      this.newlink.path = new URL(this.newlink.path).href;\r\n      this.task.links.push(this.newlink);\r\n      this.newlink = {\r\n        text: \"\",\r\n        path: \"\",\r\n      };\r\n    },\r\n    create_task() {\r\n      if (!this.newlink_not_ready) {\r\n        new WarningToast(\"Don't forget to to click the 'Add' button to add your link!\", 2000);\r\n        return;\r\n      }\r\n      this.loading = true;\r\n      this.store\r\n        .create_task(this.task, this.task_classes)\r\n        .then(() => {\r\n          //! router to new task view?\r\n          this.$emit(\"close\");\r\n        })\r\n        .catch((err) => {\r\n          this.loading = false;\r\n          _status.error(`📃 Couldn't create ${this.task.type || \"task\"}:`, err);\r\n          new ErrorToast(\"Couldn't create task\", err, 2000);\r\n        });\r\n    },\r\n    remove_link(link) {\r\n      this.task.links = this.task.links.filter((l) => l.path !== link.path);\r\n      this.newlink = link;\r\n    },\r\n    fix_newlink_path() {\r\n      if (this.newlink.path && this.newlink.path.includes(\".\")) {\r\n        try {\r\n          this.newlink.path = new URL(this.newlink.path).href;\r\n        } catch (err) {\r\n          // add protocol if missing\r\n          this.newlink.path = \"https://\" + this.newlink.path;\r\n          this.fix_newlink_path();\r\n        }\r\n      }\r\n    },\r\n  },\r\n  watch: {\r\n    \"task.type\"(new_type, old_type) {\r\n      // if task -> note, clear name and move to description if empty {\r\n      if (new_type == \"note\") {\r\n        this.task.description = this.task.description || this.task.name;\r\n        this.task.name = \"\";\r\n      } else if (old_type == \"note\" && this.task.description?.length <= 35) {\r\n        this.task.name = this.task.description;\r\n        this.task.description = \"\";\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.checkboxes {\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  align-items: flex-start;\r\n  margin-top: 0.5rem;\r\n}\r\n.checkbox {\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  align-items: center;\r\n}\r\n.checkbox label {\r\n  padding-left: 0.5rem;\r\n  user-select: none;\r\n  cursor: pointer;\r\n}\r\n.inputs_row {\r\n  flex-flow: row wrap;\r\n}\r\n.styled_input.input_task__date {\r\n  margin-right: 0;\r\n  max-width: 150px;\r\n}\r\nselect.type_dropdown {\r\n  padding: 5px;\r\n  background-color: var(--color-overlay-input);\r\n  color: var(--color-on-overlay-input);\r\n  border: none;\r\n  border-radius: var(--radius-overlay-input);\r\n  width: auto;\r\n}\r\n.type_dropdown__option {\r\n  font-size: 14px;\r\n}\r\n.class_name {\r\n  margin-left: 0.75em;\r\n}\r\n.checkboxes .checkbox input:checked + label.class_name {\r\n  background-color: var(--color-class);\r\n  color: var(--color-on-class);\r\n}\r\n/* new display method */\r\n.checkboxes .checkbox input {\r\n  display: none;\r\n}\r\n.checkboxes .checkbox label {\r\n  margin-left: unset;\r\n}\r\n/* inline variation */\r\n.checkboxes {\r\n  gap: 0.5em;\r\n  display: inline-flex;\r\n  flex-flow: row wrap;\r\n}\r\n.checkboxes .checkbox {\r\n  margin: 0;\r\n  display: inline-flex;\r\n  flex-grow: 1;\r\n}\r\n.checkboxes .checkbox label {\r\n  width: 100%;\r\n  text-align: center;\r\n}\r\n@media (max-width: 600px) {\r\n  .checkboxes {\r\n    gap: 0.5em;\r\n  }\r\n  .checkboxes .checkbox,\r\n  .checkboxes .checkbox label {\r\n    width: 100%;\r\n    text-align: left;\r\n    line-height: 2.5em;\r\n  }\r\n  .checkboxes .checkbox label {\r\n    padding: 0 1em;\r\n    height: 2.5em;\r\n  }\r\n}\r\n\r\n.parent.simplified .checkboxes {\r\n  gap: 0.5em;\r\n}\r\n.parent.simplified .checkboxes .checkbox,\r\n.parent.simplified .checkboxes .checkbox label {\r\n  width: 100%;\r\n  text-align: left;\r\n  line-height: 2.5em;\r\n}\r\n.parent.simplified .checkboxes .checkbox label {\r\n  padding: 0 1em;\r\n  height: 2.5em;\r\n}\r\n</style>\r\n","import { render } from \"./CreateTask.vue?vue&type=template&id=27fd84c9&scoped=true\"\nimport script from \"./CreateTask.vue?vue&type=script&lang=js\"\nexport * from \"./CreateTask.vue?vue&type=script&lang=js\"\n\nimport \"./CreateTask.vue?vue&type=style&index=0&id=27fd84c9&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\sande\\\\Documents\\\\GitHub\\\\mvtime.github.io\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-27fd84c9\"]])\n\nexport default __exports__"],"names":["smart_maps","smart_url","path","toLowerCase","i","length","match","useMagic","defineStore","id","state","types","note","task","test","project","quiz","exam","getters","actions","text","type","name","description","includes","class","ref","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","$options","is_vowel","type_full","_normalizeClass","magic_ready","magic_type","title","$data","$event","_Fragment","_renderList","Object","entries","magic","pair","value","key","_hoisted_4","magic_out","onClick","_cache","_hoisted_6","_hoisted_7","is_note","_hoisted_8","_hoisted_9","classes","_hoisted_10","placeholder","disabled","date","style","_normalizeStyle","maxWidth","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","links","_hoisted_18","link","target","remove_link","_hoisted_19","_hoisted_17","_hoisted_20","_hoisted_21","newlink","onBlur","args","fix_newlink_path","_hoisted_22","add_newlink","newlink_not_ready","_hoisted_23","_hoisted_24","_hoisted_25","class_obj","href","store","path_to_ref","task_classes","period","for","color","_hoisted_28","_ctx","stopPropagation","_hoisted_29","_hoisted_30","$emit","_hoisted_31","loading_bg","loading","try_submit","ready","_hoisted_32","emits","mixins","smoothReflow","mounted","this","$smoothReflow","el","$refs","contents","$route","params","tasktype","focus","data","query","computed","get_type","URL","err","class_name","find","class_id","useMainStore","methods","create_task","WarningToast","char","push","then","catch","_status","error","ErrorToast","filter","l","watch","new_type","old_type","__exports__","render"],"sourceRoot":""}