{"version":3,"file":"js/487.dc09bb78.js","mappings":"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","sources":["webpack://mvtime/./src/views/Portal/NotesTask.vue","webpack://mvtime/./src/views/Portal/NotesTask.vue?f151"],"sourcesContent":["<template>\r\n  <div class=\"edit_task\">\r\n    <header class=\"modal_header\" ref=\"title\">\r\n      <h2 class=\"header_style modal_header_title\">\r\n        {{ original_note ? \"Update\" : \"Add\" }} {{ task.type || \"task\" }} notes\r\n      </h2>\r\n    </header>\r\n    <div class=\"overlay_contents\" ref=\"contents\">\r\n      <div v-if=\"ready\">\r\n        <div class=\"overlay_contents_text change_text\">\r\n          Save your notes for \"{{ task.name }}\" in\r\n          <a\r\n            class=\"class_name button_pointer_text\"\r\n            :href=\"`/view/${task._class.ref}`\"\r\n            @click=\"\r\n              $event.preventDefault();\r\n              $router.push({\r\n                name: 'viewclass',\r\n                params: { ref: task._class.ref },\r\n                query: $route.query,\r\n              });\r\n            \"\r\n            :style=\"{\r\n              '--color-class': task._class.color,\r\n              '--color-class-alt': task._class.color + '2d',\r\n            }\"\r\n            >{{ `P${task._class.period} - ${task._class.name}` }}</a\r\n          >\r\n        </div>\r\n        <div class=\"inputs_row\">\r\n          <textarea\r\n            v-model=\"note\"\r\n            class=\"styled_input styled_textarea task_note\"\r\n            type=\"text\"\r\n            :placeholder=\"'Your ' + type_full + ' Notes (Optional)'\"\r\n          >\r\n          </textarea>\r\n        </div>\r\n      </div>\r\n      <img alt=\"Loading Icon\" class=\"loading_icon\" v-else />\r\n    </div>\r\n    <div class=\"bottom_actions\">\r\n      <button\r\n        class=\"back_action click_escape\"\r\n        :class=\"{ loading_bg: loading }\"\r\n        v-if=\"ready\"\r\n        :disabled=\"loading\"\r\n        @click=\"back\"\r\n      >\r\n        View\r\n      </button>\r\n      <button v-else class=\"close_action click_escape\" @click=\"$emit('close')\">Close</button>\r\n      <div class=\"flex_spacer\"></div>\r\n      <button\r\n        class=\"continue_action click_ctrlenter\"\r\n        :class=\"{ loading_bg: loading }\"\r\n        @click=\"try_submit\"\r\n        :disabled=\"not_submittable\"\r\n      >\r\n        {{ original_note ? \"Update\" : \"Add\" }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/**\r\n * Creates a new task for the teacher's selected class(es).\r\n *\r\n * @module CreateTaskView\r\n * @description Modal that allows teacher's to create a new task for their classes.\r\n * @param {string} tasktype - The type of task to create (task, project, test, etc.) Provided by the router.\r\n * @requires module:store/MainStore\r\n * @emits {Function} close - An event emitted when the task is created or the modal is closed.\r\n */\r\n\r\nimport { useMainStore } from \"@/store\";\r\nimport { _status } from \"@/common\";\r\nimport { ErrorToast, WarningToast, SuccessToast } from \"@svonk/util\";\r\nimport smoothReflow from \"vue-smooth-reflow\";\r\n\r\nexport default {\r\n  name: \"EditTaskView\",\r\n  emits: [\"close\"],\r\n  mixins: [smoothReflow],\r\n  data() {\r\n    return {\r\n      task: {},\r\n      original_note: \"\",\r\n      note: \"\",\r\n      ready: false,\r\n      loading: true,\r\n      types: {\r\n        note: \"Note\",\r\n        task: \"Assignment\",\r\n        // socratic: \"Socratic Seminar\",\r\n        test: \"Test\",\r\n        // summative: \"Summative Assignment\",\r\n        // midterm: \"Midterm\",\r\n        project: \"Project\",\r\n        quiz: \"Quiz\",\r\n        exam: \"Exam\",\r\n      },\r\n    };\r\n  },\r\n  mounted() {\r\n    this.$smoothReflow({\r\n      el: this.$refs.contents,\r\n      childTransitions: true,\r\n    });\r\n    this.$smoothReflow({\r\n      el: this.$refs.title,\r\n      hideOverflow: true,\r\n    });\r\n    this.get_task();\r\n  },\r\n  computed: {\r\n    not_submittable() {\r\n      return !this.changed;\r\n    },\r\n    type_full() {\r\n      return this.types[this.task.type] || this.task.type || \"Task\";\r\n    },\r\n    store() {\r\n      return useMainStore();\r\n    },\r\n    changed() {\r\n      return this.original_note !== this.note;\r\n    },\r\n  },\r\n  methods: {\r\n    try_submit() {\r\n      if (!this.not_submittable) {\r\n        this.update_note();\r\n      } else {\r\n        new WarningToast(\"No changes to save\", 1000);\r\n      }\r\n    },\r\n    back() {\r\n      this.$router.push({\r\n        name: \"viewtask\",\r\n        params: {\r\n          ref: this.$route.params.ref,\r\n        },\r\n        query: this.$route.query,\r\n      });\r\n    },\r\n    async update_note() {\r\n      this.loading = true;\r\n      this.store\r\n        .set_note(this.note, this.$route.params.ref)\r\n        .then(() => {\r\n          new SuccessToast(\r\n            `${this.original_note ? (this.note ? \"Updated\" : \"Removed\") : \"Added\"} ${\r\n              this.task.type || \"task\"\r\n            } notes for ${this.task.name}`,\r\n            2000\r\n          );\r\n          this.back();\r\n        })\r\n        .catch((err) => {\r\n          this.loading = false;\r\n          _status.error(`ðŸ“ƒ Couldn't edit ${this.task.type || \"task\"} notes:`, err);\r\n          new ErrorToast(`Couldn't edit ${this.task.type || \"task\"} notes`, err, 2000);\r\n        });\r\n    },\r\n    async get_task() {\r\n      // get task ref from route params\r\n      const ref = this.$route.params.ref.split(\"~\").join(\"/\");\r\n      if (!ref) {\r\n        new WarningToast(\"No task specified\", 1500);\r\n        this.$emit(\"close\");\r\n      } else if (ref.split(\"/\").length < 3) {\r\n        new WarningToast(\"Invalid task specified\", 1500);\r\n        this.$emit(\"close\");\r\n      }\r\n      // get task from store\r\n      this.store\r\n        .task_from_ref(ref)\r\n        .then((task) => {\r\n          if (!task) {\r\n            new WarningToast(\"Couldn't find that task\", 2000);\r\n            _status.warn(\"âš  Couldn't find task\");\r\n            this.$emit(\"close\");\r\n          } else {\r\n            this.task = task;\r\n            this.original = { ...task };\r\n            this.ready = true;\r\n            this.loading = false;\r\n          }\r\n          // get note\r\n          const note = this.store.note_for(this.$route.params.ref);\r\n          if (note) {\r\n            this.note = note;\r\n            this.original_note = note;\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          new ErrorToast(\"Error getting task\", err, 1500);\r\n          _status.error(\"âš  Error getting task\", err);\r\n          this.$emit(\"close\");\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.inputs_row {\r\n  margin-bottom: 0;\r\n}\r\n.styled_input.task_note {\r\n  padding-top: 10px;\r\n  padding-bottom: 10px;\r\n}\r\n.loading_icon {\r\n  max-height: 150px;\r\n  min-width: 100%;\r\n}\r\n</style>\r\n","import { render } from \"./NotesTask.vue?vue&type=template&id=3ce52f78&scoped=true\"\nimport script from \"./NotesTask.vue?vue&type=script&lang=js\"\nexport * from \"./NotesTask.vue?vue&type=script&lang=js\"\n\nimport \"./NotesTask.vue?vue&type=style&index=0&id=3ce52f78&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\sande\\\\Documents\\\\GitHub\\\\mvtime.github.io\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3ce52f78\"]])\n\nexport default __exports__"],"names":["class","ref","alt","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","$data","original_note","task","type","_hoisted_4","ready","_hoisted_5","_hoisted_6","name","href","_class","onClick","_cache","$event","preventDefault","_ctx","$router","push","$route","query","style","_normalizeStyle","color","period","_hoisted_7","_hoisted_8","note","placeholder","$options","type_full","_hoisted_9","_hoisted_10","_hoisted_11","_normalizeClass","loading_bg","loading","disabled","args","back","_hoisted_12","$emit","_hoisted_13","try_submit","not_submittable","_hoisted_14","emits","mixins","smoothReflow","data","types","test","project","quiz","exam","mounted","this","$smoothReflow","el","$refs","contents","childTransitions","title","hideOverflow","get_task","computed","changed","store","useMainStore","methods","WarningToast","update_note","params","async","set_note","then","SuccessToast","catch","err","_status","error","ErrorToast","split","join","length","task_from_ref","original","warn","note_for","__exports__","render"],"sourceRoot":""}