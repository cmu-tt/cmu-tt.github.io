{"version":3,"file":"js/175.11455866.js","mappings":"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","sources":["webpack://mvtime/./src/views/Portal/CreateTask.vue","webpack://mvtime/./src/views/Portal/CreateTask.vue?4068"],"sourcesContent":["<template>\r\n  <div class=\"create_task\">\r\n    <header class=\"modal_header\">\r\n      <h2 class=\"header_style modal_header_title\">Add a {{ type_full }}</h2>\r\n    </header>\r\n    <div class=\"overlay_contents\">\r\n      <div class=\"overlay_contents_text\">\r\n        <span v-if=\"is_note\">Add a new {{ task.type }} to</span>\r\n        <span v-else>Schedule a new {{ task.type }} for</span>\r\n        your class{{ classes && classes.length == 1 ? \"\" : \"es\" }}\r\n      </div>\r\n      <div class=\"inputs_row\">\r\n        <input\r\n          v-if=\"!is_note\"\r\n          v-model=\"task.name\"\r\n          class=\"styled_input\"\r\n          type=\"text\"\r\n          :placeholder=\"type_full + ' Name'\"\r\n          :disabled=\"is_note\"\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          class=\"styled_input input_task__date\"\r\n          v-model=\"task.date\"\r\n          :style=\"{ maxWidth: is_note ? '100%' : null }\"\r\n        />\r\n        <div class=\"flex-break\"></div>\r\n        <textarea\r\n          v-model=\"task.description\"\r\n          class=\"styled_input styled_textarea task_description\"\r\n          type=\"text\"\r\n          :placeholder=\"type_full + (is_note ? ' Contents' : ' Description (Optional)')\"\r\n        >\r\n        </textarea>\r\n        <div class=\"flex-break\"></div>\r\n        <div class=\"styled_input styled_links_box\">\r\n          <div class=\"styled_links_display\">\r\n            <span v-if=\"!task.links || !task.links.length\" class=\"placeholder\"\r\n              >{{ type_full }} Links (Optional)</span\r\n            >\r\n            <div v-else class=\"styled_line_links\">\r\n              <a\r\n                class=\"styled_line_links__link\"\r\n                target=\"_blank\"\r\n                v-for=\"link in task.links\"\r\n                :href=\"link.path\"\r\n                :key=\"link.path\"\r\n                >{{ link.text }}</a\r\n              >\r\n            </div>\r\n          </div>\r\n          <hr class=\"styled_links_separator\" />\r\n          <div class=\"styled_links_add\">\r\n            <input\r\n              class=\"styled_links_add__path\"\r\n              type=\"url\"\r\n              v-model=\"newlink.path\"\r\n              placeholder=\"Link URL (http://example.com)\"\r\n            />\r\n            <input\r\n              class=\"styled_links_add__text\"\r\n              type=\"text\"\r\n              v-model=\"newlink.text\"\r\n              placeholder=\"Link Text (what students see)\"\r\n            />\r\n            <button class=\"styled_links_add__action\" @click=\"add_newlink\" :disabled=\"newlink_ready\">\r\n              Add\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"overlay_contents_text\">\r\n        Choose which classes this {{ task.type }} will be added to\r\n      </div>\r\n      <!-- checkboxes for classes -->\r\n      <div class=\"checkboxes\">\r\n        <div class=\"checkbox\" v-for=\"class_obj in classes\" :key=\"class_obj.id\">\r\n          <input type=\"checkbox\" :id=\"class_obj.id\" :value=\"class_obj.id\" v-model=\"task_classes\" />\r\n          <label v-if=\"class_obj.period\" :for=\"class_obj.id\">\r\n            P{{ class_obj.period }} - {{ class_obj.name }}\r\n          </label>\r\n          <label v-else :for=\"class_obj.id\">{{ class_obj.name }}</label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"bottom_actions\">\r\n      <button class=\"close_action\" @click=\"$emit('close')\">Close</button>\r\n      <div class=\"flex_spacer\"></div>\r\n      <button\r\n        class=\"continue_action\"\r\n        :class=\"{ loading_bg: loading }\"\r\n        @click=\"create_task\"\r\n        :disabled=\"\r\n          (!task.name && !is_note) ||\r\n          !task.date ||\r\n          !task_classes.length ||\r\n          (is_note && !task.description)\r\n        \"\r\n      >\r\n        Add {{ task.type }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/**\r\n * Creates a new task for the teacher's selected class(es).\r\n *\r\n * @module CreateTaskView\r\n * @description Modal that allows teacher's to create a new task for their classes.\r\n * @param {string} tasktype - The type of task to create (task, project, test, etc.) Provided by the router.\r\n * @requires module:store/MainStore\r\n * @emits {Function} close - An event emitted when the task is created or the modal is closed.\r\n */\r\n\r\nimport { useMainStore } from \"@/store\";\r\nimport { _statuslog } from \"@/common\";\r\nimport { ErrorToast } from \"@svonk/util\";\r\nexport default {\r\n  name: \"CreateTaskView\",\r\n  emits: [\"close\"],\r\n  data() {\r\n    return {\r\n      task: {\r\n        name: \"\",\r\n        date: \"\",\r\n        description: \"\",\r\n        type: this.$route.params.tasktype ? this.$route.params.tasktype : \"task\",\r\n      },\r\n      task_classes: [],\r\n      newlink: {\r\n        text: \"\",\r\n        path: \"\",\r\n      },\r\n      loading: false,\r\n    };\r\n  },\r\n  computed: {\r\n    type_full() {\r\n      return {\r\n        note: \"Note\",\r\n        task: \"Assignment\",\r\n        // socratic: \"Socratic Seminar\",\r\n        test: \"Test\",\r\n        // summative: \"Summative Assignment\",\r\n        // midterm: \"Midterm\",\r\n        project: \"Project\",\r\n        quiz: \"Quiz\",\r\n        exam: \"Exam\",\r\n      }[this.task.type];\r\n    },\r\n    newlink_ready() {\r\n      // check if path and text, and also that path is a valid url\r\n      return !this.newlink.path || !this.newlink.text || !this.newlink.path.startsWith(\"http\");\r\n    },\r\n    class_name() {\r\n      if (!this.classes) return null;\r\n      let class_obj = this.classes.find((class_obj) => class_obj.id === this.class_id);\r\n      if (!class_obj) return null;\r\n      return class_obj.name;\r\n    },\r\n    store() {\r\n      return useMainStore();\r\n    },\r\n    classes() {\r\n      return this.store.classes;\r\n    },\r\n    is_note() {\r\n      return this.task.type === \"note\";\r\n    },\r\n  },\r\n  methods: {\r\n    add_newlink() {\r\n      if (!this.task.links) this.task.links = [];\r\n      this.task.links.push(this.newlink);\r\n      this.newlink = {\r\n        text: \"\",\r\n        path: \"\",\r\n      };\r\n    },\r\n    create_task() {\r\n      this.loading = true;\r\n      this.store\r\n        .create_task(this.task, this.task_classes)\r\n        .then(() => {\r\n          this.$emit(\"close\");\r\n        })\r\n        .catch((err) => {\r\n          this.loading = false;\r\n          _statuslog(`📃 Couldn't create ${this.task.type || \"task\"}:`, err);\r\n          new ErrorToast(\"Couldn't create task\", err, 2000);\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.checkboxes {\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  align-items: flex-start;\r\n  margin-top: 0.5rem;\r\n}\r\n.checkbox {\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  align-items: center;\r\n  margin-top: 0.5rem;\r\n}\r\n.checkbox label {\r\n  padding-left: 0.5rem;\r\n  user-select: none;\r\n  cursor: pointer;\r\n}\r\n.input_task__date {\r\n  max-width: 150px;\r\n}\r\n.inputs_row {\r\n  flex-flow: row wrap;\r\n}\r\n.input_task__date {\r\n  margin-right: 0;\r\n}\r\n.styled_input.task_description {\r\n  margin: calc(var(--padding-overlay) / 2) 0;\r\n  padding-top: 10px;\r\n  padding-bottom: 10px;\r\n}\r\n.styled_input.input_task__date {\r\n  margin-right: 0;\r\n}\r\n</style>\r\n","import { render } from \"./CreateTask.vue?vue&type=template&id=dc838328&scoped=true\"\nimport script from \"./CreateTask.vue?vue&type=script&lang=js\"\nexport * from \"./CreateTask.vue?vue&type=script&lang=js\"\n\nimport \"./CreateTask.vue?vue&type=style&index=0&id=dc838328&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\sande\\\\Documents\\\\GitHub\\\\mvtime.github.io\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-dc838328\"]])\n\nexport default __exports__"],"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","$options","type_full","_hoisted_4","_hoisted_5","is_note","_hoisted_6","$data","task","type","_hoisted_7","classes","length","_hoisted_8","name","$event","placeholder","disabled","date","style","_normalizeStyle","maxWidth","_hoisted_10","description","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","links","_hoisted_16","_Fragment","_renderList","link","target","href","path","key","text","_hoisted_17","_hoisted_15","_hoisted_18","_hoisted_19","newlink","onClick","_cache","args","add_newlink","newlink_ready","_hoisted_20","_hoisted_21","_hoisted_22","class_obj","id","value","task_classes","period","for","_hoisted_24","_hoisted_25","_hoisted_26","_ctx","$emit","_hoisted_27","_normalizeClass","loading_bg","loading","create_task","_hoisted_28","emits","data","this","$route","params","tasktype","computed","note","test","project","quiz","exam","startsWith","class_name","find","class_id","store","useMainStore","methods","push","then","catch","err","_statuslog","ErrorToast","__exports__","render"],"sourceRoot":""}