{"version":3,"file":"js/909.c75366d1.js","mappings":"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","sources":["webpack://mvtime/./src/views/Portal/EditTask.vue","webpack://mvtime/./src/views/Portal/EditTask.vue?ea5e"],"sourcesContent":["<template>\r\n  <div class=\"create_task\">\r\n    <header class=\"modal_header\" ref=\"title\">\r\n      <h2 class=\"header_style modal_header_title\">Edit {{ task.type || \"task\" }} details</h2>\r\n    </header>\r\n    <div class=\"overlay_contents\" ref=\"contents\">\r\n      <div v-if=\"ready\">\r\n        <div class=\"overlay_contents_text change_text\">\r\n          Change the details of your {{ task.type || \"task\"\r\n          }}{{ original.name ? ` \"${original.name}\"` : \"\" }} in\r\n          <span\r\n            class=\"class_name button_pointer_text\"\r\n            :style=\"{\r\n              '--color-class': class_obj.color,\r\n              '--color-class-alt': class_obj.color + '2d',\r\n            }\"\r\n            >{{ `P${class_obj.period} - ${class_obj.name}` }}</span\r\n          >\r\n        </div>\r\n        <div class=\"inputs_row\">\r\n          <input\r\n            v-if=\"!is_note\"\r\n            v-model=\"task.name\"\r\n            class=\"styled_input\"\r\n            type=\"text\"\r\n            :placeholder=\"type_full + ' Name'\"\r\n            :disabled=\"is_note\"\r\n          />\r\n          <input\r\n            type=\"date\"\r\n            class=\"styled_input input_task__date\"\r\n            v-model=\"task.date\"\r\n            :style=\"{ maxWidth: is_note ? '100%' : null }\"\r\n          />\r\n          <div class=\"flex-break\"></div>\r\n          <textarea\r\n            v-model=\"task.description\"\r\n            class=\"styled_input styled_textarea task_description\"\r\n            type=\"text\"\r\n            :placeholder=\"type_full + (is_note ? ' Contents' : ' Description (Optional)')\"\r\n          >\r\n          </textarea>\r\n          <div class=\"flex-break\"></div>\r\n          <div class=\"styled_input styled_links_box\">\r\n            <div class=\"styled_links_display\">\r\n              <span v-if=\"!task.links || !task.links.length\" class=\"placeholder\"\r\n                >{{ type_full }} Links (Optional)</span\r\n              >\r\n              <div v-else class=\"styled_line_links\">\r\n                <a\r\n                  class=\"styled_line_links__link styled_line_links__remove\"\r\n                  target=\"_blank\"\r\n                  v-for=\"link in task.links\"\r\n                  :key=\"link.path\"\r\n                  @click=\"remove_link(link)\"\r\n                  >{{ link.text }}</a\r\n                >\r\n              </div>\r\n            </div>\r\n            <hr class=\"styled_links_separator\" />\r\n            <div class=\"styled_links_add\">\r\n              <input\r\n                class=\"styled_links_add__path\"\r\n                type=\"url\"\r\n                v-model=\"newlink.path\"\r\n                @blur=\"fix_newlink_path\"\r\n                placeholder=\"Link URL (http://example.com)\"\r\n              />\r\n              <input\r\n                class=\"styled_links_add__text\"\r\n                type=\"text\"\r\n                v-model=\"newlink.text\"\r\n                placeholder=\"Link Text (what students see)\"\r\n              />\r\n              <button\r\n                class=\"styled_links_add__action\"\r\n                @click=\"add_newlink\"\r\n                :disabled=\"newlink_not_ready\"\r\n              >\r\n                Add\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <img alt=\"Loading Icon\" class=\"loading_icon\" v-else />\r\n    </div>\r\n    <div class=\"bottom_actions\">\r\n      <button class=\"close_action\" @click=\"$emit('close')\">Cancel</button>\r\n      <div class=\"flex_spacer\"></div>\r\n      <button\r\n        class=\"delete_action primary_styled\"\r\n        @click=\"delete_task\"\r\n        :disabled=\"!ready || loading\"\r\n      >\r\n        Delete\r\n      </button>\r\n      <button\r\n        class=\"continue_action\"\r\n        :class=\"{ loading_bg: loading }\"\r\n        @click=\"update_task\"\r\n        :disabled=\"\r\n          !changed || (!task.name && !is_note) || !task.date || (is_note && !task.description)\r\n        \"\r\n      >\r\n        Save {{ task.type || \"task\" }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/**\r\n * Creates a new task for the teacher's selected class(es).\r\n *\r\n * @module CreateTaskView\r\n * @description Modal that allows teacher's to create a new task for their classes.\r\n * @param {string} tasktype - The type of task to create (task, project, test, etc.) Provided by the router.\r\n * @requires module:store/MainStore\r\n * @emits {Function} close - An event emitted when the task is created or the modal is closed.\r\n */\r\n\r\nimport { useMainStore } from \"@/store\";\r\nimport { _statuslog } from \"@/common\";\r\nimport { ErrorToast, WarningToast } from \"@svonk/util\";\r\nimport smoothReflow from \"vue-smooth-reflow\";\r\n\r\nexport default {\r\n  name: \"EditTaskView\",\r\n  emits: [\"close\"],\r\n  mixins: [smoothReflow],\r\n  data() {\r\n    return {\r\n      task: {},\r\n      original: {},\r\n      newlink: {\r\n        text: \"\",\r\n        path: \"\",\r\n      },\r\n      ready: false,\r\n      loading: true,\r\n      types: {\r\n        note: \"Note\",\r\n        task: \"Assignment\",\r\n        // socratic: \"Socratic Seminar\",\r\n        test: \"Test\",\r\n        // summative: \"Summative Assignment\",\r\n        // midterm: \"Midterm\",\r\n        project: \"Project\",\r\n        quiz: \"Quiz\",\r\n        exam: \"Exam\",\r\n      },\r\n    };\r\n  },\r\n  mounted() {\r\n    this.$smoothReflow({\r\n      el: this.$refs.contents,\r\n      childTransitions: true,\r\n    });\r\n    this.$smoothReflow({\r\n      el: this.$refs.title,\r\n      hideOverflow: true,\r\n    });\r\n    this.get_task();\r\n  },\r\n  computed: {\r\n    type_full() {\r\n      return this.types[this.task.type] || this.task.type || \"Task\";\r\n    },\r\n    newlink_not_ready() {\r\n      // check if path and text, and also that path is a valid url\r\n      return !this.newlink.path || !this.newlink.text || !this.newlink.path.startsWith(\"http\");\r\n    },\r\n    class_obj() {\r\n      let classes = this.store?.classes;\r\n      if (!classes) return null;\r\n      return classes.find((class_obj) => class_obj.id === this.original.class_id) || {};\r\n    },\r\n    store() {\r\n      return useMainStore();\r\n    },\r\n    is_note() {\r\n      return this.task.type === \"note\";\r\n    },\r\n    changed() {\r\n      return JSON.stringify(this.task) !== JSON.stringify(this.original);\r\n    },\r\n    date() {\r\n      let date = new Date(this.task?.date);\r\n      if (isNaN(date.getTime())) return;\r\n      // read it as being in the current timezone\r\n      date = new Date(date.getTime() + date.getTimezoneOffset() * 60 * 1000);\r\n\r\n      return new Date(date).toLocaleDateString(undefined, {\r\n        weekday: \"long\",\r\n        month: \"long\",\r\n        day: \"numeric\",\r\n      });\r\n    },\r\n  },\r\n  methods: {\r\n    add_newlink() {\r\n      if (!this.task.links) this.task.links = [];\r\n      // add protocol if missing\r\n      this.newlink.path = new URL(this.newlink.path).href;\r\n      this.task.links.push(this.newlink);\r\n      this.newlink = {\r\n        text: \"\",\r\n        path: \"\",\r\n      };\r\n    },\r\n    async update_task() {\r\n      if (!this.newlink_not_ready) {\r\n        new WarningToast(\"Don't forget to to click the 'Add' button to add your link!\", 2000);\r\n        return;\r\n      }\r\n      this.loading = true;\r\n      this.store\r\n        .update_task(this.task.ref, this.task)\r\n        .then(() => {\r\n          // this.$emit(\"close\");\r\n          // redirect to view\r\n          this.$router.push({\r\n            name: \"viewtask\",\r\n            params: {\r\n              type: this.task.type,\r\n              ref: this.$route.params.ref,\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          this.loading = false;\r\n          _statuslog(`📃 Couldn't create ${this.task.type || \"task\"}:`, err);\r\n          new ErrorToast(\"Couldn't create task\", err, 2000);\r\n        });\r\n    },\r\n    delete_task() {\r\n      this.$router.push({\r\n        name: \"delete\",\r\n        params: {\r\n          type: this.task.type,\r\n          ref: this.$route.params.ref,\r\n        },\r\n        query: {\r\n          title: this.is_note ? this.task.description : this.task.name,\r\n        },\r\n      });\r\n    },\r\n    async get_task() {\r\n      // get task ref from route params\r\n      const ref = this.$route.params.ref.split(\"~\").join(\"/\");\r\n      if (!ref) {\r\n        new WarningToast(\"No task specified\", 1500);\r\n        this.$emit(\"close\");\r\n      } else if (ref.split(\"/\").length < 3) {\r\n        new WarningToast(\"Invalid task specified\", 1500);\r\n        this.$emit(\"close\");\r\n      }\r\n      // get task from store\r\n      this.store\r\n        .task_from_ref(ref)\r\n        .then((task) => {\r\n          if (!task) {\r\n            new WarningToast(\"Couldn't find that task\", 2000);\r\n            _statuslog(\"⚠ Couldn't find task\");\r\n            this.$emit(\"close\");\r\n          } else {\r\n            this.task = task;\r\n            this.original = { ...task };\r\n            this.ready = true;\r\n            this.loading = false;\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          new ErrorToast(\"Error getting task\", 1500);\r\n          _statuslog(\"⚠ Error getting task\", err);\r\n          this.$emit(\"close\");\r\n        });\r\n    },\r\n    remove_link(link) {\r\n      this.task.links = this.task.links.filter((l) => l.path !== link.path);\r\n      this.newlink = link;\r\n    },\r\n    fix_newlink_path() {\r\n      if (this.newlink.path && this.newlink.path.includes(\".\")) {\r\n        try {\r\n          this.newlink.path = new URL(this.newlink.path).href;\r\n        } catch (err) {\r\n          // add protocol if missing\r\n          this.newlink.path = \"https://\" + this.newlink.path;\r\n          this.fix_newlink_path();\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.checkboxes {\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  align-items: flex-start;\r\n  margin-top: 0.5rem;\r\n}\r\n.checkbox {\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  align-items: center;\r\n  margin-top: 0.5rem;\r\n}\r\n.checkbox label {\r\n  padding-left: 0.5rem;\r\n  user-select: none;\r\n  cursor: pointer;\r\n}\r\n.input_task__date {\r\n  max-width: 150px;\r\n}\r\n.inputs_row {\r\n  flex-flow: row wrap;\r\n}\r\n.input_task__date {\r\n  margin-right: 0;\r\n}\r\n.styled_input.task_description {\r\n  margin: calc(var(--padding-overlay) / 2) 0;\r\n  padding-top: 10px;\r\n  padding-bottom: 10px;\r\n}\r\n.styled_input.input_task__date {\r\n  margin-right: 0;\r\n}\r\nselect.type_dropdown {\r\n  padding: 5px;\r\n  background-color: var(--color-overlay-input);\r\n  color: var(--color-on-overlay-input);\r\n  border: none;\r\n  border-radius: var(--radius-overlay-input);\r\n  width: auto;\r\n}\r\n.type_dropdown__option {\r\n  font-size: 14px;\r\n}\r\n.spaced_contents {\r\n  margin-top: 0;\r\n}\r\n.loading_icon {\r\n  max-height: 150px;\r\n  min-width: 100%;\r\n}\r\n</style>\r\n","import { render } from \"./EditTask.vue?vue&type=template&id=1f49bb18&scoped=true\"\nimport script from \"./EditTask.vue?vue&type=script&lang=js\"\nexport * from \"./EditTask.vue?vue&type=script&lang=js\"\n\nimport \"./EditTask.vue?vue&type=style&index=0&id=1f49bb18&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\sande\\\\Documents\\\\GitHub\\\\mvtime.github.io\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1f49bb18\"]])\n\nexport default __exports__"],"names":["class","ref","_createElementVNode","alt","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","$data","task","type","_hoisted_4","ready","_hoisted_5","_hoisted_6","original","name","style","_normalizeStyle","$options","class_obj","color","period","_hoisted_7","is_note","$event","placeholder","type_full","disabled","date","maxWidth","_hoisted_9","description","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","links","length","_hoisted_15","_Fragment","_renderList","link","target","key","path","onClick","remove_link","text","_hoisted_16","_hoisted_14","_hoisted_17","_hoisted_18","newlink","onBlur","_cache","args","fix_newlink_path","add_newlink","newlink_not_ready","_hoisted_19","_hoisted_20","_hoisted_21","_ctx","$emit","_hoisted_22","delete_task","loading","_hoisted_23","_normalizeClass","loading_bg","update_task","changed","_hoisted_24","emits","mixins","smoothReflow","data","types","note","test","project","quiz","exam","mounted","this","$smoothReflow","el","$refs","contents","childTransitions","title","hideOverflow","get_task","computed","startsWith","classes","store","find","id","class_id","useMainStore","JSON","stringify","Date","isNaN","getTime","getTimezoneOffset","toLocaleDateString","undefined","weekday","month","day","methods","URL","href","push","async","then","$router","params","$route","catch","err","_statuslog","ErrorToast","WarningToast","query","split","join","task_from_ref","filter","l","includes","__exports__","render"],"sourceRoot":""}