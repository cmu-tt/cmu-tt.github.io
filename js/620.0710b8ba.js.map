{"version":3,"file":"js/620.0710b8ba.js","mappings":"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","sources":["webpack://mvtime/./src/assets/todo.md","webpack://mvtime/./src/components/ToggleBar.vue","webpack://mvtime/./src/components/ToggleBar.vue?75d5","webpack://mvtime/./src/views/Home/TodoView.vue","webpack://mvtime/./src/views/Home/TodoView.vue?40a1"],"sourcesContent":["// Module\nvar code = \"<h1 id=\\\"general-purpose--goal\\\">General Purpose / Goal</h1> <ul> <li>Crowdsource data from students<ul> <li>lower teacher inclusion / necessary involvement</li> </ul> </li> <li>Create a generally sleek product<ul> <li>we&#39;re not trying to win any design contests, but we want people to want to use it</li> </ul> </li> <li>Help student health<ul> <li>study resources from data, better planning</li> </ul> </li> <li>Collect student wellness data<ul> <li>will allow us to show its usefulness</li> <li>what led us to start MVTT in the first place, advocating for student health</li> </ul> </li> </ul> <h1 id=\\\"changes\\\">Changes</h1> <h2 id=\\\"working-on-now--planned-soon-sander\\\">Working on Now / Planned Soon (Sander)</h2> <ul> <li><p>Studying</p> <ul> <li>system for studying/working on tasks</li> <li><del>track task completion based on id</del><ul> <li>track by hash for updated versions, perhaps preference for specificity</li> </ul> </li> <li><del>ability to mark tasks as done</del></li> <li><del>notes on tasks</del></li> </ul> </li> <li><p>Admin / Contact</p> <ul> <li>Add/implement analytics</li> <li>Send messages from w/i the app using mail system<ul> <li>user will receive a copy</li> </ul> </li> <li>District portal</li> <li>Admin portal<ul> <li>create portal based on /portal but with panel in place of calendar</li> <li>ability to fix errors that might impede usability for students</li> <li>ability to view student surveys in bulk - form-type</li> <li>force reload student sessions to update / quickfix</li> <li>add more protections to teacher mode</li> </ul> </li> </ul> </li> <li><p>Student involvement</p> <ul> <li>way for students to access teacher features for their peers / as a proxy for the teacher</li> <li>student self &quot;classes&quot; for things specific to them to keep track of, all in one place</li> </ul> </li> <li><p>Tasks</p> <ul> <li>AI/ML/Maybe just hardcoded features<ul> <li><strong>auto-suggested link names based on domain</strong></li> <li>auto-suggested task types based on title</li> <li>automatic / algorithm-driven study suggestions?</li> </ul> </li> <li>Links<ul> <li>allow / encourage links to other classes / through selector</li> <li>allowed outlink domains set by district?</li> </ul> </li> <li>Create studying / prep pages<ul> <li>really use the data/info that we have, let them create study schedules for themselves</li> <li><del>see upcoming assignments and mark them as done</del></li> </ul> </li> <li><del>fixes on edit page</del></li> <li><del>process only changed tasks server-side / cancel runs on double changes</del></li> <li>~~store proxy in class doc - load from there for efficiency / read &amp; write count~</li> <li><del>disallow finish when link still in-progress</del></li> <li><del>drag tasks on calendar to change date</del></li> </ul> </li> <li><p>Surveys</p> <ul> <li>Create survey / check-in modal<ul> <li>add graphics / illustrations (on weekly at least)</li> <li>time-based variations<ul> <li>on mondays, more in-depth, before first use</li> <li><del>during the week, short non-intrusive</del></li> </ul> </li> </ul> </li> <li><del>make a way for users to see their own responses over time</del><ul> <li>include major assignments in this timeline</li> </ul> </li> <li>weekly / major surveys</li> <li><del>show upcoming tasks at end of daily surveys</del></li> <li><del>daily surveys</del></li> </ul> </li> <li><p>Classes</p> <ul> <li><strong>add from pre-set list</strong><ul> <li>setup from json / claim pre-set class feature (cloud?)</li> </ul> </li> <li>display join code to class</li> <li><del>class view page</del></li> <li><del>make classes editable</del></li> <li><del>join from code</del></li> </ul> </li> <li><p>Onboarding</p> <ul> <li><strong>add keyboard shortcuts page on (/ or ?)</strong></li> <li><strong>setup from pre-defined classes</strong>, add your own<ul> <li><strong>tutorial videos</strong><ul> <li>View calendar</li> <li>Complete tasks on study page</li> <li>Link accounts</li> <li>View stats</li> </ul> </li> </ul> </li> <li><del>large modal type for intro</del></li> <li><del>tutorial modal set up</del></li> <li><del>where to find everything</del><ul> <li><del>ui tutorial</del></li> </ul> </li> <li><del>better logout prompt</del></li> <li><del>add first class</del></li> <li><del>join modal</del></li> </ul> </li> <li><p>Emails</p> <ul> <li>exclude tasks marked as finished from weekly summary emails</li> <li>setup cloud functions to send <strong>daily</strong>(?) emails</li> <li><del>setup cloud functions to send task change/create/archive emails</del></li> <li><del>setup cloud functions to send weekly emails</del></li> <li><del>link personal account email</del></li> <li><del>email template</del></li> <li><del>setup email server</del></li> <li><del>send from firebase doc</del></li> </ul> </li> <li><p>Accounts/ Customization</p> <ul> <li>fix linking feature??</li> <li><del>Better prefs</del><ul> <li><del>add email prefs</del></li> <li><del>save theme under prefs, rather than its own key</del></li> <li><del>add the option to trust another email / oauth account with access to your account</del><ul> <li><del>good for phones and such, save to prefs of the acc, then check either request oauth is student, or request oauth is in student prefs.trusted</del></li> </ul> </li> </ul> </li> <li><del>Make art assets</del><ul> <li><del>implement animations</del><ul> <li><del>loading imgs</del></li> </ul> </li> <li><del>implement transitions</del><ul> <li><del>for modals</del></li> </ul> </li> <li><del>Create promotional materials</del><ul> <li><del>update og:img</del></li> <li><del>create public/img/promo imgs</del></li> </ul> </li> <li><del>Create contact page</del><ul> <li><del>fun lighthearted art stuff</del></li> </ul> </li> </ul> </li> <li><del>create email prefs screen</del></li> <li><del>finish personal account connection</del></li> <li><del>create prefs screen</del></li> <li><del>allow connected personal / non-school email</del><ul> <li><del>settings from portal / email links</del></li> </ul> </li> </ul> </li> <li><p><del>Mobile Interface</del></p> <ul> <li><del>pages on mobile instead of sidebars</del></li> </ul> </li> <li><p><del>Non-User-Facing</del></p> <ul> <li><del>cleanup code / write docs</del> <del>Tasks / Calendar Objects</del></li> <li><del>note type / generic info w/o color</del></li> <li><del>regular assignment / generic task type</del></li> <li><del>id tasks for easier load/share</del></li> <li><del>view task by task id</del></li> <li><del>less cluttered scheduling options (use dropdown)</del></li> <li><del>convert /task to /view/{type}/{info}</del></li> <li><del>add editing functionality</del></li> <li><del>confirm task delete</del></li> </ul> </li> <li><p><del>Modal features</del></p> <ul> <li><del>fix overflow on very small screens</del></li> <li><del>redirect modal / outlink interceptor</del></li> </ul> </li> </ul> <h2 id=\\\"specific-milestones--tasks-aarush\\\">Specific milestones / tasks (Aarush)</h2> <ul> <li>Create backend<ul> <li>Algorithms<ul> <li>Class Spread: N/A</li> </ul> </li> <li>Send out emails to students thru firebase?</li> </ul> </li> <li>a cleaner system to integrate classes<ul> <li>Structure teacher add/drop class json update algorithm</li> </ul> </li> <li><del>Create data for static classes</del></li> </ul> \";\n// Exports\nexport default code;","<template>\r\n  <div\r\n    class=\"toggle_switch\"\r\n    :class=\"{ toggle_switch__on: is_on, transition: !loads }\"\r\n    :disabled=\"disabled\"\r\n    @click=\"toggle\"\r\n  >\r\n    <div v-if=\"loads\" class=\"toggle_switch__loading\" :class=\"{ is_loading: loading }\">\r\n      <span class=\"loading_bg\"></span>\r\n    </div>\r\n    <div class=\"toggle_switch_knob\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"ToggleBar\",\r\n  props: {\r\n    value: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    loads: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n  emits: [\"update\"],\r\n  data() {\r\n    return {\r\n      is_on: this.value,\r\n      loading: false,\r\n    };\r\n  },\r\n  watch: {\r\n    value() {\r\n      this.is_on = this.value;\r\n      this.loading = false;\r\n    },\r\n  },\r\n  methods: {\r\n    toggle() {\r\n      if (this.disabled) return;\r\n      if (this.loads) {\r\n        this.loading = true;\r\n      } else {\r\n        this.is_on = !this.is_on;\r\n      }\r\n      this.$emit(\"update\", !this.is_on);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.toggle_switch {\r\n  display: inline-block;\r\n  overflow: hidden;\r\n  user-select: none;\r\n  font-size: 1.4em;\r\n  width: 2.2em;\r\n  height: 1em;\r\n  border-radius: var(--radius-button-display);\r\n  background-color: var(--color-button-display);\r\n  position: relative;\r\n  cursor: pointer;\r\n  opacity: 0.8;\r\n}\r\n.toggle_switch.transition {\r\n  transition: background-color 0.2s ease-in-out;\r\n}\r\n.toggle_switch[disabled=\"true\"] {\r\n  opacity: 0.5;\r\n  cursor: not-allowed;\r\n}\r\n.toggle_switch_knob {\r\n  width: calc(1em - 6px);\r\n  height: calc(1em - 6px);\r\n  border-radius: calc(0.7 * var(--radius-button-display));\r\n  background-color: var(--color-on-overlay-input);\r\n  position: absolute;\r\n  top: 3px;\r\n  left: 3px;\r\n\r\n  opacity: 0.3;\r\n}\r\n.toggle_switch .toggle_switch_knob {\r\n  transition: left 0.1s ease-in-out, scale 0.1s ease-in-out;\r\n}\r\n.toggle_switch.transition .toggle_switch_knob {\r\n  transition: left 0.2s ease-in-out, background-color 0.2s ease-in-out, opacity 0.2s ease-in-out,\r\n    scale 0.1s ease-in-out;\r\n}\r\nmain.parent:not(.simplified) .toggle_switch:not([disabled=\"true\"]):hover .toggle_switch_knob {\r\n  left: 6px;\r\n  scale: 0.9;\r\n}\r\n\r\nmain.parent:not(.simplified)\r\n  .toggle_switch:not([disabled=\"true\"]).toggle_switch__on:hover\r\n  .toggle_switch_knob {\r\n  left: calc(100% - 1em);\r\n}\r\n\r\n.toggle_switch__on {\r\n  background-color: var(--color-theme-alt);\r\n}\r\n.toggle_switch__on .toggle_switch_knob {\r\n  left: calc(100% - 1em + 3px);\r\n  background-color: var(--color-theme);\r\n  opacity: 1;\r\n}\r\n\r\n.toggle_switch__loading {\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 2;\r\n  background-color: var(--color-button-display);\r\n  opacity: 0;\r\n  transition: opacity 0.05s ease-in-out;\r\n  transition-delay: 0.1s;\r\n}\r\n.toggle_switch__loading.is_loading {\r\n  opacity: 1;\r\n}\r\n.toggle_switch__loading > .loading_bg {\r\n  display: block;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-size: 1.5em;\r\n  filter: invert(0.8);\r\n}\r\n</style>\r\n","import { render } from \"./ToggleBar.vue?vue&type=template&id=521703de&scoped=true\"\nimport script from \"./ToggleBar.vue?vue&type=script&lang=js\"\nexport * from \"./ToggleBar.vue?vue&type=script&lang=js\"\n\nimport \"./ToggleBar.vue?vue&type=style&index=0&id=521703de&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\sande\\\\Documents\\\\GitHub\\\\mvtime.github.io\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-521703de\"]])\n\nexport default __exports__","<template>\r\n  <main class=\"todo center-1000\" :class=\"{ show_completed: showCompleted }\">\r\n    <div class=\"todo_header\">\r\n      <h2 class=\"header_style\">Feature Roadmap</h2>\r\n      <br />\r\n      <h3 class=\"secondary_home_text\">\r\n        Here's a peek at our planned features. We're always open to suggestions, just\r\n        <router-link class=\"click-action\" to=\"/contact\">shoot us a message</router-link>!\r\n      </h3>\r\n      <br />\r\n      <div v-if=\"renderedTodo\" class=\"toggle_line\">\r\n        <ToggleBar\r\n          class=\"click-action\"\r\n          :value=\"showCompleted\"\r\n          @update=\"showCompleted = !showCompleted\"\r\n          :loads=\"false\"\r\n        />&nbsp;\r\n        <span>Show completed items</span>\r\n      </div>\r\n    </div>\r\n    <hr />\r\n    <div class=\"todo_body md mono\">\r\n      <div v-if=\"renderedTodo\" v-html=\"renderedTodo\"></div>\r\n      <div v-else class=\"todo_placeholder\">\r\n        <img alt=\"Loading...\" class=\"loading_icon\" />\r\n      </div>\r\n    </div>\r\n  </main>\r\n</template>\r\n\r\n<script>\r\nimport \"@/assets/style/markdown.css\";\r\nimport ToggleBar from \"@/components/ToggleBar.vue\";\r\nexport default {\r\n  name: \"TodoView\",\r\n  components: {\r\n    ToggleBar,\r\n  },\r\n  data() {\r\n    return {\r\n      renderedTodo: \"\",\r\n      showCompleted: false,\r\n    };\r\n  },\r\n  computed: {\r\n    todoMarkdown() {\r\n      try {\r\n        return require(\"@/assets/todo.md\");\r\n      } catch (e) {\r\n        return null;\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    // The content is already converted to HTML by markdown-loader and html-loader\r\n    this.renderedTodo = this.todoMarkdown?.default;\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.toggle_line {\r\n  /* font-size: 14px; */\r\n  line-height: 1.75;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  gap: 0.5em;\r\n}\r\nmain.todo {\r\n  height: 100%;\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n}\r\nmain.todo .todo_header {\r\n  max-width: 600px;\r\n}\r\nmain.todo > hr {\r\n  width: 100%;\r\n  margin: 20px 0;\r\n  border: 0;\r\n  height: 3px;\r\n  border-radius: 4px;\r\n  opacity: 0.8;\r\n  background-image: linear-gradient(to right, var(--color-theme) 50px, rgba(0, 0, 0, 0) 75%);\r\n}\r\n.todo_body {\r\n  opacity: 0.8;\r\n  line-height: 1.7em;\r\n  font-family: Lato, Inter, sans-serif;\r\n  width: 100%;\r\n  max-width: 1000px;\r\n  cursor: default;\r\n}\r\n\r\n.todo_placeholder {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-grow: 1;\r\n}\r\nh3.secondary_home_text {\r\n  font-size: 20px;\r\n  line-height: 32px;\r\n}\r\n</style>\r\n<style>\r\n.todo_body ul ul > li:has(> del) {\r\n  opacity: 0.5;\r\n  scale: 0.95;\r\n  transform-origin: -1em;\r\n  line-height: 1.15em;\r\n  transition: opacity 0.2s ease-in-out;\r\n}\r\n.todo:not(.show_completed) li:has(> del) {\r\n  display: none !important;\r\n}\r\n\r\n.todo_body ul > li:hover {\r\n  opacity: 1;\r\n}\r\nmain.todo strong,\r\nmain.todo b {\r\n  background-color: var(--color-theme);\r\n  color: var(--color-theme-accent);\r\n  padding: 0 0.3em;\r\n}\r\n</style>\r\n","import { render } from \"./TodoView.vue?vue&type=template&id=778265a4&scoped=true\"\nimport script from \"./TodoView.vue?vue&type=script&lang=js\"\nexport * from \"./TodoView.vue?vue&type=script&lang=js\"\n\nimport \"./TodoView.vue?vue&type=style&index=0&id=778265a4&scoped=true&lang=css\"\nimport \"./TodoView.vue?vue&type=style&index=1&id=778265a4&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\sande\\\\Documents\\\\GitHub\\\\mvtime.github.io\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-778265a4\"]])\n\nexport default __exports__"],"names":["code","_createElementVNode","class","_hoisted_2","_createElementBlock","_normalizeClass","toggle_switch__on","$data","is_on","transition","$props","loads","disabled","onClick","_cache","args","$options","toggle","is_loading","loading","_hoisted_4","name","props","value","type","Boolean","default","emits","data","this","watch","methods","$emit","__exports__","render","alt","_hoisted_12","show_completed","showCompleted","_hoisted_1","_hoisted_3","_createVNode","_component_router_link","to","_hoisted_5","renderedTodo","_hoisted_6","_component_ToggleBar","onUpdate","$event","_hoisted_7","_hoisted_8","_hoisted_9","innerHTML","_hoisted_11","_hoisted_13","components","ToggleBar","computed","todoMarkdown","require","e","mounted"],"sourceRoot":""}